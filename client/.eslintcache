[{"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\index.js":"1","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\App.js":"2","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\reportWebVitals.js":"3","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\LandingPage.js":"4","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Home.js":"5","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\RealEstateMainPage.js":"6","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Signup.js":"7","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\ChangePassword.js":"8","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\InvestmentRec.js":"9","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Login.js":"10","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\StockTable.js":"11","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\StockMainPage.js":"12","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\ChangeEmail.js":"13","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\ForgotPassword.js":"14","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\DeleteAccount.js":"15","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\config\\fire.js":"16","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\LandingPageHeader.js":"17","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Footer.js":"18","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PropertyHeader.js":"19","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Header.js":"20","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Slider.js":"21","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\AreaSidebarData.js":"22","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PredictedStock.js":"23","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\HomePlotMenu.js":"24","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PredictedPlots.js":"25","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PlotChart.js":"26","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\SidebarData.js":"27","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\TermsandConditions.js":"28"},{"size":1863,"mtime":1622383175058,"results":"29","hashOfConfig":"30"},{"size":3115,"mtime":1622640108537,"results":"31","hashOfConfig":"30"},{"size":377,"mtime":1622383254978,"results":"32","hashOfConfig":"30"},{"size":8561,"mtime":1622383186179,"results":"33","hashOfConfig":"30"},{"size":16748,"mtime":1622383134212,"results":"34","hashOfConfig":"30"},{"size":905,"mtime":1622383250030,"results":"35","hashOfConfig":"30"},{"size":10456,"mtime":1622296628945,"results":"36","hashOfConfig":"30"},{"size":8385,"mtime":1622381834540,"results":"37","hashOfConfig":"30"},{"size":7488,"mtime":1622633116539,"results":"38","hashOfConfig":"30"},{"size":3375,"mtime":1622383343889,"results":"39","hashOfConfig":"30"},{"size":9611,"mtime":1622638170243,"results":"40","hashOfConfig":"30"},{"size":22218,"mtime":1622731237039,"results":"41","hashOfConfig":"30"},{"size":7676,"mtime":1622381810370,"results":"42","hashOfConfig":"30"},{"size":2306,"mtime":1622381859156,"results":"43","hashOfConfig":"30"},{"size":4963,"mtime":1622381844096,"results":"44","hashOfConfig":"30"},{"size":520,"mtime":1622382467257,"results":"45","hashOfConfig":"30"},{"size":543,"mtime":1622382155591,"results":"46","hashOfConfig":"30"},{"size":1121,"mtime":1622639979939,"results":"47","hashOfConfig":"30"},{"size":533,"mtime":1622382252402,"results":"48","hashOfConfig":"30"},{"size":11352,"mtime":1622730511099,"results":"49","hashOfConfig":"30"},{"size":2524,"mtime":1622382293716,"results":"50","hashOfConfig":"30"},{"size":5559,"mtime":1622382274233,"results":"51","hashOfConfig":"30"},{"size":7754,"mtime":1622631038956,"results":"52","hashOfConfig":"30"},{"size":15289,"mtime":1622384168942,"results":"53","hashOfConfig":"30"},{"size":6898,"mtime":1622631336408,"results":"54","hashOfConfig":"30"},{"size":1713,"mtime":1622382166375,"results":"55","hashOfConfig":"30"},{"size":552,"mtime":1622382282389,"results":"56","hashOfConfig":"30"},{"size":11645,"mtime":1622382659515,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"tabzg6",{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"61"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"61"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"61"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"61"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"61"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"61"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\index.js",["133","134","135"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst initialUserState = {\r\n  user: null,\r\n  isAuth: false,\r\n};\r\nconst userReducer = (state = initialUserState, action) => {\r\n  switch (action.type) {\r\n    case \"nullUser\":\r\n      state = {\r\n        ...state,\r\n        user: null,\r\n        isAuth: false,\r\n      };\r\n    case \"setUser\":\r\n      state = {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuth: true,\r\n      };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\nconst initialCompState = {\r\n  inputText: \"\",\r\n};\r\nconst stockReducer = (state = initialCompState, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_INPUT\":\r\n      state = {\r\n        inputText: action.payload,\r\n      };\r\n      break;\r\n    default:\r\n      state = initialCompState;\r\n  }\r\n  return state;\r\n};\r\n\r\n//personal logger\r\nconst myLogger = (store) => (next) => (action) => {\r\n  console.log(\"logged action: \", action);\r\n  next(action);\r\n};\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    user: userReducer,\r\n    stock: stockReducer,\r\n  }),\r\n  {},\r\n  compose(applyMiddleware(createLogger()))\r\n);\r\n\r\nstore.subscribe(() => {\r\n  console.log(\"store updated!\", store.getState());\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["136","137"],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\App.js",["138"],"import React from \"react\";\r\nimport Home from \"./Home\";\r\nimport Signup from \"./Signup\";\r\nimport Login from \"./Login\";\r\nimport \"./StyleSheets/Home.css\";\r\nimport RealEstateMain from \"./RealEstateMainPage\";\r\nimport ChangeEmail from \"./Components/ChangeEmail\";\r\nimport ChangePassword from \"./Components/ChangePassword\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport LandingPage from \"./LandingPage\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport fire from \"./config/fire\";\r\nimport ForgotPassword from \"./Components/ForgotPassword\";\r\nimport StockMainPage from \"./Components/StockMainPage\";\r\nimport StockTable from \"./Components/StockTable\";\r\nimport DeleteAccount from \"./Components/DeleteAccount\";\r\nimport InvestmentRec from \"./Components/InvestmentRec\";\r\nimport TermsandConditions from \"./Components/TermsandConditions\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: this.props.user.user,\r\n      isAuth: this.props.user.isAuth,\r\n    };\r\n\r\n    this.authListener = this.authListener.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.authListener();\r\n  }\r\n\r\n  authListener() {\r\n    fire.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.setState({ user });\r\n        this.props.confirmUserAuth(user);\r\n      } else {\r\n        this.setState({ user: null, isAuth: false });\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Route path=\"/\" exact component={LandingPage} />\r\n          <Route\r\n            path=\"/Home\"\r\n            exact\r\n            issAuth={this.props.setisAuth}\r\n            component={Home}\r\n          />\r\n          <Route path=\"/registration\" exact component={Signup} />\r\n          <Route path=\"/login\" exact component={Login} />\r\n          <Route\r\n            path=\"/RealEstatePrediction\"\r\n            component={RealEstateMain}\r\n            exact\r\n          />\r\n          <Route path=\"/StockPrediction\" component={StockMainPage} exact />\r\n          <Route path=\"/ChangeEmail\" component={ChangeEmail} exact />\r\n          <Route path=\"/StockTable\" component={StockTable} exact />\r\n          <Route path=\"/ChangePassword\" component={ChangePassword} exact />\r\n          <Route path=\"/DeleteAccount\" component={DeleteAccount} exact />\r\n          <Route path=\"/ForgotPassword\" component={ForgotPassword} exact />\r\n          <Route\r\n            path=\"/InvestmentReccomendation\"\r\n            component={InvestmentRec}\r\n            exact\r\n          />\r\n\r\n          <Route\r\n            path=\"/TermsandConditions\"\r\n            component={TermsandConditions}\r\n            exact\r\n          />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    //initialUserState\r\n    user: state.user,\r\n    // math: state.mathReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    confirmUserAuth: (user) => {\r\n      dispatch({\r\n        type: \"setUser\",\r\n        payload: user,\r\n      });\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\reportWebVitals.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\LandingPage.js",["139","140"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LandingPageHeader from \"./Components/LandingPageHeader\";\r\nimport Footer from \"./Components/Footer\";\r\nimport \"./StyleSheets/LandingPage.css\";\r\nimport logo from \"./StyleSheets/images/gra.jpg\";\r\nimport WOW from \"wowjs\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport femaleImg1 from \"./StyleSheets/images/female-avatar-12-774634.png\";\r\nimport femaleImg2 from \"./StyleSheets/images/female-avatar-2.png\";\r\nimport maleImg1 from \"./StyleSheets/images/male-avatar-1.png\";\r\nimport maleImg2 from \"./StyleSheets/images/male-avatar-2.png\";\r\nimport * as RiIcon from \"react-icons/ri\";\r\nimport * as GiIcon from \"react-icons/gi\";\r\nimport * as FaIcon from \"react-icons/fa\";\r\nconst useStyles = (theme) => ({\r\n  large: {\r\n    width: theme.spacing(9),\r\n    height: theme.spacing(9),\r\n  },\r\n});\r\n\r\nclass LandingPage extends React.Component {\r\n  componentDidMount() {\r\n    new WOW.WOW().init();\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className=\"landing-page-main\">\r\n        <div>\r\n          <LandingPageHeader />\r\n        </div>\r\n        <div className=\"landing-heading\">\r\n          <div class=\"bg-curve\">\r\n            <div>\r\n              <h1>WELCOME TO INVESCO</h1>\r\n              <p className=\"intro-para\">\r\n                Want to invest but don't know where to? You've come to the right\r\n                place!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"landing-info\">\r\n          <div\r\n            className=\"landing-info-box wow bounceInLeft\"\r\n            data-wow-duration=\"1.8s\"\r\n          >\r\n            <h2>Easy For Everyone</h2>\r\n            <div className=\"para\">\r\n              <p>\r\n                No technical skills required! No experience needed in stock or\r\n                property investment. INVESCO provides access to strategies\r\n                created by experts and all prices are predicted based on those\r\n                strategies\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"landing-info-box wow bounceInRight\"\r\n            data-wow-duration=\"1.8s\"\r\n          >\r\n            <h2>Best For Beginners</h2>\r\n            <div className=\"para\">\r\n              <p>\r\n                With the aid of the investment recommendation, INVESCO uses the\r\n                already predicted data and provides an investment recommendation\r\n                making it really easy for beginners to invest.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"landing-content\">\r\n          <div className=\"graph-image\">\r\n            <img alt=\"image\" src={logo} />\r\n          </div>\r\n          <div className=\"landing-content-stuff\">\r\n            <div className=\"landing-content-heading\">\r\n              <h1> What we provide</h1>\r\n            </div>\r\n            <div className=\"intro\">\r\n              <div className=\"intro-timeline\">\r\n                <div className=\"intro-timeline-box\">\r\n                  <div className=\"intro-timeline-box-circle\">\r\n                    <RiIcon.RiStockFill />\r\n                  </div>\r\n                </div>\r\n                <div className=\"intro-timeline-box-line\"></div>\r\n                <div className=\"intro-timeline-box\">\r\n                  <div className=\"intro-timeline-box-circle\">\r\n                    <GiIcon.GiHouse />\r\n                  </div>\r\n                </div>\r\n                <div className=\"intro-timeline-box-line\"></div>\r\n                <div className=\"intro-timeline-box\">\r\n                  <div className=\"intro-timeline-box-circle\">\r\n                    <FaIcon.FaHandHoldingUsd />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"intro-timeline-content\">\r\n                <div>\r\n                  <h3>Stock Price Predictor</h3>\r\n                  <p>\r\n                    Get predicted stock prices for the companies in the KSE100\r\n                    index. Change your models and decide when and where to\r\n                    invest!{\" \"}\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <h3>Real Estate Price Predictor</h3>\r\n                  <p>\r\n                    Looking for property investment? Our system provides\r\n                    predicted real estate prices in Islamabad.\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <h3>Investment Recommendation</h3>\r\n                  <p>\r\n                    Don't know where to invest? Get a system recommendation and\r\n                    make your life easy!\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"spacer\">\r\n          <span></span>\r\n        </div>\r\n        <div className=\"detail-row\">\r\n          <div className=\"detail-box\">\r\n            <p className=\"numbers\">2K+</p>\r\n            <p className=\"numbers-label\">Global Users</p>\r\n          </div>\r\n          <div className=\"detail-box\">\r\n            <p className=\"numbers\">100+</p>\r\n            <p className=\"numbers-label\">Areas</p>\r\n          </div>\r\n          <div className=\"detail-box\">\r\n            <p className=\"numbers\">99+</p>\r\n            <p className=\"numbers-label\">Stock Companies</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"testimonials\">\r\n          <div className=\"testimonials-intro\">\r\n            <h2>\r\n              <span>Testimonials</span>\r\n            </h2>\r\n            <h3>What Our Clients Say</h3>\r\n          </div>\r\n          <div class=\"slider\">\r\n            <input\r\n              type=\"radio\"\r\n              name=\"slider\"\r\n              title=\"slide1\"\r\n              class=\"slider__nav\"\r\n            />\r\n            <input\r\n              type=\"radio\"\r\n              name=\"slider\"\r\n              title=\"slide2\"\r\n              class=\"slider__nav\"\r\n            />\r\n            <input\r\n              type=\"radio\"\r\n              name=\"slider\"\r\n              title=\"slide3\"\r\n              class=\"slider__nav\"\r\n            />\r\n            <input\r\n              type=\"radio\"\r\n              name=\"slider\"\r\n              title=\"slide4\"\r\n              class=\"slider__nav\"\r\n            />\r\n            <div class=\"slider__inner\">\r\n              <div class=\"slider__contents\">\r\n                <Avatar\r\n                  alt=\"Justin Sharp\"\r\n                  src={maleImg2}\r\n                  className={classes.large}\r\n                />\r\n                <h2 class=\"slider__caption\">Justin Sharp</h2>\r\n                <p class=\"slider__txt\">\r\n                  \"You won't regret it. I have gotten at least 50 times the\r\n                  value from investment.\"\r\n                </p>\r\n              </div>\r\n              <div class=\"slider__contents\">\r\n                <Avatar\r\n                  alt=\"Travis Howard\"\r\n                  src={maleImg1}\r\n                  className={classes.large}\r\n                />\r\n\r\n                <h2 class=\"slider__caption\">Travis Howard</h2>\r\n                <p class=\"slider__txt\">\r\n                  \"INVESCO has got everything I need. Best. Plaform. Ever! It\r\n                  did exactly what you said it does. I would also like to say\r\n                  thank you to all your staff.\"\r\n                </p>\r\n              </div>\r\n              <div class=\"slider__contents\">\r\n                <Avatar\r\n                  alt=\"Cindy Joe\"\r\n                  src={femaleImg1}\r\n                  className={classes.large}\r\n                />\r\n                <h2 class=\"slider__caption\">Cindy Joe</h2>\r\n                <p class=\"slider__txt\">\r\n                  \"Keep up the excellent work. I just can't get enough of this!\"\r\n                </p>\r\n              </div>\r\n              <div class=\"slider__contents\">\r\n                <Avatar\r\n                  alt=\"Hannah Baker\"\r\n                  src={femaleImg2}\r\n                  className={classes.large}\r\n                />\r\n                <h2 class=\"slider__caption\">Hannah Baker</h2>\r\n                <p class=\"slider__txt\">\r\n                  \"Absolutely wonderful! This has impressed me on multiple\r\n                  levels. Thanks INVESCO!\"\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(LandingPage);\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Home.js",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./Components/Header\";\r\nimport Footer from \"./Components/Footer\";\r\nimport \"./StyleSheets/Header.css\";\r\nimport CarouselPage from \"./Components/Slider\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport stockpic from \"./StyleSheets/images/business-finance-terms-and-definitions-1-2.jpg\";\r\nimport investpic from \"./StyleSheets/images/image.img.450.225.20191016091944.jpg\";\r\nimport propertypic from \"./StyleSheets/images/Property-Investment-Tips.jpg\";\r\nimport introStockPic from \"./StyleSheets/images/home-stock-prediction-intro.jpg\";\r\nimport introPropertyPic from \"./StyleSheets/images/home-property-prediction-intro.jpg\";\r\nimport introIRPic from \"./StyleSheets/images/home-IR-intro.jpg\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport WOW from \"wowjs\";\r\nimport Login from \"./Login\";\r\nimport \"./StyleSheets/Footer.css\";\r\nimport { connect } from \"react-redux\";\r\nimport fire from \"./config/fire\";\r\nimport \"./StyleSheets/Header.css\";\r\n\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport clsx from \"clsx\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport StockTable from \"./Components/StockTable\";\r\n\r\nconst theme = createMuiTheme({});\r\n\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n\r\n    minHeight: \"300px\",\r\n    borderRadius: \"10px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: \"70px\",\r\n      width: \"100%\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  homeContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n    flexWrap: \"wrap\",\r\n    width: \"100%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    alignContent: \"center\",\r\n    paddingTop: 40,\r\n  },\r\n  picii: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"#7BC7F9\",\r\n      transition: \"1000ms\",\r\n      opacity: 0.8,\r\n    },\r\n  },\r\n  btn: {\r\n    paddingRight: \"20px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#7BC7F9\",\r\n      transition: \"1000ms\",\r\n    },\r\n  },\r\n});\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      homescreen: true,\r\n      sidebar: false,\r\n      right: false,\r\n    };\r\n    this.checkSide = this.checkSide.bind(this);\r\n  }\r\n\r\n  toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ ...this.state, [anchor]: open });\r\n  };\r\n\r\n  componentDidMount() {\r\n    new WOW.WOW().init();\r\n  }\r\n\r\n  checkSideBar = (item) => {\r\n    this.setState({\r\n      homescreen: item,\r\n    });\r\n  };\r\n  checkSide = (childValue) => {\r\n    this.setState({\r\n      sidebar: childValue,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const isAuthenticated = this.props.user.isAuth;\r\n\r\n    const user = fire.auth().currentUser;\r\n\r\n    if (!isAuthenticated) {\r\n      return <Login />;\r\n    } else {\r\n      return (\r\n        // ()=>{\r\n        //     this.setState({\r\n        //     homescreen:!this.state.homescreen,\r\n        //     sidebar : !this.state.sidebar\r\n        // })}\r\n        <div>\r\n          {/*############################################## Header ############################################## */}\r\n          <Header\r\n            data={this.checkSideBar.bind(this)}\r\n            dataSide={this.checkSide.bind(this)}\r\n          />\r\n\r\n          {/*############################################## Slider ############################################## */}\r\n          <div>\r\n            <CarouselPage />\r\n          </div>\r\n          <div className=\"home-main\">\r\n            {/* <div className='home-main-heading wow pulse' data-wow-duration=\"2\" data-wow-iteration=\"3\" data-wow-offset=\"30\" data-wow-duration=\"1.7s\">\r\n                                <h2><span>Welcome to INVESCO!</span></h2>\r\n                            </div> */}\r\n            <div\r\n              className=\"home-main-heading\"\r\n              data-wow-duration=\"2\"\r\n              data-wow-iteration=\"3\"\r\n              data-wow-offset=\"30\"\r\n              data-wow-duration=\"1.7s\"\r\n            >\r\n              <h2>\r\n                <span>Welcome to INVESCO!</span>\r\n              </h2>\r\n            </div>\r\n            {/*############################################## CARDS ############################################## */}\r\n\r\n            <div>\r\n              <div className={classes.homeContent}>\r\n                <Card id=\"stockCard\" className={classes.root}>\r\n                  <CardActionArea\r\n                    onClick={() => this.props.history.push(\"/StockTable\")}\r\n                    className={classes.picii}\r\n                  >\r\n                    <CardMedia\r\n                      style={{ height: 200 }}\r\n                      component=\"img\"\r\n                      alt=\"Stock Predictor\"\r\n                      height=\"140\"\r\n                      image={stockpic}\r\n                      title=\"Stock Predictor\"\r\n                    />\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        Stock Price Predictor\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        Here you will be able to view stock companies of the\r\n                        KSE100 index.\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions>\r\n                    <Button\r\n                      className={classes.btn}\r\n                      onClick={() => this.props.history.push(\"/StockTable\")}\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Go\r\n                    </Button>\r\n                    <Button\r\n                      className={classes.btn}\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Learn More\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n\r\n                <Card id=\"propertyCard\" className={classes.root}>\r\n                  <CardActionArea\r\n                    onClick={() =>\r\n                      this.props.history.push(\"/RealEstatePrediction\")\r\n                    }\r\n                    className={classes.picii}\r\n                  >\r\n                    <CardMedia\r\n                      style={{ height: 200, width: 350 }}\r\n                      component=\"img\"\r\n                      alt=\"RealEstate Predictor\"\r\n                      height=\"140\"\r\n                      image={propertypic}\r\n                      title=\"RealEstate Predictor\"\r\n                    />\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        Real-Estate Price Predictor\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        Here you will be able to view areas in Islamabad and\r\n                        decide which areas to invest into.\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions>\r\n                    <Button\r\n                      className={classes.btn}\r\n                      onClick={() =>\r\n                        this.props.history.push(\"/RealEstatePrediction\")\r\n                      }\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Go\r\n                    </Button>\r\n                    <Button\r\n                      className={classes.btn}\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Learn More\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n                <Card id=\"IRCard\" className={classes.root}>\r\n                  <CardActionArea\r\n                    onClick={() =>\r\n                      this.props.history.push(\"/InvestmentReccomendation\")\r\n                    }\r\n                    className={classes.picii}\r\n                  >\r\n                    <CardMedia\r\n                      style={{ height: 200 }}\r\n                      component=\"img\"\r\n                      alt=\"Investment Recommendation\"\r\n                      height=\"140\"\r\n                      image={investpic}\r\n                      title=\"Investment Recommendation\"\r\n                    />\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        Investment Recommendation\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        Our personal investment recommender. This will tell you\r\n                        where you need to invest right now!\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions>\r\n                    <Button\r\n                      className={classes.btn}\r\n                      onClick={() =>\r\n                        this.props.history.push(\"/InvestmentReccomendation\")\r\n                      }\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Go\r\n                    </Button>\r\n                    <Button\r\n                      className={classes.btn}\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Learn More\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/*############################################## HOME INTRO ############################################## */}\r\n          <div className=\"home-intro\">\r\n            <div className=\"home-intro-stock\">\r\n              <div\r\n                className=\"wow slideInLeft\"\r\n                data-wow-duration=\"1\"\r\n                data-wow-offset=\"100\"\r\n                data-wow-duration=\"1.7s\"\r\n              >\r\n                <img src={introStockPic}></img>\r\n              </div>\r\n              <div className=\"home-intro-stock-content\">\r\n                <div className=\"home-intro-stock-content-heading\">\r\n                  <h2>\r\n                    <span>\r\n                      <a href=\"#stockCard\">Stock Predictor</a>\r\n                    </span>\r\n                  </h2>\r\n                </div>\r\n                <div\r\n                  id=\"stockinfo\"\r\n                  className=\"home-intro-stock-content-para wow fadeIn\"\r\n                  data-wow-duration=\"1\"\r\n                  data-wow-offset=\"100\"\r\n                  data-wow-duration=\"5s\"\r\n                >\r\n                  <p>\r\n                    Our Stock Predictor permits to show a few specialized\r\n                    markers for a solitary index on a similar graph. Our\r\n                    predictor utilizes multiple algorithms and techniques to\r\n                    predict the future stock prices. Our newest options are the\r\n                    alert and subscribe options, where you can add alerts to a\r\n                    company when its stock reaches a specific point. Also\r\n                    subscribe to companies in which you are interested in to get\r\n                    notifications.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"home-intro-property\">\r\n              <div\r\n                className=\"wow slideInRight\"\r\n                data-wow-duration=\"1\"\r\n                data-wow-offset=\"140\"\r\n                data-wow-duration=\"1.7s\"\r\n              >\r\n                <img src={introPropertyPic}></img>\r\n              </div>\r\n              <div className=\"home-intro-property-content\">\r\n                <div className=\"home-intro-property-content-heading\">\r\n                  <h2 id=\"propertyinfo\">\r\n                    <span>\r\n                      <a href=\"#propertyCard\">Property Predictor</a>\r\n                    </span>\r\n                  </h2>\r\n                </div>\r\n                <div\r\n                  className=\"home-intro-property-content-para wow fadeIn\"\r\n                  data-wow-duration=\"1\"\r\n                  data-wow-offset=\"140\"\r\n                  data-wow-duration=\"5s\"\r\n                >\r\n                  <p>\r\n                    Find out where to invest in islamabad if you are interested\r\n                    in real-estate investment. Our real-estate price predictor\r\n                    covers areas in Islamabad and will tell you the average\r\n                    price per Marla or Kanal. Our newest functionality is the\r\n                    House Price Calculator where you will be able to find out\r\n                    your house price based on the provided inputs.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"home-intro-stock\">\r\n              <div\r\n                className=\"wow slideInLeft\"\r\n                data-wow-duration=\"1\"\r\n                data-wow-offset=\"180\"\r\n                data-wow-duration=\"1.7s\"\r\n              >\r\n                <img src={introIRPic}></img>\r\n              </div>\r\n              <div className=\"home-intro-stock-content\">\r\n                <div className=\"home-intro-stock-content-heading\">\r\n                  <h2>\r\n                    <span>\r\n                      <a href=\"#IRCard\">Investment Recommendation</a>\r\n                    </span>\r\n                  </h2>\r\n                </div>\r\n                <div\r\n                  className=\"home-intro-stock-content-para wow fadeIn\"\r\n                  data-wow-duration=\"1\"\r\n                  data-wow-offset=\"180\"\r\n                  data-wow-duration=\"5s\"\r\n                >\r\n                  <p>\r\n                    This system was made keeping in mind the fact that not\r\n                    everyone has the technical skills to predict future prices.\r\n                    Whether they be stock or real-estate. Our system provides\r\n                    users an investment recommendation based on their interests.\r\n                    Just some basic knowledge and you are good to go!\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div style={{ backgroundColor: \"white\", color: \"white\" }}>.</div>\r\n          </div>\r\n          <div>\r\n            <div className=\"footer-body\">\r\n              <div className=\"footer-title\">\r\n                <h1>INVESCO</h1>\r\n              </div>\r\n              <div className=\"footer-content\">\r\n                <div className=\"contact-us\">\r\n                  <h2>Contact Us</h2>\r\n                  <p>Phone : +92324-6096102</p>\r\n                  <p>Email : invescoDev@invesco.com</p>\r\n                </div>\r\n                <div className=\"footer-web-info\">\r\n                  <p>\r\n                    INVESCO is a system helping beginners to invest in stock and\r\n                    real estate.\r\n                  </p>\r\n                </div>\r\n                <div className=\"footer-links\">\r\n                  <Link>Terms and Conditions</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    //initialUserState\r\n    user: state.user,\r\n    // math: state.mathReducer\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(withStyles(useStyles)(Home));\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\RealEstateMainPage.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Signup.js",["162","163","164","165","166","167"],"import React, { Component } from 'react'\r\nimport { RiThunderstormsFill } from 'react-icons/ri';\r\nimport { Link ,withRouter} from 'react-router-dom';\r\nimport './StyleSheets/Signup.css';\r\nimport fire from './config/fire'\r\nimport { FaUserInjured } from 'react-icons/fa';\r\nexport class Signup extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            success:false,\r\n            token: '',\r\n            signUpFirstName: '',\r\n            signUpLastName: '',\r\n            signUpEmail: '',\r\n            signUpMobile: '',\r\n            signUpPassword: '',\r\n            signUpConfirmPassword:'',\r\n            fnameError: '',\r\n            lnameError: '',\r\n            emailError: '',\r\n            passwordError: '',\r\n            checked:false       \r\n        }\r\n    }\r\n   \r\n   \r\n    resetInputs = ()=>{\r\n        this.setState({\r\n            isLoading: false,\r\n            token: '',\r\n            signUpError: '',\r\n            signUpFirstName: '',\r\n            signUpLastName: '',\r\n            signUpEmail: '',\r\n            signUpMobile: '',\r\n            signUpPassword: '',\r\n            signUpConfirmPassword: '',\r\n        })\r\n    }\r\n    //adding onChange event for text fields\r\n    onChange = (event) =>{\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n    onChangeCheckbox = () => {\r\n        this.setState({checked: !this.state.checked});\r\n    }\r\n    //pushing route on signup button\r\n    signupButtonPush = () =>{\r\n        if(this.state.success){\r\n            console.log(\"hhhh\",this.props.history)\r\n            this.props.history.push(\"/login\")\r\n        }\r\n        else{\r\n            console.log(\"isme\")\r\n            this.props.history.push(\"/registration\")\r\n        }\r\n    }\r\n    //signup button event call\r\n    onSignup = ()=> {\r\n        const {\r\n            signUpFirstName,\r\n            signUpLastName,\r\n            signUpEmail,\r\n            signUpPassword,\r\n      } = this.state\r\n        if(this.validate()){\r\n            fire.auth().createUserWithEmailAndPassword(signUpEmail, signUpPassword)\r\n          .then((u) => {\r\n            console.log('Successfully Signed Up');\r\n            const user = fire.auth().currentUser\r\n            const userID = fire.auth().currentUser.uid\r\n            user.sendEmailVerification().then(()=>{\r\n                if(user.emailVerified){\r\n                    //login the user\r\n                    fire.auth().signInWithEmailAndPassword(signUpEmail, signUpPassword)\r\n                    console.log('login successfull')\r\n                    //pushing to home\r\n                    this.props.history.push('/')\r\n                    //adding first name and last name\r\n                    // const user = fire.auth().currentUser\r\n                    user.updateProfile({\r\n                        displayName: signUpFirstName+ \",\"+ signUpLastName\r\n                    })\r\n                    const dbh = fire.firestore();\r\n                    dbh.collection(\"users\").doc(user.uid).set({\r\n                    firstName:signUpFirstName,\r\n                    lastName:signUpLastName,\r\n                    email:signUpEmail,\r\n                    // isVerified:user.emailVerified\r\n                    });\r\n                    console.log('displayName: ', signUpFirstName, \" , \", signUpLastName)\r\n                }\r\n                else{\r\n                    alert('An email verification link has been sent to you. Check your email.')\r\n                    let query = fire.database().ref('Users/'+userID)\r\n                    const userData = {\r\n                        firstName: signUpFirstName,\r\n                        lirstName: signUpLastName,\r\n                        email: signUpEmail,\r\n                    }\r\n                    query.push(userData)\r\n                    // fire.database().ref('messages').push(this.state.signUpLastName)\r\n\r\n                    this.resetInputs()\r\n\r\n                    this.props.history.push('/login')\r\n                }\r\n            })\r\n            \r\n          })\r\n          .catch((err) => {\r\n            console.log(err.toString());\r\n            alert(err.toString())\r\n          })\r\n        }\r\n        \r\n      }\r\n\r\n    validate = (event)=>{\r\n        let fnameError = '';\r\n        let lnameError = '';\r\n        let emailError = '';\r\n        let passwordError = '';\r\n        let checkedError = '';\r\n        const emailRegex = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        const nameRegex = new RegExp(/^[a-z ,.'-]+$/i)\r\n        const passRegex = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/i)\r\n        \r\n        if(!nameRegex.test(this.state.signUpFirstName)){\r\n            fnameError = 'Enter Valid First Name'\r\n        }\r\n\r\n        if(!nameRegex.test(this.state.signUpLastName)){\r\n            lnameError = 'Enter Valid Last Name'\r\n        }\r\n\r\n        if(!emailRegex.test(this.state.signUpEmail)){\r\n            emailError = 'Enter Valid Email'\r\n        }\r\n\r\n        // if(!this.state.signUpEmail.includes('@')){\r\n        //     emailError = 'Invalid Email'\r\n        // }\r\n        if(!passRegex.test(this.state.signUpPassword)){\r\n            passwordError = 'Password must have minimum 8 characters, atleast one letter and one number'\r\n        }\r\n        if(this.state.signUpPassword!=this.state.signUpConfirmPassword){\r\n            passwordError = \"Passwords don't Match\"\r\n        }\r\n        if(emailError || fnameError || lnameError || passwordError){\r\n            this.setState({\r\n                emailError,\r\n                fnameError,\r\n                lnameError,\r\n                passwordError,\r\n                // signUpEmail:''\r\n            })\r\n            //this.focusInput.focus()\r\n            return false;\r\n        }\r\n        return true\r\n    }\r\n    render(props) {\r\n        const buttonStyle = {\r\n            pointerEvents: this.state.checked ? 'all': 'none',\r\n        }\r\n        console.log(this.state)\r\n        const {isLoading,\r\n            token,\r\n            signUpFirstName,\r\n            signUpLastName,\r\n            signUpEmail,\r\n            signUpPassword,\r\n            signUpConfirmPassword,\r\n            checked,\r\n        }   = this.state;\r\n\r\n        // if(isLoading){\r\n        //     return(<div><p>Loading...</p></div>)\r\n        // }\r\n        // if(!token){\r\n        //     return(<div><p>token not set</p></div>)\r\n        // }\r\n        // const user = fire.auth().currentUser\r\n        // if(user.emailVerified){\r\n            return (\r\n                <div class='signup-main'>\r\n                    <form class=\"signupForm\">\r\n                        \r\n                        <h1>Welcome</h1>\r\n                        <div className='signupData'>\r\n                            <label for=\"fname\">First Name</label>\r\n                            <input type=\"text\" id=\"fname\" name=\"signUpFirstName\" value={signUpFirstName} onChange={this.onChange.bind(this)} required></input>\r\n                            <div className=\"error-display\">\r\n                                <span>{this.state.fnameError}</span>\r\n                            </div>\r\n                            \r\n                            <label for=\"lname\">Last Name</label>\r\n                            <input type=\"text\" id=\"lname\" name=\"signUpLastName\" value={signUpLastName} onChange={this.onChange} ></input>\r\n                            <div className=\"error-display\">\r\n                                <span className=\"error-display\">{this.state.lnameError}</span>\r\n                            </div>\r\n\r\n                            <label for=\"email\">Email</label>\r\n                            <input ref={focusInput =>{this.signUpEmail = focusInput}} type=\"email\" id=\"email\" name=\"signUpEmail\" value={signUpEmail} onChange={this.onChange} required></input>\r\n                            <div className=\"error-display\">\r\n                                <span className=\"error-display\">{this.state.emailError}</span>\r\n                            </div>\r\n\r\n                            <label for=\"password\">Password</label>\r\n                            <input type=\"password\" id=\"password\" name=\"signUpPassword\" value={signUpPassword} onChange={this.onChange} required></input>\r\n                            <div className=\"error-display\">\r\n                                <span className=\"error-display\">{this.state.passwordError}</span>\r\n                            </div>\r\n\r\n                            <label for=\"cpassword\">Confirm Password</label>\r\n                            <input type=\"password\" id=\"cpassword\" name=\"signUpConfirmPassword\" value={signUpConfirmPassword} onChange={this.onChange} ></input> \r\n                        </div>    \r\n                        <div class=\"checkbox\">\r\n                            <input type='checkbox' id='termsCond' defaultChecked={this.state.checked} value={checked} onChange={this.onChangeCheckbox} required></input>\r\n                            <label class=\"terms\" for='termsCond'>Do you agree to our <Link id=\"termsLink\" to='/TermsandConditions'>Terms and Conditions?</Link></label>                    \r\n                        </div>\r\n                        {/* <div class=\"button\" id=\"button-signup\" style={buttonStyle} onClick={this.onSignup}>\r\n                            <div id=\"circle\"></div>\r\n                            <a href=\"#\">SIGNUP</a>\r\n                        </div> */}\r\n                        <div>\r\n                            <div class=\"button\" id=\"button-login\" style={buttonStyle} onClick = {this.onSignup}>\r\n                                <div id=\"circle\"></div>\r\n                                <p>SIGNUP</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"logLink\">\r\n                            <Link id=\"loginLink\" to=\"/login\">Already have an account?</Link>\r\n                        </div>\r\n                        {/* check */}\r\n                    </form>\r\n                </div>\r\n                )\r\n        // }\r\n        // else{\r\n        //     <div>\r\n        //         verify email\r\n        //     </div>\r\n        // }\r\n        \r\n    }\r\n}\r\n\r\nexport default withRouter(Signup)\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\ChangePassword.js",["168","169","170","171"],"import React, { Component } from \"react\";\r\nimport \"../StyleSheets/ChangeEmail.css\";\r\nimport PropertyHeader from \"./PropertyHeader\";\r\nimport fire from \"../config/fire\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport Login from \"../Login\";\r\nconst useStyles = (theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n});\r\nclass ChangePassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      prevPassword: \"\",\r\n      newPassword: \"\",\r\n      cNewPassword: \"\",\r\n      msg: \"\",\r\n      errMsg: \"\",\r\n      modalStyle: this.getModalStyle(),\r\n      open: false,\r\n    };\r\n  }\r\n  onChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  changePasswordVerify = () => {};\r\n  rand = () => {\r\n    return Math.round(Math.random() * 20) - 10;\r\n  };\r\n  getModalStyle = () => {\r\n    const top = 50 + this.rand();\r\n    const left = 50 + this.rand();\r\n\r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  };\r\n  changePassword = () => {\r\n    const { email, prevPassword, newPassword, cNewPassword } = this.state;\r\n    const user = fire.auth().currentUser;\r\n    if (this.validate()) {\r\n      fire\r\n        .auth()\r\n        .signInWithEmailAndPassword(email, prevPassword)\r\n        .then(() => {\r\n          const cUser = fire.auth().currentUser;\r\n          if (user == cUser) {\r\n            cUser\r\n              .updatePassword(newPassword)\r\n              .then(() => {\r\n                this.setState(\r\n                  {\r\n                    msg: \"Password Updated Successfully!\",\r\n                    errMsg: \"\",\r\n                  },\r\n                  () => {\r\n                    this.resetInputs();\r\n                    setTimeout(() => {}, 3000);\r\n                  }\r\n                );\r\n              })\r\n              .catch((e) => {\r\n                this.setState({\r\n                  errMsg: e.message,\r\n                  msg: \"\",\r\n                });\r\n              });\r\n          } else {\r\n            this.setState({\r\n              errMsg: \"Invalid Email or Password\",\r\n              msg: \"\",\r\n            });\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          this.setState({\r\n            msg: \"\",\r\n            errMsg: \"Invalid Email or Password\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  validate = (event) => {\r\n    const emailRegex = new RegExp(\r\n      /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n    );\r\n    const passRegex = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/i);\r\n    if (!emailRegex.test(this.state.email)) {\r\n      this.setState({\r\n        errMsg: \"Enter Valid Email\",\r\n      });\r\n      return false;\r\n    }\r\n    if (!passRegex.test(this.state.newPassword)) {\r\n      this.setState({\r\n        msg: \"\",\r\n        errMsg:\r\n          \"Password must have minimum 8 characters, atleast one letter and one number\",\r\n      });\r\n      return false;\r\n    }\r\n    if (this.state.newPassword != this.state.cNewPassword) {\r\n      this.setState({\r\n        msg: \"\",\r\n        errMsg: \"Passwords don't Match\",\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  resetInputs = () => {\r\n    this.setState({\r\n      newPassword: \"\",\r\n      cNewPassword: \"\",\r\n      email: \"\",\r\n      prevPassword: \"\",\r\n    });\r\n  };\r\n  handleOpen = () => {\r\n    this.setState({\r\n      open: true,\r\n    });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  };\r\n  body = (\r\n    <div style={{ top: 50, left: 50 }} className={this.props.classes.paper}>\r\n      <h2 id=\"simple-modal-title\">Password Updated Successfully</h2>\r\n      <p style={{ color: \"black\" }} id=\"simple-modal-description\">\r\n        Your password was updated.\r\n      </p>\r\n    </div>\r\n  );\r\n  render() {\r\n    const isAuthenticated = this.props.user.isAuth;\r\n    if (!isAuthenticated) {\r\n      return <Login />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Header />\r\n          <div>\r\n            <div className=\"change-field-heading\">\r\n              <h1>Change Password</h1>\r\n            </div>\r\n            <div className=\"change-field-inputs\">\r\n              <div className=\"change-field-inputs-content\">\r\n                <label for=\"email\">Enter Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={this.state.email}\r\n                  id=\"email\"\r\n                  onChange={this.onChange}\r\n                  required\r\n                ></input>\r\n              </div>\r\n              <div className=\"change-field-inputs-content\">\r\n                <label for=\"prevPassword\">Enter Previous Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"prevPassword\"\r\n                  value={this.state.prevPassword}\r\n                  id=\"prevPassword\"\r\n                  onChange={this.onChange}\r\n                  required\r\n                ></input>\r\n              </div>\r\n              {/* <div class=\"change-field-button\" onClick = {this.changePasswordVerify}>\r\n                                    <p>Verify</p>\r\n                                </div> */}\r\n              <div>\r\n                <div className=\"change-field-inputs-content\">\r\n                  <label for=\"newPassword\">Enter New Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"newPassword\"\r\n                    value={this.state.newPassword}\r\n                    id=\"newPassword\"\r\n                    onChange={this.onChange}\r\n                    required\r\n                  ></input>\r\n                </div>\r\n                <div className=\"change-field-inputs-content\">\r\n                  <label for=\"cNewPassword\">Confirm Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"cNewPassword\"\r\n                    value={this.state.cNewPassword}\r\n                    id=\"cNewPassword\"\r\n                    onChange={this.onChange}\r\n                    required\r\n                  ></input>\r\n                </div>\r\n                <div className=\"change-field-inputs-content\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.changePassword}\r\n                  >\r\n                    Done\r\n                  </Button>\r\n                </div>\r\n                {/* <div class=\"change-field-button\" onClick = {this.changePassword}>\r\n                                        <p>Done</p>\r\n                                </div> */}\r\n              </div>\r\n              <div className=\"msg-display\">\r\n                <span\r\n                  style={{\r\n                    color: \"green\",\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"18px\",\r\n                  }}\r\n                >\r\n                  {this.state.msg}\r\n                </span>\r\n                <span\r\n                  style={{ color: \"red\", fontWeight: \"bold\", fontSize: \"18px\" }}\r\n                >\r\n                  {this.state.errMsg}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <Modal\r\n              open={this.state.open}\r\n              onClose={this.handleClose}\r\n              aria-labelledby=\"simple-modal-title\"\r\n              aria-describedby=\"simple-modal-description\"\r\n            >\r\n              {this.body}\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    stock: state.stock,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(withStyles(useStyles)(ChangePassword));\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\InvestmentRec.js",["172","173","174","175","176","177"],"import React, { Component } from \"react\";\r\nimport \"../StyleSheets/InvestmentRec.css\";\r\nimport { Button, Popover } from \"@material-ui/core\";\r\nimport fire from \"../config/fire\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport Login from \"../Login\";\r\nclass InevstmentRec extends Component {\r\n  state = {\r\n    checkboxVal: [],\r\n    price: \"\",\r\n    timeframe: \"3 Month\",\r\n    btnDisable: true,\r\n    error: \"\",\r\n    stockRec: [],\r\n    propertyRec: [],\r\n    isLoading: true,\r\n  };\r\n  componentDidMount() {}\r\n\r\n  onPropertyCheckbox = (e) => {\r\n    var arr = [];\r\n    for (let i = 0; i < 2; i++) {\r\n      if (e.target.checked) {\r\n        this.setState({\r\n          checkboxVal: [...this.state.checkboxVal, e.target.value],\r\n        });\r\n      } else {\r\n        const newArr = this.state.checkboxVal.filter(\r\n          (item) => item !== e.target.value\r\n        );\r\n        this.setState({\r\n          checkboxVal: newArr,\r\n        });\r\n      }\r\n    }\r\n\r\n    // console.log(arr)\r\n    // this.setState({...this.state.checkboxVal, checkboxVal: 'property'});\r\n  };\r\n  onHandlePrice = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleSelect = (e) => {\r\n    this.setState({\r\n      timeframe: e.target.value,\r\n    });\r\n  };\r\n  getRec = () => {\r\n    if (this.validate()) {\r\n      var stockArr = [];\r\n      var propertyArr = [];\r\n      fetch(\r\n        `http://investmentrecommendation.herokuapp.com/stock/?time=${this.state.timeframe}&&amount=${this.state.price}`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          Object.keys(responseData).map((data) => {\r\n            console.log(responseData[data]);\r\n            stockArr.push(responseData[data]);\r\n          });\r\n          this.setState({\r\n            stockRec: stockArr,\r\n          });\r\n          console.log(this.state.stockRec);\r\n        });\r\n\r\n      fetch(\r\n        `http://investmentrecommendation.herokuapp.com/plot/?time=${this.state.timeframe}&&amount=${this.state.price}`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          console.log(this.state.propertyRec);\r\n          Object.keys(responseData).map((data) => {\r\n            console.log(responseData[data]);\r\n            propertyArr.push(responseData[data]);\r\n          });\r\n          this.setState({\r\n            propertyRec: propertyArr,\r\n          });\r\n          console.log(this.state.propertyArr);\r\n        });\r\n      //setTimeout(4000);\r\n      this.setState({\r\n        error: \"\",\r\n        isLoading: false,\r\n      });\r\n    } else {\r\n      console.log(\"2st\");\r\n      this.setState({\r\n        error: \"Please fulfill all fields\",\r\n      });\r\n    }\r\n  };\r\n  validate = () => {\r\n    if (this.state.price == \"\") {\r\n      this.setState({\r\n        btnDisable: false,\r\n        error: \"Please fulfill all fields\",\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  render() {\r\n    const isAuthenticated = this.props.user.isAuth;\r\n    console.log(this.state.btnDisable);\r\n    const tableStyle = {\r\n      display: this.state.isLoading ? \"none\" : \"block\",\r\n    };\r\n    if (!isAuthenticated) {\r\n      return <Login />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Header />\r\n          <div className=\"realestate-main\">\r\n            <h1>INVESTMENT RECOMMENDATION</h1>\r\n          </div>\r\n          <div className=\"inv-content\">\r\n            <div className=\"inv-inputs-container\">\r\n              <label className=\"inv-labels\" for=\"range\">\r\n                Enter your maximum investment (in PKR)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"inv-inputs\"\r\n                name=\"price\"\r\n                value={this.state.price}\r\n                onChange={this.onHandlePrice}\r\n                placeholder=\"example: 200000\"\r\n                id=\"range\"\r\n              ></input>\r\n            </div>\r\n            <div className=\"inv-inputs-container\">\r\n              <label className=\"inv-labels\" for=\"time\">\r\n                Select your timeframe\r\n              </label>\r\n              <select\r\n                className=\"select-text\"\r\n                id=\"time\"\r\n                onChange={this.handleSelect}\r\n              >\r\n                <option className=\"option-text\" value=\"3 Month\">\r\n                  3 Month\r\n                </option>\r\n                <option className=\"option-text\" value=\"6 Month\">\r\n                  6 Month\r\n                </option>\r\n                <option className=\"option-text\" value=\"1 Year\">\r\n                  1 Year\r\n                </option>\r\n                <option className=\"option-text\" value=\"3 Year\">\r\n                  3 Year\r\n                </option>\r\n                <option className=\"option-text\" value=\"5 Year\">\r\n                  5 Year\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"inv-button\">\r\n              <Button variant=\"contained\" color=\"primary\" onClick={this.getRec}>\r\n                Get Recommendation\r\n              </Button>\r\n            </div>\r\n            <span\r\n              style={{\r\n                color: \"red\",\r\n                fontWeight: \"bold\",\r\n                fontSize: \"18px\",\r\n                marginLeft: \"5%\",\r\n              }}\r\n            >\r\n              {this.state.error}\r\n            </span>\r\n          </div>\r\n          <div style={tableStyle} className=\"invest-results\">\r\n            <div className=\"invest-results-tables\">\r\n              <h2>Stock Companies to Invest</h2>\r\n              <div className=\"invest-table\" style={{ width: \"100%\" }}>\r\n                <table className=\"techAnalysis\">\r\n                  <tr className=\"invest-row\">\r\n                    <th>Name</th>\r\n                    <th>Percent</th>\r\n                    <th>Returned Amount</th>\r\n                  </tr>\r\n                  {this.state.stockRec.map((title) => {\r\n                    return (\r\n                      <tr className=\"invest-row\">\r\n                        <td>{title.Ticker}</td>\r\n                        <td>{title.Percent}</td>\r\n                        <td>{title.Amount}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </table>\r\n              </div>\r\n            </div>\r\n            <div className=\"invest-results-tables\">\r\n              <h2>Areas to Invest</h2>\r\n              <div className=\"invest-table\" style={{ width: \"100%\" }}>\r\n                <table className=\"techAnalysis\">\r\n                  <tr className=\"invest-row\">\r\n                    <th>Name</th>\r\n                    <th>Percent</th>\r\n                    <th>Returned Amount</th>\r\n                  </tr>\r\n                  {this.state.propertyRec.map((title) => {\r\n                    return (\r\n                      <tr className=\"invest-row\">\r\n                        <td>{title.Ticker}</td>\r\n                        <td>{title.Percent}</td>\r\n                        <td>{title.Amount}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    stock: state.stock,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(InevstmentRec);\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Login.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\StockTable.js",["178","179","180","181","182","183","184","185"],"import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport fire from \"../config/fire\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Login from \"../Login\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport readXlsxFile from \"read-excel-file\";\r\nimport fs from \"fs\";\r\n\r\nconst useStyles = (theme) => ({\r\n  table: {\r\n    // minWidth: '50%',\r\n    width: \"70%\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  menuPaper: {\r\n    maxHeight: 300,\r\n  },\r\n});\r\n\r\nclass StockTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cat: \"ALL COMPANIES\",\r\n      category: [\r\n        \"ALL COMPANIES\",\r\n        \"OIL AND GAS\",\r\n        \"POWER\",\r\n        \"BANKS\",\r\n        \"AUTOMOBILE, TRANSPORT AND ACCESSORIES\",\r\n        \"CEMENT\",\r\n        \"CHEMICAL\",\r\n        \"TECHNOLOGY & COMMUNICATION\",\r\n        \"ENGINEERING\",\r\n        \"FERTILIZER\",\r\n        \"FOOD & PERSONAL CARE PRODUCTS\",\r\n        \"REFINERY\",\r\n      ],\r\n      excel: [\r\n        \"CEMENT\",\r\n        \"ENGINEERING\",\r\n        \"OIL AND GAS\",\r\n        \"FOOD & PERSONAL CARE PRODUCTS\",\r\n        \"ENGINEERING\",\r\n        \"REFINERY\",\r\n        \"BANKS\",\r\n        \"REFINERY\",\r\n        \"CEMENT\",\r\n        \"CHEMICAL\",\r\n        \"FERTILIZER\",\r\n        \"CHEMICAL\",\r\n        \"CEMENT\",\r\n        \"FERTILIZER\",\r\n        \"FOOD & PERSONAL CARE PRODUCTS\",\r\n        \"AUTOMOBILE, TRANSPORT AND ACCESSORIES\",\r\n        \"CHEMICAL\",\r\n        \"AUTOMOBILE, TRANSPORT AND ACCESSORIES\",\r\n        \"OIL AND GAS\",\r\n        \"BANKS\",\r\n        \"POWER\",\r\n        \"TECHNOLOGY & COMMUNICATION\",\r\n        \"CHEMICAL\",\r\n        \"ENGINEERING\",\r\n        \"POWER\",\r\n        \"POWER\",\r\n        \"TECHNOLOGY & COMMUNICATION\",\r\n        \"Type\",\r\n        \"AUTOMOBILE, TRANSPORT AND ACCESSORIES\",\r\n        \"REFINERY\",\r\n        \"AUTOMOBILE, TRANSPORT AND ACCESSORIES\",\r\n        \"AUTOMOBILE, TRANSPORT AND ACCESSORIES\",\r\n        \"BANKS\",\r\n        \"OIL AND GAS\",\r\n        \"TECHNOLOGY & COMMUNICATION\",\r\n        \"TECHNOLOGY & COMMUNICATION\",\r\n        \"FOOD & PERSONAL CARE PRODUCTS\",\r\n      ],\r\n      companies: [\r\n        \"ACPL\",\r\n        \"AGHA\",\r\n        \"APL\",\r\n        \"ASC\",\r\n        \"ASTL\",\r\n        \"ATRL\",\r\n        \"BOP\",\r\n        \"BYCO\",\r\n        \"DCL\",\r\n        \"DOL\",\r\n        \"EFERT\",\r\n        \"EPCL\",\r\n        \"FCCL\",\r\n        \"FFBL\",\r\n        \"FFL\",\r\n        \"GAIL\",\r\n        \"GGL\",\r\n        \"GTYR\",\r\n        \"HASCOL\",\r\n        \"HBL\",\r\n        \"HUBC\",\r\n        \"HUMNL\",\r\n        \"ICL\",\r\n        \"ISL\",\r\n        \"KAPCO\",\r\n        \"KEL\",\r\n        \"MDTL\",\r\n        \"PIAA\",\r\n        \"PRL\",\r\n        \"PSMC\",\r\n        \"SAZEW\",\r\n        \"SILK\",\r\n        \"SNGP\",\r\n        \"TELE\",\r\n        \"TRG\",\r\n        \"UNITY\",\r\n      ],\r\n      rows: [],\r\n      isLoading: true,\r\n      temp: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getLatestData();\r\n  }\r\n  getLatestData = () => {\r\n    let data = [];\r\n    fire\r\n      .database()\r\n      .ref(`historicaldatafyp-default-rtdb/Stocks/`)\r\n      .on(\"value\", (snapshot) => {\r\n        var qwe = [];\r\n        snapshot.forEach((ss) => {\r\n          var val = ss.val();\r\n\r\n          let x = Object.keys(val);\r\n          let lastVal = val[x[x.length - 1]];\r\n          qwe.push(lastVal);\r\n        });\r\n        this.setState({\r\n          ...this.state,\r\n          rows: qwe,\r\n          isLoading: false,\r\n        });\r\n      });\r\n  };\r\n  createData = (name, calories, fat, carbs, protein, A, B) => {\r\n    return { name, calories, fat, carbs, protein, A, B };\r\n  };\r\n  sendValue = (row) => {\r\n    this.props.stockReducerValue(row.name);\r\n    this.getLatestData();\r\n    return;\r\n  };\r\n  handleChange = (event) => {\r\n    this.setState(\r\n      {\r\n        cat: event.target.value,\r\n      },\r\n      () => {\r\n        var temps = [];\r\n        for (let i in this.state.excel) {\r\n          if (this.state.excel[i] == this.state.cat) {\r\n            temps.push(i);\r\n          }\r\n        }\r\n        this.setState({\r\n          temp: temps,\r\n        });\r\n      }\r\n    );\r\n  };\r\n  render() {\r\n    console.log(\"category\", this.state.cat);\r\n    const isAuthenticated = this.props.user.isAuth;\r\n    const { classes } = this.props;\r\n    if (!isAuthenticated) {\r\n      return <Login />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Header />\r\n          <div className=\"stock-main-heading\">\r\n            <h1>STOCK TABLE</h1>\r\n          </div>\r\n          <FormControl variant=\"filled\" className={classes.formControl}>\r\n            <InputLabel\r\n              style={{ height: \"100px\" }}\r\n              id=\"demo-simple-select-outlined-label\"\r\n            >\r\n              Select Category\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={this.state.cat}\r\n              onChange={this.handleChange}\r\n              // onClick={this.fetchData}\r\n              label=\"Category\"\r\n              MenuProps={{ classes: { paper: classes.menuPaper } }}\r\n            >\r\n              {this.state.category.map((options) => {\r\n                return <MenuItem value={options}>{options}</MenuItem>;\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n          <div className=\"stock-table\">\r\n            <TableContainer>\r\n              <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Companies</TableCell>\r\n                    <TableCell align=\"right\">OPEN</TableCell>\r\n                    <TableCell align=\"right\">HIGH</TableCell>\r\n                    <TableCell align=\"right\">LOW</TableCell>\r\n                    <TableCell align=\"right\">CLOSE</TableCell>\r\n                    <TableCell align=\"right\">CHANGE</TableCell>\r\n                    <TableCell align=\"right\">VOLUME</TableCell>\r\n                    <TableCell align=\"right\">DATE</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {this.state.isLoading == true ? (\r\n                    <div\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        marginTop: \"20px\",\r\n                        height: \"50px\",\r\n                      }}\r\n                    >\r\n                      <CircularProgress\r\n                        style={{ marginLeft: \"300%\" }}\r\n                        disableShrink\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    this.state.rows.map((row, index) => {\r\n                      console.log(index, \"asdasd\", this.state.temp);\r\n                      if (\r\n                        this.state.temp.includes(index.toString()) ||\r\n                        this.state.temp.length == 0\r\n                      ) {\r\n                        console.log(\"asdasdasd\");\r\n                        return (\r\n                          <TableRow key={index}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              <Link\r\n                                to={{\r\n                                  pathname: \"/StockPrediction\",\r\n                                  state: this.state.companies[index],\r\n                                }}\r\n                                size=\"50\"\r\n                                onClick={this.sendValue.bind(this, row)}\r\n                              >\r\n                                {this.state.companies[index]}\r\n                              </Link>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{row.Open}</TableCell>\r\n                            <TableCell align=\"right\">{row.High}</TableCell>\r\n                            <TableCell align=\"right\">{row.Low}</TableCell>\r\n                            <TableCell align=\"right\">{row.Close}</TableCell>\r\n                            <TableCell align=\"right\">{row.Change}</TableCell>\r\n                            <TableCell align=\"right\">{row.Volume}</TableCell>\r\n                            <TableCell align=\"right\">{row.Date}</TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      }\r\n                    })\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    stock: state.stock,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    stockReducerValue: (value) => {\r\n      dispatch({\r\n        type: \"UPDATE_INPUT\",\r\n        payload: value,\r\n      });\r\n    },\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(useStyles)(StockTable));\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\StockMainPage.js",["186","187","188","189","190","191","192","193","194","195","196"],"import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport TabContext from \"@material-ui/lab/TabContext\";\r\nimport TabList from \"@material-ui/lab/TabList\";\r\nimport TabPanel from \"@material-ui/lab/TabPanel\";\r\nimport fire from \"../config/fire\";\r\nimport PropertyHeader from \"./PropertyHeader\";\r\nimport Header from \"./Header\";\r\nimport \"../StyleSheets/StockMainPage.css\";\r\nimport ReactApexCharts from \"react-apexcharts\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport PredictedStock from \"./PredictedStock\";\r\n\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n\r\nimport Login from \"../Login\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ReactNotification from \"react-notification-component\";\r\nimport { store } from \"react-notification-component\";\r\n\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\n\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  tab: {\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    color: \"black\",\r\n  },\r\n  modalText: {\r\n    color: \"black\",\r\n  },\r\n  modalInputs: {\r\n    width: \"50px\",\r\n  },\r\n  buttonDiv: {\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n    paddingTop: \"10px\",\r\n  },\r\n});\r\n\r\nexport class StockMainPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      techArr: [],\r\n      mainCompanies: [\r\n        \"ACPL\",\r\n        \"AGHA\",\r\n        \"APL\",\r\n        \"ASC\",\r\n        \"ASTL\",\r\n        \"ATRL\",\r\n        \"BOP\",\r\n        \"BYCO\",\r\n        \"DCL\",\r\n        \"DOL\",\r\n        \"EFERT\",\r\n        \"EPCL\",\r\n        \"FCCL\",\r\n        \"FFBL\",\r\n        \"FFL\",\r\n        \"GAIL\",\r\n        \"GGL\",\r\n        \"GTYR\",\r\n        \"HASCOL\",\r\n        \"HBL\",\r\n        \"HUBC\",\r\n        \"HUMNL\",\r\n        \"ICL\",\r\n        \"ISL\",\r\n        \"KAPCO\",\r\n        \"KEL\",\r\n        \"MDTL\",\r\n        \"PIAA\",\r\n        \"PRL\",\r\n        \"PSMC\",\r\n        \"SAZEW\",\r\n        \"SILK\",\r\n        \"SNGP\",\r\n        \"TELE\",\r\n        \"TRG\",\r\n        \"UNITY\",\r\n      ],\r\n      green: false,\r\n      text: \"Subscribe\",\r\n      open: false,\r\n      belowAlert: \"\",\r\n      aboveAlert: \"\",\r\n      notiArray: \"\",\r\n      selectedValue: this.props.location.state,\r\n      subscribed: [],\r\n      page: 0,\r\n      rowsPerPage: 10,\r\n      rows: [],\r\n      value: \"1\",\r\n      series: [\r\n        {\r\n          data: [\r\n            {\r\n              x: 0,\r\n              y: [],\r\n            },\r\n            //   {\r\n            //   x: new Date(1538778600000),\r\n            //   y: [6629.81, 6650.5, 6623.04, 6633.33]\r\n            // },\r\n          ],\r\n        },\r\n      ],\r\n      options: {\r\n        chart: {\r\n          type: \"candlestick\",\r\n          height: 1050,\r\n          animations: {\r\n            enabled: false,\r\n            animateGradually: {\r\n              enabled: false,\r\n              delay: 150,\r\n            },\r\n            dynamicAnimation: {\r\n              enabled: true,\r\n              speed: 100,\r\n            },\r\n          },\r\n        },\r\n        title: {\r\n          text: \"OHLC Chart\",\r\n          align: \"left\",\r\n        },\r\n        xaxis: {\r\n          type: \"datetime\",\r\n        },\r\n        yaxis: {\r\n          tooltip: {\r\n            enabled: true,\r\n          },\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  handleOpen = () => {\r\n    this.setState({\r\n      open: true,\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  handleAlert = async () => {\r\n    fire.auth().onAuthStateChanged(async function (cUser) {\r\n      localStorage.setItem(\"uid\", cUser.uid);\r\n    });\r\n    const uid = localStorage.getItem(\"uid\");\r\n    const companyData = await fire\r\n      .database()\r\n      .ref(`historicaldatafyp-default-rtdb/Stocks/${this.state.selectedValue}`)\r\n      .limitToLast(1)\r\n      .once(\"value\");\r\n    var notif = \"\";\r\n    var temp = [];\r\n    for (let i in companyData.val()) {\r\n      const Close = companyData.val()[i].Close;\r\n      if (Close > this.state.aboveAlert || Close < this.state.belowAlert) {\r\n        if (this.state.belowAlert == \"\" && this.state.aboveAlert == \"\") {\r\n        } else {\r\n          notif =\r\n            this.state.selectedValue + \": ALERT! Closing Price is now \" + Close;\r\n        }\r\n      }\r\n    }\r\n    temp.push(notif);\r\n    if (notif != \"\") {\r\n      NotificationManager.success(notif, \"ALERT\", 3600000);\r\n    }\r\n\r\n    this.handleClose();\r\n  };\r\n\r\n  handleSubscribe = async (e) => {\r\n    const userID = localStorage.getItem(\"uid\");\r\n    if (e.target.innerText == \"SUBSCRIBE\") {\r\n      this.setState({\r\n        subscribed: [...this.state.subscribed, this.state.selectedValue],\r\n      });\r\n      await fire\r\n        .database()\r\n        .ref(\"Users/\" + userID)\r\n        .once(\"value\", (snap) => {\r\n          snap.forEach((doc) => {\r\n            fire\r\n              .database()\r\n              .ref(\"Users/\" + userID + \"/\" + doc.key)\r\n              .update({\r\n                subscriptions: this.state.subscribed,\r\n              });\r\n          });\r\n        });\r\n      const cUser = await fire\r\n        .database()\r\n        .ref(\"Users/\" + userID)\r\n        .once(\"value\");\r\n      //key\r\n      const userData = cUser.val()[Object.keys(cUser.val())[0]];\r\n      var temp = [];\r\n      for (let i in userData.subscriptions) {\r\n        //company name\r\n        // console.log('WORKINGH',userData.subscriptions[i])\r\n        //latest value\r\n        const lastval = await fire\r\n          .database()\r\n          .ref(\r\n            `historicaldatafyp-default-rtdb/Stocks/${userData.subscriptions[i]}`\r\n          )\r\n          .limitToLast(1)\r\n          .once(\"value\");\r\n        var notif = \"\";\r\n        for (let j in lastval.val()) {\r\n          const Close = lastval.val()[j].Close;\r\n          const Date = lastval.val()[j].Date;\r\n          const Open = lastval.val()[j].Open;\r\n          const High = lastval.val()[j].High;\r\n          const Low = lastval.val()[j].Low;\r\n          notif =\r\n            userData.subscriptions[i] +\r\n            \": OHLC for \" +\r\n            Date +\r\n            \" is \" +\r\n            \" O:\" +\r\n            Open +\r\n            \" H:\" +\r\n            High +\r\n            \" L:\" +\r\n            Low +\r\n            \" C:\" +\r\n            Close;\r\n        }\r\n        temp.push(notif);\r\n        fire\r\n          .database()\r\n          .ref(\"Users/\" + userID)\r\n          .once(\"value\", (snap) => {\r\n            snap.forEach((doc) => {\r\n              fire\r\n                .database()\r\n                .ref(\"Users/\" + userID + \"/\" + doc.key)\r\n                .update({\r\n                  Notifications: temp,\r\n                });\r\n            });\r\n          });\r\n        // this.setState({\r\n        //     data:temp\r\n        // })\r\n      }\r\n    } else if (e.target.innerText == \"SUBSCRIBED\") {\r\n      const arr = this.state.subscribed.filter((company) => {\r\n        return company !== this.state.selectedValue;\r\n      });\r\n      this.setState({\r\n        subscribed: arr,\r\n      });\r\n      fire\r\n        .database()\r\n        .ref(\"Users/\" + userID)\r\n        .once(\"value\", (snap) => {\r\n          snap.forEach((doc) => {\r\n            fire\r\n              .database()\r\n              .ref(\"Users/\" + userID + \"/\" + doc.key)\r\n              .update({\r\n                subscriptions: arr,\r\n              });\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  getSubscriptions = async () => {\r\n    // const isAuthenticated = this.props.user.isAuth\r\n    const isAuthenticated = localStorage.getItem(\"uid\");\r\n    if (isAuthenticated == null) {\r\n      this.props.history.push(\"/login\");\r\n    } else {\r\n      // fire.auth().onAuthStateChanged(async function(cUser) {\r\n      //     try {\r\n      //         localStorage.setItem('uid',cUser.uid);\r\n      //     } catch (error) {\r\n      //         // alert('Please Login')\r\n\r\n      //         // this.forceUpdate()\r\n      //     }\r\n\r\n      //   }\r\n      //   );\r\n\r\n      const uid = localStorage.getItem(\"uid\");\r\n      const user = await fire\r\n        .database()\r\n        .ref(\"Users/\" + uid)\r\n        .once(\"value\");\r\n      //key\r\n      const userData = user.val()[Object.keys(user.val())[0]];\r\n      this.setState({\r\n        subscribed:\r\n          userData.subscriptions == null ? [] : userData.subscriptions,\r\n      });\r\n    }\r\n  };\r\n\r\n  sendData = () => {\r\n    fire\r\n      .database()\r\n      .ref(\"historicaldatafyp-default-rtdb/Stocks/ABCD\")\r\n      .set({ key: \"value\" });\r\n  };\r\n  getHistoricalTableData = () => {\r\n    let tableData = [];\r\n    try {\r\n      fire\r\n        .database()\r\n        .ref(\r\n          `historicaldatafyp-default-rtdb/Stocks/${this.state.selectedValue}`\r\n        )\r\n        .limitToLast(30)\r\n        .on(\"value\", (snapshot) => {\r\n          snapshot.forEach((openSnapShot) => {\r\n            var val = openSnapShot.val();\r\n            const ros = {\r\n              open: val.Open,\r\n              high: val.High,\r\n              low: val.Low,\r\n              close: val.Close,\r\n              change: val.Change,\r\n              volume: val.Volume,\r\n              date: val.Date,\r\n            };\r\n            tableData.push(ros);\r\n          });\r\n          this.setState({\r\n            rows: tableData,\r\n          });\r\n        });\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n    }\r\n  };\r\n\r\n  getHistoricalGraphData = () => {\r\n    let data = [];\r\n    fire\r\n      .database()\r\n      .ref(`historicaldatafyp-default-rtdb/Stocks/${this.state.selectedValue}`)\r\n      .on(\"value\", (snapshot) => {\r\n        snapshot.forEach((openSnapShot) => {\r\n          var val = openSnapShot.val();\r\n          let data1 = [];\r\n          data1.push(val.Open, val.High, val.Low, val.Close);\r\n          data.push({\r\n            x: new Date(val.Date),\r\n            y: data1,\r\n          });\r\n        });\r\n        this.setState({\r\n          series: [\r\n            {\r\n              data: data,\r\n            },\r\n          ],\r\n        });\r\n      });\r\n  };\r\n\r\n  getTechnicalAnalysis = () => {\r\n    var arr = [];\r\n    fetch(\r\n      `https://ml-stock.herokuapp.com/technical/?Ticker=${this.state.selectedValue}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        Object.keys(responseData).forEach((i) => {\r\n          arr.push(responseData[i]);\r\n        });\r\n        this.setState({\r\n          techArr: arr,\r\n        });\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    this.getHistoricalTableData();\r\n    this.getHistoricalGraphData();\r\n    this.getSubscriptions();\r\n    this.getTechnicalAnalysis();\r\n  }\r\n\r\n  handleRadioChange = (event) => {\r\n    this.setState(\r\n      {\r\n        ...this.state.selectedValue,\r\n        selectedValue: event.target.value,\r\n      },\r\n      () => {\r\n        this.getHistoricalTableData();\r\n        this.getHistoricalGraphData();\r\n        this.getTechnicalAnalysis();\r\n      }\r\n    );\r\n\r\n    // this.forceUpdate()\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({\r\n      page: newPage,\r\n    });\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event) => {\r\n    this.setState({\r\n      rowsPerPage: +event.target.value,\r\n      page: 0,\r\n    });\r\n  };\r\n\r\n  handleChange = (event, newValue) => {\r\n    this.setState({\r\n      value: newValue,\r\n    });\r\n  };\r\n\r\n  columns = [\r\n    {\r\n      id: \"date\",\r\n      label: \"Date\",\r\n      minWidth: 170,\r\n    },\r\n    {\r\n      id: \"open\",\r\n      label: \"Open\",\r\n      minWidth: 170,\r\n      align: \"right\",\r\n    },\r\n    {\r\n      id: \"high\",\r\n      label: \"High\",\r\n      minWidth: 170,\r\n      align: \"right\",\r\n    },\r\n    {\r\n      id: \"low\",\r\n      label: \"Low\",\r\n      minWidth: 170,\r\n      align: \"right\",\r\n    },\r\n    {\r\n      id: \"close\",\r\n      label: \"Close\",\r\n      minWidth: 170,\r\n      align: \"right\",\r\n    },\r\n    {\r\n      id: \"change\",\r\n      label: \"Change\",\r\n      minWidth: 170,\r\n      align: \"right\",\r\n    },\r\n    {\r\n      id: \"volume\",\r\n      label: \"Volume\",\r\n      minWidth: 170,\r\n      align: \"right\",\r\n    },\r\n  ];\r\n\r\n  alertOnChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  render() {\r\n    const isAuthenticated = this.props.user.isAuth;\r\n    const { classes } = this.props;\r\n    const { theme } = this.props;\r\n    const btnStyle = {\r\n      backgroundColor: this.state.subscribed.includes(this.state.selectedValue)\r\n        ? \"#4caf50\"\r\n        : \"#f50057\",\r\n    };\r\n\r\n    if (!isAuthenticated) {\r\n      return <Login />;\r\n    } else {\r\n      return (\r\n        <div className={classes.root}>\r\n          <Header />\r\n          <NotificationContainer />\r\n          <div className=\"stock-main-heading\">\r\n            <h1>STOCK PRICE PREDICTOR</h1>\r\n          </div>\r\n          <TabContext value={this.state.value}>\r\n            <TabList\r\n              onChange={this.handleChange}\r\n              className={classes.tab}\r\n              aria-label=\"simple tabs example\"\r\n            >\r\n              <Tab label=\"HISTORICAL\" value=\"1\" />\r\n              <Tab label=\"PREDICTED\" value=\"2\" />\r\n            </TabList>\r\n            <TabPanel\r\n              value=\"1\"\r\n              //style={{backgroundColor:'rgb(196, 196, 196)'}}\r\n            >\r\n              <div className=\"stock-page-main\">\r\n                <div className=\"stock-buttons\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    style={btnStyle}\r\n                    color=\"secondary\"\r\n                    onClick={this.handleSubscribe}\r\n                  >\r\n                    {this.state.subscribed.includes(this.state.selectedValue)\r\n                      ? \"Subscribed\"\r\n                      : \"Subscribe\"}\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={this.handleOpen}\r\n                  >\r\n                    Alert\r\n                  </Button>\r\n                  <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                      timeout: 500,\r\n                    }}\r\n                  >\r\n                    <Fade in={this.state.open}>\r\n                      <div className={classes.paper}>\r\n                        <h2 id=\"transition-modal-title\">ALERT ME!</h2>\r\n                        <label for=\"aboveInput\" class={classes.modalText}>\r\n                          When Price Gets Above:{\" \"}\r\n                        </label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className={classes.modalInputs}\r\n                          name=\"aboveAlert\"\r\n                          id=\"aboveInput\"\r\n                          onChange={this.alertOnChange}\r\n                          value={this.state.aboveAlert}\r\n                        ></input>\r\n                        <br></br>\r\n                        <label for=\"belowInput\" class={classes.modalText}>\r\n                          When Price Gets Below:{\" \"}\r\n                        </label>\r\n                        <input\r\n                          style={{ marginLeft: \"3px\" }}\r\n                          type=\"number\"\r\n                          className={classes.modalInputs}\r\n                          name=\"belowAlert\"\r\n                          id=\"belowInput\"\r\n                          value={this.state.belowAlert}\r\n                          onChange={this.alertOnChange}\r\n                        ></input>\r\n                        <br></br>\r\n                        <div className={classes.buttonDiv}>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.handleAlert}\r\n                          >\r\n                            Done\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </Fade>\r\n                  </Modal>\r\n                </div>\r\n                <div className=\"graph-and-selector\">\r\n                  <div className=\"stock-graph\">\r\n                    <ReactApexCharts\r\n                      options={this.state.options}\r\n                      series={this.state.series}\r\n                      type=\"candlestick\"\r\n                    />\r\n                    <h2>Select a company</h2>\r\n                    <div className=\"stock-radio-buttons\">\r\n                      {this.state.mainCompanies.map((row, index) => {\r\n                        return (\r\n                          <label>\r\n                            <Radio\r\n                              checked={this.state.selectedValue === row}\r\n                              onChange={this.handleRadioChange}\r\n                              value={row}\r\n                              name=\"radio-button-demo\"\r\n                              inputProps={{ \"aria-label\": row }}\r\n                              color=\"primary\"\r\n                            />\r\n                            {row}\r\n                          </label>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div style={{ paddingTop: \"5%\", textAlign: \"center\" }}>\r\n                  <h1>Company Latest Historical Prices</h1>\r\n                </div>\r\n                5\r\n                <div className=\"stock-company-historical-table-div\">\r\n                  <Paper>\r\n                    <TableContainer className={classes.container}>\r\n                      <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            {this.columns.map((column) => (\r\n                              <TableCell\r\n                                key={column.id}\r\n                                align={column.align}\r\n                                style={{\r\n                                  minWidth: column.minWidth,\r\n                                  fontWeight: \"800\",\r\n                                }}\r\n                              >\r\n                                {column.label}\r\n                              </TableCell>\r\n                            ))}\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {this.state.rows\r\n                            .slice(\r\n                              this.state.page * this.state.rowsPerPage,\r\n                              this.state.page * this.state.rowsPerPage +\r\n                                this.state.rowsPerPage\r\n                            )\r\n                            .map((row) => {\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  role=\"checkbox\"\r\n                                  tabIndex={-1}\r\n                                  key={row.code}\r\n                                >\r\n                                  {this.columns.map((column) => {\r\n                                    const value = row[column.id];\r\n\r\n                                    return (\r\n                                      <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                      >\r\n                                        {column.format &&\r\n                                        typeof value === \"number\"\r\n                                          ? column.format(value)\r\n                                          : value}\r\n                                      </TableCell>\r\n                                    );\r\n                                  })}\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                    <TablePagination\r\n                      rowsPerPageOptions={[10, 30, 100]}\r\n                      component=\"div\"\r\n                      count={this.state.rows.length}\r\n                      rowsPerPage={this.state.rowsPerPage}\r\n                      page={this.state.page}\r\n                      onChangePage={this.handleChangePage}\r\n                      onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                    />\r\n                  </Paper>\r\n                </div>\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel value=\"2\">\r\n              <PredictedStock\r\n                mainCompanies={this.state.mainCompanies}\r\n                selector={this.state.selectedValue}\r\n              />\r\n            </TabPanel>\r\n          </TabContext>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    stock: state.stock,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(withStyles(useStyles)(StockMainPage));\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\ChangeEmail.js",["197","198","199","200","201"],"import React, { Component } from \"react\";\r\nimport \"../StyleSheets/ChangeEmail.css\";\r\nimport PropertyHeader from \"./PropertyHeader\";\r\nimport Header from \"./Header\";\r\nimport fire from \"../config/fire\";\r\nimport { Button, Popover } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport Login from \"../Login\";\r\nexport class ChangeEmail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      prevEmail: \"\",\r\n      Epassword: \"\",\r\n      newEmail: \"\",\r\n      msg: \"\",\r\n      errMsg: \"\",\r\n      verMsg: \"\",\r\n    };\r\n  }\r\n  onChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  changeEmailVerify = () => {\r\n    const user = fire.auth().currentUser;\r\n    const { prevEmail, newEmail, Epassword } = this.state;\r\n    user\r\n      .reauthenticateWithCredential(prevEmail, Epassword)\r\n      .then(() => {\r\n        console.log(\"reauthenticated\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"error\", e);\r\n      });\r\n    // user.verifyBeforeUpdateEmail(newEmail)\r\n  };\r\n\r\n  changeEmail = () => {\r\n    const { prevEmail, newEmail, Epassword } = this.state;\r\n    const user = fire.auth().currentUser;\r\n    const userID = fire.auth().currentUser.uid;\r\n    if (this.validate()) {\r\n      fire\r\n        .auth()\r\n        .signInWithEmailAndPassword(prevEmail, Epassword)\r\n        .then(() => {\r\n          const cUser = fire.auth().currentUser;\r\n          if (user == cUser) {\r\n            //updating in authentication\r\n            cUser\r\n              .updateEmail(newEmail)\r\n              .then(() => {\r\n                //updating in realtime\r\n                fire\r\n                  .database()\r\n                  .ref(\"Users/\" + userID)\r\n                  .once(\"value\", (data) => {\r\n                    var datas = [];\r\n                    data.forEach((doc) => {\r\n                      fire\r\n                        .database()\r\n                        .ref(\"Users/\" + userID + \"/\" + doc.key)\r\n                        .update({ email: newEmail });\r\n                    });\r\n                  });\r\n                this.setState(\r\n                  {\r\n                    msg: \"Email Updated Successfully!\",\r\n                    errMsg: \"\",\r\n                  },\r\n                  () => {\r\n                    cUser.sendEmailVerification().then(\r\n                      () => {\r\n                        this.setState({\r\n                          ...this.state,\r\n                          errMsg: \"\",\r\n                          verMsg:\r\n                            \"Verify Your Email Before You Login Next Time.\",\r\n                        });\r\n                      },\r\n                      () => {\r\n                        this.resetInputs();\r\n\r\n                        setTimeout(() => {}, 3000);\r\n                      }\r\n                    );\r\n                  }\r\n                );\r\n              })\r\n              .catch((e) => {\r\n                this.setState({\r\n                  errMsg: e.message,\r\n                  msg: \"\",\r\n                });\r\n              });\r\n          } else {\r\n            alert(\"For Security Purposes we are logging you out\");\r\n            fire.auth().signOut();\r\n            this.props.history.push(\"/login\");\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          this.setState({\r\n            errMsg: \"Invalid Email or Password\",\r\n            msg: \"\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n  resetInputs = () => {\r\n    this.setState({\r\n      newEmail: \"\",\r\n      Epassword: \"\",\r\n      prevEmail: \"\",\r\n      msg: \"\",\r\n      errMsg: \"\",\r\n    });\r\n  };\r\n  validate = () => {\r\n    const { newEmail } = this.state;\r\n    const emailRegex = new RegExp(\r\n      /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n    );\r\n    if (!emailRegex.test(newEmail)) {\r\n      this.setState({\r\n        errMsg: \"Enter a Valid New Email\",\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  render() {\r\n    const isAuthenticated = this.props.user.isAuth;\r\n    if (!isAuthenticated) {\r\n      return <Login />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Header />\r\n          <div>\r\n            <div className=\"change-field-heading\">\r\n              <h1>Change Email</h1>\r\n            </div>\r\n            <div className=\"change-field-inputs\">\r\n              <div className=\"change-field-inputs-content\">\r\n                <label for=\"prevEmail\">Enter Previous Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"prevEmail\"\r\n                  value={this.state.prevEmail}\r\n                  id=\"prevEmail\"\r\n                  onChange={this.onChange}\r\n                  required\r\n                ></input>\r\n              </div>\r\n              <div className=\"change-field-inputs-content\">\r\n                <label for=\"Epassword\">Enter Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"Epassword\"\r\n                  value={this.state.Epassword}\r\n                  id=\"Epassword\"\r\n                  onChange={this.onChange}\r\n                  required\r\n                ></input>\r\n              </div>\r\n              {/* <div class=\"change-field-button\" onClick = {this.changeEmailVerify}>\r\n                                    <p>Verify</p>\r\n                                </div> */}\r\n              <div>\r\n                <div className=\"change-field-inputs-content\">\r\n                  <label for=\"newEmail\">Enter New Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"newEmail\"\r\n                    value={this.state.newEmail}\r\n                    id=\"newEmail\"\r\n                    onChange={this.onChange}\r\n                    required\r\n                  ></input>\r\n                </div>\r\n                <div className=\"change-field-inputs-content\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.changeEmail}\r\n                  >\r\n                    Done\r\n                  </Button>\r\n                </div>\r\n                {/* <div class=\"change-field-button\" onClick = {this.changeEmail}>\r\n                                    <p>Done</p>\r\n                                </div> */}\r\n              </div>\r\n              <div className=\"msg-display\">\r\n                <span\r\n                  style={{\r\n                    color: \"green\",\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"18px\",\r\n                  }}\r\n                >\r\n                  {this.state.msg}\r\n                </span>\r\n                <br />\r\n                <span\r\n                  style={{\r\n                    color: \"green\",\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"18px\",\r\n                  }}\r\n                >\r\n                  {this.state.verMsg}\r\n                </span>\r\n                <span\r\n                  style={{ color: \"red\", fontWeight: \"bold\", fontSize: \"18px\" }}\r\n                >\r\n                  {this.state.errMsg}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    stock: state.stock,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(ChangeEmail);\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\ForgotPassword.js",["202","203"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport \"../StyleSheets/Login.css\";\r\nimport \"../StyleSheets/ForgotPassword.css\";\r\nimport { connect } from \"react-redux\";\r\nimport fire from \"../config/fire\";\r\n\r\nexport class ForgotPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      success: false,\r\n      email: \"\",\r\n      inputError: \"\",\r\n      inputSuccess: \"\",\r\n    };\r\n  }\r\n\r\n  onChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onPasswordReset = () => {\r\n    const { email } = this.state;\r\n    fire\r\n      .auth()\r\n      .sendPasswordResetEmail(email)\r\n      .then(() => {\r\n        this.setState({\r\n          inputSuccess: \"Check Your Email\",\r\n          inputError: \"\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          inputError: \"Invalid Email\",\r\n          inputSuccess: \"\",\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"fgp-main\">\r\n        <form method=\"post\" class=\"fgpForm\">\r\n          <div class=\"fgpData\">\r\n            <h1>Password Reset</h1>\r\n            <label for=\"email\">Enter Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={this.state.email}\r\n              id=\"email\"\r\n              onChange={this.onChange}\r\n              required\r\n            ></input>\r\n            <span className=\"fgp-error\">{this.state.inputError}</span>\r\n\r\n            <span className=\"fgp-success\">{this.state.inputSuccess}</span>\r\n\r\n            <div>\r\n              <div\r\n                class=\"button\"\r\n                id=\"button-login\"\r\n                onClick={this.onPasswordReset}\r\n              >\r\n                <div id=\"circle\"></div>\r\n                <p>Reset Password</p>\r\n                {/* <Link to=\"/\">LOGIN</Link> */}\r\n              </div>\r\n            </div>\r\n            <div class=\"fgp-links\">\r\n              <Link id=\"fpass\" to=\"/Login\">\r\n                Back to Login\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\DeleteAccount.js",["204","205"],"import React, { Component } from \"react\";\r\nimport \"../StyleSheets/ChangeEmail.css\";\r\nimport PropertyHeader from \"./PropertyHeader\";\r\nimport fire from \"../config/fire\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport Login from \"../Login\";\r\nclass DeleteAccount extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      prevEmail: \"\",\r\n      Epassword: \"\",\r\n      msg: \"\",\r\n      errMsg: \"\",\r\n      verMsg: \"\",\r\n    };\r\n  }\r\n  onChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  deleteAccount = () => {\r\n    const { prevEmail, Epassword } = this.state;\r\n    const user = fire.auth().currentUser;\r\n    const userID = fire.auth().currentUser.uid;\r\n    fire\r\n      .auth()\r\n      .signInWithEmailAndPassword(prevEmail, Epassword)\r\n      .then(() => {\r\n        const cUser = fire.auth().currentUser;\r\n\r\n        if (user == cUser) {\r\n          cUser\r\n            .delete()\r\n            .then(() => {})\r\n            .catch((e) => {\r\n              this.setState({\r\n                errMsg: e.message,\r\n              });\r\n            });\r\n          fire\r\n            .database()\r\n            .ref(\"Users/\" + userID)\r\n            .remove();\r\n\r\n          alert(\"Your Account has been deleted. Logging you out.\");\r\n          this.props.history.push(\"/login\");\r\n        } else {\r\n          alert(\"For Security Purposes we are logging you out\");\r\n          fire.auth().signOut();\r\n          this.props.history.push(\"/login\");\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        this.setState({\r\n          errMsg: e.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  resetInputs = () => {\r\n    this.setState({\r\n      Epassword: \"\",\r\n      prevEmail: \"\",\r\n      msg: \"\",\r\n      errMsg: \"\",\r\n    });\r\n  };\r\n  validate = () => {\r\n    const { newEmail } = this.state;\r\n    const emailRegex = new RegExp(\r\n      /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n    );\r\n    if (!emailRegex.test(newEmail)) {\r\n      this.setState({\r\n        errMsg: \"Enter a Valid New Email\",\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  render() {\r\n    const isAuthenticated = this.props.user.isAuth;\r\n    if (!isAuthenticated) {\r\n      return <Login />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Header />\r\n          <div>\r\n            <div className=\"change-field-heading\">\r\n              <h1>Delete Your Account</h1>\r\n            </div>\r\n            <div className=\"change-field-inputs\">\r\n              <div className=\"change-field-inputs-content\">\r\n                <label for=\"prevEmail\">Enter Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"prevEmail\"\r\n                  value={this.state.prevEmail}\r\n                  id=\"prevEmail\"\r\n                  onChange={this.onChange}\r\n                  required\r\n                ></input>\r\n              </div>\r\n              <div className=\"change-field-inputs-content\">\r\n                <label for=\"Epassword\">Enter Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"Epassword\"\r\n                  value={this.state.Epassword}\r\n                  id=\"Epassword\"\r\n                  onChange={this.onChange}\r\n                  required\r\n                ></input>\r\n              </div>\r\n              <div className=\"change-field-inputs-content\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.deleteAccount}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n\r\n              {/* <div class=\"change-field-button\" onClick = {this.deleteAccount}>\r\n                                    <p>Delete</p>\r\n                                </div> */}\r\n\r\n              <div className=\"msg-display\">\r\n                <span\r\n                  style={{\r\n                    color: \"green\",\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"18px\",\r\n                  }}\r\n                >\r\n                  {this.state.msg}\r\n                </span>\r\n                <span\r\n                  style={{ color: \"red\", fontWeight: \"bold\", fontSize: \"18px\" }}\r\n                >\r\n                  {this.state.errMsg}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    stock: state.stock,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(DeleteAccount);\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\config\\fire.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\LandingPageHeader.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Footer.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PropertyHeader.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Header.js",["206","207","208","209","210","211","212","213","214"],"import React from \"react\";\r\nimport \"../StyleSheets/Header.css\";\r\nimport { RiUserSettingsFill } from \"react-icons/ri\";\r\nimport { Link } from \"react-router-dom\";\r\nimport fire from \"../config/fire\";\r\nimport * as RiIcon from \"react-icons/ri\";\r\nimport { BiArrowBack } from \"react-icons/bi\";\r\nimport { SidebarData } from \"./SidebarData\";\r\n// import Popover from 'react-awesome-popover'\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport clsx from \"clsx\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = () => ({\r\n  list: {\r\n    width: 10,\r\n  },\r\n  fullList: {\r\n    width: \"0\",\r\n  },\r\n});\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sidebar: false,\r\n      homescreen: false,\r\n      right: false,\r\n      anchorEl: null,\r\n      data: [],\r\n      tempData: [],\r\n      loading: true,\r\n      delArray: [],\r\n      dontGet: false,\r\n    };\r\n  }\r\n  async componentDidMount() {}\r\n  getData = async () => {\r\n    const uid = localStorage.getItem(\"uid\");\r\n    fire.database().ref(\"historicaldatafyp-default-rtdb/Stocks/\");\r\n    const user = await fire\r\n      .database()\r\n      .ref(\"Users/\" + uid)\r\n      .once(\"value\");\r\n    //key\r\n\r\n    var userData = user.val()[Object.keys(user.val())[0]];\r\n    var temp = [];\r\n    for (let i in userData.subscriptions) {\r\n      //company name\r\n      // console.log(userData.subscriptions[i])\r\n      //latest value\r\n      const lastval = await fire\r\n        .database()\r\n        .ref(\r\n          `historicaldatafyp-default-rtdb/Stocks/${userData.subscriptions[i]}`\r\n        )\r\n        .limitToLast(1)\r\n        .once(\"value\");\r\n      var notif = \"\";\r\n      if (lastval != undefined) {\r\n        for (let j in lastval.val()) {\r\n          const Close = lastval.val()[j].Close;\r\n          const Date = lastval.val()[j].Date;\r\n          const Open = lastval.val()[j].Open;\r\n          const High = lastval.val()[j].High;\r\n          const Low = lastval.val()[j].Low;\r\n          notif =\r\n            userData.subscriptions[i] +\r\n            \": OHLC for \" +\r\n            Date +\r\n            \" is \" +\r\n            \" O:\" +\r\n            Open +\r\n            \" H:\" +\r\n            High +\r\n            \" L:\" +\r\n            Low +\r\n            \" C:\" +\r\n            Close;\r\n        }\r\n        temp.push(notif);\r\n        fire\r\n          .database()\r\n          .ref(\"Users/\" + uid)\r\n          .once(\"value\", (snap) => {\r\n            snap.forEach((doc) => {\r\n              fire\r\n                .database()\r\n                .ref(\"Users/\" + uid + \"/\" + doc.key)\r\n                .update({\r\n                  Notifications: temp,\r\n                });\r\n            });\r\n          });\r\n        // this.setState({\r\n        //     data:temp\r\n        // })\r\n        console.log(\"come\");\r\n      }\r\n    }\r\n    var notifications = userData.Notifications;\r\n    console.log(\"noti\", notifications);\r\n    if (notifications != undefined) {\r\n      notifications.reverse();\r\n      this.setState({\r\n        ...this.state,\r\n        tempData: notifications,\r\n      });\r\n    }\r\n  };\r\n\r\n  saveInOriginal = async () => {\r\n    const isAuthenticated = this.props.user.isAuth;\r\n    if (!isAuthenticated) {\r\n      console.log(\"\");\r\n    } else {\r\n      this.setState({\r\n        data: this.state.tempData,\r\n        loading: false,\r\n      });\r\n\r\n      const uid = localStorage.getItem(\"uid\");\r\n      const user = await fire\r\n        .database()\r\n        .ref(\"Users/\" + uid)\r\n        .once(\"value\");\r\n      //key\r\n      const userData = user.val()[Object.keys(user.val())[0]];\r\n\r\n      var arr = [];\r\n      for (let i in this.state.data) {\r\n        for (let j in userData.RemovedNotifications)\r\n          var arr = this.state.data.filter((e) => {\r\n            if (this.state.data[i] === userData.RemovedNotifications[j]) {\r\n              return false;\r\n            } else {\r\n              return true;\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClick = async (event) => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n    if (this.state.dontGet == false) {\r\n      await this.getData();\r\n      await this.saveInOriginal();\r\n    }\r\n\r\n    // this.handleClick();\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ ...this.state, [anchor]: open });\r\n  };\r\n\r\n  showSideBar = () => {\r\n    this.setState({\r\n      sidebar: !this.state.sidebar,\r\n      homescreen: !this.state.homescreen,\r\n    });\r\n    // this.props.checkSide(this.state.sidebar)\r\n    this.props.data(this.state.homescreen);\r\n    this.props.dataSide(this.state.sidebar);\r\n  };\r\n\r\n  logout() {\r\n    fire.auth().signOut();\r\n    localStorage.removeItem(\"uid\");\r\n  }\r\n\r\n  list = (anchor) => (\r\n    <div\r\n      className=\"asd\"\r\n      role=\"presentation\"\r\n      onClick={this.toggleDrawer(anchor, false)}\r\n      onKeyDown={this.toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\r\n          \"Change Email\",\r\n          \"Change Password\",\r\n          \"View History\",\r\n          \"Delete Account\",\r\n        ].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n    </div>\r\n  );\r\n  onCloseClick = async (index) => {\r\n    this.setState({\r\n      dontGet: true,\r\n    });\r\n    const userID = localStorage.getItem(\"uid\");\r\n\r\n    var temp = this.state.delArray;\r\n\r\n    const delVal = this.state.data.filter((e, i) => {\r\n      return i == index;\r\n    });\r\n    temp = [...temp, ...delVal];\r\n    this.setState({\r\n      delArray: temp,\r\n    });\r\n    const newArr = this.state.data.filter((e, i) => {\r\n      return i !== index;\r\n    });\r\n\r\n    //setting state\r\n    this.setState({\r\n      data: newArr,\r\n    });\r\n    //setting database\r\n    await fire\r\n      .database()\r\n      .ref(\"Users/\" + userID)\r\n      .once(\"value\", (snap) => {\r\n        snap.forEach((doc) => {\r\n          fire\r\n            .database()\r\n            .ref(\"Users/\" + userID + \"/\" + doc.key)\r\n            .update({\r\n              Notifications: newArr,\r\n              // RemovedNotifications: delVal\r\n            });\r\n        });\r\n      });\r\n\r\n    await fire\r\n      .database()\r\n      .ref(\"Users/\" + userID)\r\n      .once(\"value\", (snap) => {\r\n        snap.forEach((doc) => {\r\n          fire\r\n            .database()\r\n            .ref(\"Users/\" + userID + \"/\" + doc.key)\r\n            .update({\r\n              RemovedNotifications: this.state.delArray,\r\n            });\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul className=\"topbar\">\r\n          <li>\r\n            <Link to=\"/Home\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link onClick={this.handleClick}>\r\n              <NotificationsIcon />\r\n            </Link>\r\n          </li>\r\n\r\n          <li>\r\n            <Link to=\"/\" onClick={this.logout}>\r\n              <RiIcon.RiLogoutBoxLine size={29} />\r\n            </Link>\r\n          </li>\r\n          <li onClick={this.toggleDrawer(\"right\", true)}>\r\n            <Link to=\"#\">\r\n              <RiUserSettingsFill size=\"30px\" color=\"white\" />\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <div>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={this.state.anchorEl}\r\n            keepMounted\r\n            open={Boolean(this.state.anchorEl)}\r\n            onClose={this.handleClose}\r\n            className=\"notificationMenu\"\r\n          >\r\n            {this.state.loading == true ? (\r\n              <div\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  marginTop: \"20px\",\r\n                  height: \"50px\",\r\n                  width: \"320px\",\r\n                }}\r\n              >\r\n                <CircularProgress style={{}} disableShrink />\r\n              </div>\r\n            ) : this.state.data.length > 0 ? (\r\n              this.state.data.map((key, index) => {\r\n                return (\r\n                  <div>\r\n                    <div className=\"notifications\" name={index} key={index}>\r\n                      <p>{key}</p>\r\n                      <CloseIcon\r\n                        fontSize=\"small\"\r\n                        style={{ marginTop: \"20px\" }}\r\n                        onClick={() => this.onCloseClick(index)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n            ) : (\r\n              <div\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  marginTop: \"20px\",\r\n                  height: \"50px\",\r\n                  width: \"320px\",\r\n                }}\r\n              >\r\n                You don't have any notifications\r\n              </div>\r\n            )}\r\n          </Menu>\r\n        </div>\r\n        {[\"right\"].map((anchor) => (\r\n          <React.Fragment key={anchor}>\r\n            <Button onClick={this.toggleDrawer(anchor, true)}>{anchor}</Button>\r\n            <SwipeableDrawer\r\n              anchor={anchor}\r\n              open={this.state[anchor]}\r\n              onClose={this.toggleDrawer(anchor, false)}\r\n              onOpen={this.toggleDrawer(anchor, true)}\r\n            >\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    fontSize: \"25px\",\r\n                    marginBottom: \"10px\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-evenly\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <BiArrowBack\r\n                      style={{ marginTop: \"2\", cursor: \"pointer\" }}\r\n                      size={30}\r\n                      onClick={this.toggleDrawer(anchor, false)}\r\n                    />\r\n                  </div>\r\n                  <div>Account Settings</div>\r\n                </div>\r\n                {SidebarData.map((item, index) => {\r\n                  return (\r\n                    <li key={index} className={item.cName}>\r\n                      <Link to={item.path}>\r\n                        {item.icon}\r\n                        <span>{item.title}</span>\r\n                      </Link>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </div>\r\n            </SwipeableDrawer>\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    stock: state.stock,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(withStyles(useStyles)(Header));\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Slider.js",["215","216","217","218"],"import AwesomeSlider from \"react-awesome-slider\";\r\nimport withAutoplay from \"react-awesome-slider/dist/autoplay\";\r\nimport \"react-awesome-slider/dist/styles.css\";\r\nimport stockpic from \"../StyleSheets/images/business-finance-terms-and-definitions-1-2.jpg\";\r\n// import begginerpic from 'C:/Users/Faian/invvesco/client/src/StyleSheets/images/begginer.jpg'\r\nimport begginerpic from \"../StyleSheets/images/easy.jpg\";\r\nimport prosliderpic from \"../StyleSheets/images/propertySlider.jpg\";\r\nimport algopic from \"../StyleSheets/images/algo.jpg\";\r\nimport \"../StyleSheets/Slider.css\";\r\nconst AutoplaySlider = withAutoplay(AwesomeSlider);\r\n\r\nfunction Slider() {\r\n  return (\r\n    <div className=\"slider-main\">\r\n      <AutoplaySlider\r\n        fillParent={true}\r\n        play={true}\r\n        mobileTouch={true}\r\n        cancelOnInteraction={false} // should stop playing on user interaction\r\n        interval={6000}\r\n        // transitionDelay={2000}\r\n        bullets={false}\r\n        organicArrows={true}\r\n      >\r\n        <div>\r\n          <img className=\"slider-image\" src={prosliderpic}></img>\r\n          <div className=\"slider-content\">\r\n            <div className=\"slider-content-heading\">\r\n              <h1>Know Where to Invest!</h1>\r\n            </div>\r\n            <div className=\"slider-content-description\">\r\n              <p>\r\n                Want to invest but don't know where to? You've come to the right\r\n                place!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <img className=\"slider-image\" src={algopic}></img>\r\n          <div className=\"slider-content\">\r\n            <div className=\"slider-content-heading\">\r\n              <h1>The Best Practices!</h1>\r\n            </div>\r\n            <div className=\"slider-content-description\">\r\n              <p>Get access to strategies and practices created by experts!</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <img className=\"slider-image\" src={begginerpic}></img>\r\n          <div className=\"slider-content\">\r\n            <div className=\"slider-content-heading\">\r\n              <h1>Easy For Everyone!</h1>\r\n            </div>\r\n            <div className=\"slider-content-description\">\r\n              <p>\r\n                A beginner? No problem! Get the predicted data and invest. No\r\n                technical skills required!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </AutoplaySlider>\r\n    </div>\r\n  );\r\n}\r\nexport default Slider;\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\AreaSidebarData.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PredictedStock.js",["219","220","221","222","223"],"import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport fire from \"../config/fire\";\r\nimport \"../StyleSheets/StockMainPage.css\";\r\nimport ReactApexCharts from \"react-apexcharts\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport \"../StyleSheets/predictStock.css\";\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  tab: {\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nexport class PredictedStock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      techArr: [],\r\n      selectedValue: this.props.selector,\r\n      mainCompanies: this.props.mainCompanies,\r\n      page: 0,\r\n      rowsPerPage: 10,\r\n      isLoading: true,\r\n      rows: [],\r\n      value: \"1\",\r\n      series: [\r\n        {\r\n          name: \"Historical\",\r\n          data: [\r\n            {\r\n              x: 0,\r\n              y: [],\r\n              color: \"black\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          name: \"Predicted\",\r\n          data: [\r\n            {\r\n              x: 0,\r\n              y: [1],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n      options: {\r\n        colors: [\"#247BA0\", \"#FF1654\"],\r\n        grid: {\r\n          borderColor: \"#f1f1f1\",\r\n        },\r\n        chart: {\r\n          type: \"line\",\r\n          height: 1050,\r\n        },\r\n        stroke: {\r\n          width: 2,\r\n        },\r\n        title: {\r\n          text: \"Predicted Line Chart\",\r\n          align: \"left\",\r\n        },\r\n        xaxis: {\r\n          type: \"datetime\",\r\n        },\r\n        yaxis: {\r\n          tooltip: {\r\n            enabled: true,\r\n          },\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  getHistoricalTableData = () => {\r\n    let tableData = [];\r\n    fire\r\n      .database()\r\n      .ref(`historicaldatafyp-default-rtdb/Stocks/${this.state.selectedValue}`)\r\n      .limitToLast(30)\r\n      .on(\"value\", (snapshot) => {\r\n        snapshot.forEach((openSnapShot) => {\r\n          var val = openSnapShot.val();\r\n          const ros = {\r\n            open: val.Open,\r\n            high: val.High,\r\n            low: val.Low,\r\n            close: val.Close,\r\n            change: val.Change,\r\n            volume: val.Volume,\r\n            date: val.Date,\r\n          };\r\n          tableData.push(ros);\r\n        });\r\n        this.setState({\r\n          rows: tableData,\r\n        });\r\n      });\r\n  };\r\n\r\n  getHistoricalGraphData = () => {\r\n    let data = [];\r\n    fire\r\n      .database()\r\n      .ref(`historicaldatafyp-default-rtdb/Stocks/${this.state.selectedValue}`)\r\n      .limitToLast(30)\r\n      .on(\"value\", (snapshot) => {\r\n        snapshot.forEach((openSnapShot) => {\r\n          var val = openSnapShot.val();\r\n          let data1 = [];\r\n          data1.push(val.Close);\r\n          data.push({\r\n            x: new Date(val.Date),\r\n            y: data1,\r\n          });\r\n        });\r\n        this.setState({\r\n          ...this.state.series,\r\n          series: [\r\n            {\r\n              name: \"Historical\",\r\n              data: data,\r\n            },\r\n          ],\r\n        });\r\n      });\r\n  };\r\n  getPredictedStockData = () => {\r\n    //need array of objects data = [{x:date,y:price}]\r\n    fetch(\r\n      `https://ml-stock.herokuapp.com/predictions/?Ticker=${this.state.selectedValue}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        let myList = [];\r\n        Object.keys(responseData).map((date, index) => {\r\n          myList.push({\r\n            x: new Date(date),\r\n            y: responseData[date],\r\n          });\r\n        });\r\n        //historical prices\r\n        var hist = this.state.series[0];\r\n        var histPluspred = [];\r\n        //history + Predictions\r\n        histPluspred.push(hist, { name: \"Predicted\", data: myList });\r\n        this.setState({\r\n          ...this.state.series,\r\n          series: histPluspred,\r\n          isLoading: false,\r\n        });\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    this.getHistoricalGraphData();\r\n    this.getPredictedStockData();\r\n    this.getTechnicalAnalysis();\r\n  }\r\n  getTechnicalAnalysis = () => {\r\n    var arr = [];\r\n    fetch(\r\n      `https://ml-stock.herokuapp.com/technical/?Ticker=${this.state.selectedValue}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        Object.keys(responseData).forEach((i) => {\r\n          arr.push(responseData[i]);\r\n        });\r\n        this.setState({\r\n          techArr: arr,\r\n        });\r\n      });\r\n  };\r\n  handleRadioChange = (event) => {\r\n    this.setState(\r\n      {\r\n        ...this.state.selectedValue,\r\n        selectedValue: event.target.value,\r\n        isLoading: true,\r\n      },\r\n      () => {\r\n        this.getHistoricalGraphData();\r\n        this.getPredictedStockData();\r\n        this.getTechnicalAnalysis();\r\n        // this.getHistoricalTableData()\r\n      }\r\n    );\r\n\r\n    // this.forceUpdate()\r\n  };\r\n\r\n  handleChange = (event, newValue) => {\r\n    this.setState({\r\n      value: newValue,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className=\"stock-graph\">\r\n          {this.state.isLoading == true ? (\r\n            <div style={{ height: \"50vh\" }}>\r\n              <CircularProgress\r\n                size={50}\r\n                style={{ marginLeft: \"50%\", marginTop: \"20vh\" }}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <ReactApexCharts\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type=\"line\"\r\n            />\r\n          )}\r\n\r\n          <div className=\"stock-radio-buttons\">\r\n            {this.state.mainCompanies.map((row, index) => {\r\n              return (\r\n                <label>\r\n                  <Radio\r\n                    checked={this.state.selectedValue === row}\r\n                    onChange={this.handleRadioChange}\r\n                    value={row}\r\n                    name=\"radio-button-demo\"\r\n                    inputProps={{ \"aria-label\": row }}\r\n                    color=\"primary\"\r\n                  />\r\n                  {row}\r\n                </label>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"techAnal-table\">\r\n            <table>\r\n              <h1>Technical Analysis</h1>\r\n              <tr className=\"techAnal-row\">\r\n                <th>Name</th>\r\n                <th>Action</th>\r\n              </tr>\r\n              <tr className=\"techAnal-row\">\r\n                <td>RSI Calculation</td>\r\n\r\n                <td>\r\n                  {this.state.isLoading == true ? (\r\n                    <CircularProgress size={20} />\r\n                  ) : (\r\n                    this.state.techArr[2]\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr className=\"techAnal-row\">\r\n                <td>On-Balance Volume</td>\r\n                <td>\r\n                  {this.state.isLoading == true ? (\r\n                    <CircularProgress size={20} />\r\n                  ) : (\r\n                    this.state.techArr[1]\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr className=\"techAnal-row\">\r\n                <td>MACD Calculation</td>\r\n                <td>\r\n                  {this.state.isLoading == true ? (\r\n                    <CircularProgress size={20} />\r\n                  ) : (\r\n                    this.state.techArr[0]\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(PredictedStock);\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\HomePlotMenu.js",["224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { connect } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../StyleSheets/HomePlotMenu.css\";\r\nimport PlotChart from \"./PlotChart\";\r\nimport Login from \"../Login\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport PredictedPlots from \"./PredictedPlots\";\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& > *\": {\r\n      // margin: theme.spacing(1),\r\n    },\r\n    // backgroundColor: theme.palette.background.paper,\r\n    // backgroundColor: 'black',\r\n  },\r\n  panel: {\r\n    backgroundColor: \"white\",\r\n  },\r\n}));\r\n\r\nfunction SimpleTabs(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [houseVars, setHouseVars] = React.useState({\r\n    size: \"Marla\",\r\n    price: \"0\",\r\n  });\r\n  const [isLoading, setLoading] = React.useState(false);\r\n  const isAuthenticated = useSelector((state) => state.user);\r\n  // setHouseVars({...houseVars,size:'Kanal'})\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const calculatePrice = () => {\r\n    setLoading(true);\r\n    fetch(\r\n      `https://housingpredict.herokuapp.com/prediction/?size=${houseVars.area}%20${houseVars.size}&&baths=${houseVars.bath}&&beds=${houseVars.bed}&&location=${houseVars.location}`\r\n    ).then((response) => {\r\n      response\r\n        .json()\r\n        .then((responseData) => {\r\n          setLoading(false);\r\n          setHouseVars({ ...houseVars, price: responseData, error: \"\" });\r\n        })\r\n        .catch((e) => {\r\n          setLoading(false);\r\n          var negativeNum = new RegExp(\r\n            /^[+]?([0-9]+(?:[\\.][0-9]*)?|\\.[0-9]+)$/\r\n          );\r\n          if (\r\n            houseVars.area == \"e\" ||\r\n            houseVars.area == \"\" ||\r\n            negativeNum.test(houseVars.area) ||\r\n            houseVars.area == \"0\"\r\n          ) {\r\n            setHouseVars({\r\n              ...houseVars,\r\n              price: \"0\",\r\n              error: \"Enter Valid Area\",\r\n              area: \"\",\r\n            });\r\n          } else if (\r\n            houseVars.bath == \"e\" ||\r\n            houseVars.bath == \"\" ||\r\n            !negativeNum.test(houseVars.bath)\r\n          ) {\r\n            setHouseVars({\r\n              ...houseVars,\r\n              price: \"0\",\r\n              error: \"Enter Your Bathroom(s)\",\r\n              bath: \"\",\r\n            });\r\n          } else if (\r\n            houseVars.bed == \"e\" ||\r\n            houseVars.bed == \"\" ||\r\n            !negativeNum.test(houseVars.bed)\r\n          ) {\r\n            setHouseVars({\r\n              ...houseVars,\r\n              price: \"0\",\r\n              error: \"Enter Your Bedroom(s)\",\r\n              bed: \"\",\r\n            });\r\n          } else if (\r\n            houseVars.location != top100Films.map((option) => option.title)\r\n          ) {\r\n            setHouseVars({\r\n              ...houseVars,\r\n              price: \"0\",\r\n              error: \"Enter a Valid Location\",\r\n              location: \"\",\r\n            });\r\n          } else {\r\n            setHouseVars({ ...houseVars, error: \"\" });\r\n          }\r\n        });\r\n    });\r\n  };\r\n  const onChangeInputs = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    setHouseVars({ ...houseVars, [name]: value });\r\n  };\r\n\r\n  const top100Films = [\r\n    { title: \"7th Avenue\" },\r\n    { title: \"9th Avenue\" },\r\n    { title: \"Abdullah Garden\" },\r\n    { title: \"AGHOSH\" },\r\n    { title: \"Agro Farming Scheme\" },\r\n    { title: \"Airport Avenue Housing Society\" },\r\n    { title: \"Airport Enclave\" },\r\n    { title: \"Aiza Garden\" },\r\n    { title: \"Al Huda Town\" },\r\n    { title: \"Al Qaim Town\" },\r\n    { title: \"Ali Pur\" },\r\n    { title: \"Alipur Farash\" },\r\n    { title: \"Angoori Road\" },\r\n    { title: \"Arsalan Town\" },\r\n    { title: \"Athal\" },\r\n    { title: \"B-17\" },\r\n    { title: \"Bahria Town\" },\r\n    { title: \"Bani Gala\" },\r\n    { title: \"Bhara kahu\" },\r\n    { title: \"Blue Area\" },\r\n    { title: \"Bokra Road\" },\r\n    { title: \"Burma Town\" },\r\n    { title: \"C-18\" },\r\n    { title: \"C-19\" },\r\n    { title: \"CBR Town\" },\r\n    { title: \"Chak Shahzad\" },\r\n    { title: \"Chatha Bakhtawar\" },\r\n    { title: \"Chattar\" },\r\n    { title: \"Chirah\" },\r\n    { title: \"Constitution Avenue\" },\r\n    { title: \"D-12\" },\r\n    { title: \"D-14\" },\r\n    { title: \"D-16\" },\r\n    { title: \"D-17\" },\r\n    { title: \"DHA Defence\" },\r\n    { title: \"Diplomatic Enclave\" },\r\n    { title: \"E-11\" },\r\n    { title: \"E-13\" },\r\n    { title: \"E-14\" },\r\n    { title: \"E-15\" },\r\n    { title: \"E-16\" },\r\n    { title: \"E-17\" },\r\n    { title: \"E-18\" },\r\n    { title: \"E-7\" },\r\n    { title: \"Emaar Canyon Views\" },\r\n    { title: \"F-10\" },\r\n    { title: \"F-11\" },\r\n    { title: \"F-15\" },\r\n    { title: \"F-17\" },\r\n    { title: \"F-6\" },\r\n    { title: \"F-7\" },\r\n    { title: \"F-8\" },\r\n    { title: \"Faisal Town - F-18\" },\r\n    { title: \"Fateh Jang Road\" },\r\n    { title: \"FECHS\" },\r\n    { title: \"Federal Government Employees Housing Foundation\" },\r\n    { title: \"Frash Town\" },\r\n    { title: \"G-10\" },\r\n    { title: \"G-11\" },\r\n    { title: \"G-12\" },\r\n    { title: \"G-13\" },\r\n    { title: \"G-14\" },\r\n    { title: \"G-15\" },\r\n    { title: \"G-16\" },\r\n    { title: \"G-17\" },\r\n    { title: \"G-6\" },\r\n    { title: \"G-7\" },\r\n    { title: \"G-8\" },\r\n    { title: \"G-9\" },\r\n    { title: \"Gandhara City\" },\r\n    { title: \"Garden Town\" },\r\n    { title: \"Ghauri Town\" },\r\n    { title: \"Golra Mor\" },\r\n    { title: \"Golra Road\" },\r\n    { title: \"Green Avenue\" },\r\n    { title: \"GT Road\" },\r\n    { title: \"Gulberg\" },\r\n    { title: \"Gulshan-e-Khudadad\" },\r\n    { title: \"H-12\" },\r\n    { title: \"H-13\" },\r\n    { title: \"H-15\" },\r\n    { title: \"I-10\" },\r\n    { title: \"I-11\" },\r\n    { title: \"I-12\" },\r\n    { title: \"I-13\" },\r\n    { title: \"I-14\" },\r\n    { title: \"I-16\" },\r\n    { title: \"I-8\" },\r\n    { title: \"I-9\" },\r\n    { title: \"IJP Road\" },\r\n    { title: \"Islamabad - Murree Expressway\" },\r\n    { title: \"Islamabad - Peshawar Motorway\" },\r\n    { title: \"Islamabad Expressway\" },\r\n    { title: \"Islamabad Golf City\" },\r\n    { title: \"Islamabad Highway\" },\r\n    { title: \"Islamabad, Islamabad Capital\" },\r\n    { title: \"Ittefaq Town\" },\r\n    { title: \"J and K Zone 5\" },\r\n    { title: \"Jagiot Road\" },\r\n    { title: \"Jeddah Town\" },\r\n    { title: \"Jhang Syedan\" },\r\n    { title: \"Jhangi Syedan\" },\r\n    { title: \"Jinnah Avenue\" },\r\n    { title: \"Judicial Town\" },\r\n    { title: \"Kahuta Road\" },\r\n    { title: \"Karakoram Diplomatic Enclave\" },\r\n    { title: \"Kashmir Highway\" },\r\n    { title: \"Khanna Pul\" },\r\n    { title: \"Khayaban-e-Iqbal\" },\r\n    { title: \"Koral Chowk\" },\r\n    { title: \"Koral Town\" },\r\n    { title: \"Korang Road\" },\r\n    { title: \"Korang Town\" },\r\n    { title: \"Kuri Road\" },\r\n    { title: \"Lawyers Society\" },\r\n    { title: \"Lehtarar Road\" },\r\n    { title: \"Madina Town\" },\r\n    { title: \"Main Margalla Road\" },\r\n    { title: \"Margalla Town\" },\r\n    { title: \"Margalla Valley - C-12\" },\r\n    { title: \"Marwa Town\" },\r\n    { title: \"Meherban Colony\" },\r\n    { title: \"Model Town\" },\r\n    { title: \"Motorway Chowk\" },\r\n    { title: \"Multi Residencia & Orchards\" },\r\n    { title: \"Mumtaz City\" },\r\n    { title: \"Murree Road\" },\r\n    { title: \"National Police Foundation\" },\r\n    { title: \"National Police Foundation O-9\" },\r\n    { title: \"Naval Anchorage\" },\r\n    { title: \"Naval Farms Housing Scheme\" },\r\n    { title: \"Naval Housing Scheme\" },\r\n    { title: \"Nazim-ud-din Road\" },\r\n    { title: \"New Airport Town\" },\r\n    { title: \"New Blue Area\" },\r\n    { title: \"New Icon City\" },\r\n    { title: \"New Shakrial\" },\r\n    { title: \"Nova City\" },\r\n    { title: \"Orchard Scheme\" },\r\n    { title: \"PAEC Employees Cooperative Housing Society\" },\r\n    { title: \"PAF Tarnol\" },\r\n    { title: \"Pakistan Town\" },\r\n    { title: \"Park Enclave\" },\r\n    { title: \"Park Road\" },\r\n    { title: \"Park View City\" },\r\n    { title: \"PECHS\" },\r\n    { title: \"Pind Begwal\" },\r\n    { title: \"Pindorian\" },\r\n    { title: \"Pir Sohawa\" },\r\n    { title: \"Police Foundation Housing Society\" },\r\n    { title: \"PTV Colony\" },\r\n    { title: \"PWD Housing Scheme\" },\r\n    { title: \"PWD Road\" },\r\n    { title: \"Qutbal Town\" },\r\n    { title: \"Raja Akhtar Road\" },\r\n    { title: \"Rawal Enclave\" },\r\n    { title: \"Rawal Town\" },\r\n    { title: \"River Garden\" },\r\n    { title: \"Royal Avenue\" },\r\n    { title: \"Royal City\" },\r\n    { title: \"Sangjani\" },\r\n    { title: \"Sarai Kharbuza\" },\r\n    { title: \"Sehala Farm House\" },\r\n    { title: \"Shah Allah Ditta\" },\r\n    { title: \"Shah Dara\" },\r\n    { title: \"Shaheen Town\" },\r\n    { title: \"Shahpur\" },\r\n    { title: \"Shehzad Town\" },\r\n    { title: \"Sihala\" },\r\n    { title: \"Sihala Valley\" },\r\n    { title: \"Simly Dam Road\" },\r\n    { title: \"Soan Garden\" },\r\n    { title: \"Sohan Valley\" },\r\n    { title: \"Spring Valley\" },\r\n    { title: \"Swan Garden\" },\r\n    { title: \"Taramrri\" },\r\n    { title: \"Tarlai\" },\r\n    { title: \"Tarnol\" },\r\n    { title: \"Thalian\" },\r\n    { title: \"Thanda Pani\" },\r\n    { title: \"The Organic Farms Islamabad\" },\r\n    { title: \"The Springs\" },\r\n    { title: \"Top City 1\" },\r\n    { title: \"Tumair\" },\r\n    { title: \"Victoria Heights\" },\r\n    { title: \"Zaraj Housing Scheme\" },\r\n    { title: \"Zero Point\" },\r\n    { title: \"Zone 5\" },\r\n  ];\r\n\r\n  if (isAuthenticated.isAuth == false) {\r\n    return <Login />;\r\n  } else {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n        >\r\n          <Tab label=\"Houses\" {...a11yProps(0)} />\r\n          <Tab label=\"Plots\" {...a11yProps(1)} />\r\n        </Tabs>\r\n\r\n        <TabPanel value={value} index={0} className={classes.panel}>\r\n          <div className=\"house-menu\">\r\n            <div className=\"house-menu-left\">\r\n              <div>\r\n                <h1 style={{ color: \"black\" }}>House Price Calculator</h1>\r\n              </div>\r\n              <div className=\"house-menu-inputs\">\r\n                <div className=\"house-menu-inputs-rows\">\r\n                  {/* AREA AND SEARCH BAR */}\r\n                  <div className=\"house-menu-inputs-row-1\">\r\n                    <TextField\r\n                      size=\"large\"\r\n                      id=\"standard-basic\"\r\n                      type=\"number\"\r\n                      name=\"area\"\r\n                      value={houseVars.area}\r\n                      onChange={onChangeInputs}\r\n                      variant=\"outlined\"\r\n                      label=\"Area Size\"\r\n                    />\r\n                    <div>\r\n                      <select\r\n                        onChange={(e) => {\r\n                          setHouseVars({ ...houseVars, size: e.target.value });\r\n                        }}\r\n                        name=\"size\"\r\n                        id=\"size\"\r\n                      >\r\n                        <option value=\"Marla\">Marla</option>\r\n                        <option value=\"Kanal\">Kanal</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  <Autocomplete\r\n                    className=\"autocomplete-bar\"\r\n                    id=\"free-solo-demo\"\r\n                    onChange={(event, value) => {\r\n                      setHouseVars({ ...houseVars, location: value });\r\n                    }}\r\n                    freeSolo\r\n                    options={top100Films.map((option) => option.title)}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        name=\"location\"\r\n                        value={houseVars.location}\r\n                        onClick={onChangeInputs}\r\n                        label=\"Location\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                {/* BATH */}\r\n                <TextField\r\n                  type=\"number\"\r\n                  size=\"large\"\r\n                  min=\"0\"\r\n                  oninput=\"validity.valid||(value='');\"\r\n                  name=\"bath\"\r\n                  value={houseVars.bath}\r\n                  onChange={onChangeInputs}\r\n                  id=\"standard-basic\"\r\n                  variant=\"outlined\"\r\n                  label=\"Bath(s)\"\r\n                />\r\n                {/* BEDS */}\r\n                <TextField\r\n                  type=\"number\"\r\n                  size=\"large\"\r\n                  name=\"bed\"\r\n                  value={houseVars.bed}\r\n                  onChange={onChangeInputs}\r\n                  id=\"standard-basic\"\r\n                  variant=\"outlined\"\r\n                  label=\"Bed(s)\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"house-menu-right\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={calculatePrice}\r\n              >\r\n                Calculate\r\n              </Button>\r\n              <div className=\"calculated-price\">\r\n                Calculated Price :\r\n                {isLoading == false ? (\r\n                  <span> {houseVars.price} PKR</span>\r\n                ) : (\r\n                  <CircularProgress\r\n                    size=\"20px\"\r\n                    style={{ marginLeft: \"80px\" }}\r\n                    disableShrink\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div style={{ marginTop: \"20px\" }}>\r\n              <span\r\n                style={{ color: \"red\", fontWeight: \"bold\", fontSize: \"18px\" }}\r\n              >\r\n                {houseVars.error}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} className={classes.panel}>\r\n          <div>\r\n            <div>\r\n              <PredictedPlots />\r\n            </div>\r\n          </div>\r\n        </TabPanel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    stock: state.stock,\r\n  };\r\n};\r\nexport default SimpleTabs;\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PredictedPlots.js",["240","241","242","243","244","245"],"import React, { Component } from \"react\";\r\nimport ReactApexCharts from \"react-apexcharts\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport fire from \"../config/fire\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { GiConsoleController } from \"react-icons/gi\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nconst useStyles = (theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  menuPaper: {\r\n    maxHeight: 300,\r\n  },\r\n});\r\nexport class PredictedPlots extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      plotAreas: [\r\n        \"AGHOSH\",\r\n        \"AWT\",\r\n        \"Airport Enclave\",\r\n        \"Airport Green Garden\",\r\n        \"Aiza Garden\",\r\n        \"F-18\",\r\n        \"B-17\",\r\n        \"Bahria Enclave\",\r\n        \"Bahria Garden City\",\r\n        \"Bani Gala\",\r\n        \"Bhara kahu\",\r\n        \"Blue Area\",\r\n        \"C-15\",\r\n        \"C-16\",\r\n        \"CBR Town\",\r\n        \"E-16\",\r\n        \"E-17\",\r\n        \"H-13\",\r\n        \"DHA Phase 5\",\r\n        \"Chatha Bakhtawar\",\r\n        \"Lehtarar Road\",\r\n        \"D-12\",\r\n        \"D-13\",\r\n        \"D-18\",\r\n        \"DHA Phase 1\",\r\n        \"DHA Phase 2\",\r\n        \"DHA Phase 3\",\r\n        \"DHA Phase 4\",\r\n        \"DHA Serene City\",\r\n        \"E-11\",\r\n        \"E-12\",\r\n        \"Emaar Canyon Views\",\r\n        \"Engineering Co-operative Housing\",\r\n        \"F-10\",\r\n        \"F-11\",\r\n        \"F-14\",\r\n        \"F-15\",\r\n        \"F-16\",\r\n        \"F-17\",\r\n        \"F-7\",\r\n        \"F-8\",\r\n        \"FOECHS\",\r\n        \"F-19\",\r\n        \"Fateh Jang Road\",\r\n        \"Fazaia Housing Scheme\",\r\n        \"G-13\",\r\n        \"G-14\",\r\n        \"G-15\",\r\n        \"G-16\",\r\n        \"G-17\",\r\n        \"Gandhara City\",\r\n        \"Ghauri Town\",\r\n        \"Gulberg Greens\",\r\n        \"Gulberg Residencia\",\r\n        \"Gulshan-e-Sehat\",\r\n        \"Kashmir Highway\",\r\n        \"I-10\",\r\n        \"I-11\",\r\n        \"I-12\",\r\n        \"I-14\",\r\n        \"I-15\",\r\n        \"I-16\",\r\n        \"ICHS\",\r\n        \"Jinnah Gardens\",\r\n        \"Korang Town\",\r\n        \"MPCHS\",\r\n        \"Margalla View Society\",\r\n        \"Model Town\",\r\n        \"Multi Residencia & Orchards\",\r\n        \"Mumtaz City\",\r\n        \"National Police Foundation\",\r\n        \"Naval Anchorage\",\r\n        \"Naval Farms\",\r\n        \"Airport Town\",\r\n        \"OPF Valley\",\r\n        \"PAF Tarnol\",\r\n        \"PECHS\",\r\n        \"PWD\",\r\n        \"Pakistan Town\",\r\n        \"Thanda Pani\",\r\n        \"Park Enclave\",\r\n        \"Pir Sohawa\",\r\n        \"Shaheen Town\",\r\n        \"Shalimar Town\",\r\n        \"Simly Dam Road\",\r\n        \"D-17\",\r\n        \"Soan Garden\",\r\n        \"Top City 9\",\r\n        \"Top City 8\",\r\n        \"Top City 7\",\r\n        \"Top City 6\",\r\n        \"Top City 5\",\r\n        \"Top City 4\",\r\n        \"Top City 3\",\r\n        \"Top City 1\",\r\n        \"University Town\",\r\n      ],\r\n      series: [\r\n        {\r\n          name: \"Historical\",\r\n          data: [\r\n            {\r\n              x: 0,\r\n              y: [],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n      options: {\r\n        colors: [\"#247BA0\", \"#FF1654\"],\r\n        grid: {\r\n          borderColor: \"#f1f1f1\",\r\n        },\r\n        chart: {\r\n          type: \"line\",\r\n          height: 1050,\r\n        },\r\n        stroke: {\r\n          width: 2,\r\n        },\r\n        title: {\r\n          text: \"Predicted Line Chart\",\r\n          align: \"left\",\r\n        },\r\n        xaxis: {\r\n          type: \"datetime\",\r\n        },\r\n        yaxis: {\r\n          tooltip: {\r\n            enabled: true,\r\n          },\r\n        },\r\n      },\r\n      area: \"AGHOSH\",\r\n      isLoading: true,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n  fetchData = () => {\r\n    var histPlusPred = [];\r\n    let myHistList = [];\r\n    let myPredList = [];\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    fetch(\r\n      `https://plotprediction.herokuapp.com/historical/?area=${this.state.area}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        Object.keys(responseData).map((date, index) => {\r\n          myHistList.push({\r\n            x: new Date(date),\r\n            y: responseData[date],\r\n          });\r\n        });\r\n      });\r\n\r\n    fetch(\r\n      `https://plotprediction.herokuapp.com/predictions/?area=${this.state.area}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        // let myPredList = [];\r\n        Object.keys(responseData).map((date, index) => {\r\n          myPredList.push({\r\n            x: new Date(date),\r\n            y: responseData[date],\r\n          });\r\n        });\r\n\r\n        histPlusPred.push(\r\n          { name: \"historical\", data: myHistList },\r\n          { name: \"predicted\", data: myPredList }\r\n        );\r\n        this.setState({\r\n          series: histPlusPred,\r\n          isLoading: false,\r\n        });\r\n      });\r\n  };\r\n  handleChange = (event) => {\r\n    this.setState(\r\n      {\r\n        area: event.target.value,\r\n      },\r\n      () => {\r\n        this.fetchData();\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    // (this.state.area)\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"plotAreas\"\r\n          style={{ height: \"50px\", zIndex: \"0\", marginBottom: \"15px\" }}\r\n        >\r\n          <FormControl variant=\"filled\" className={classes.formControl}>\r\n            <InputLabel\r\n              style={{ height: \"100px\" }}\r\n              id=\"demo-simple-select-outlined-label\"\r\n            >\r\n              View Area\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={this.state.area}\r\n              onChange={this.handleChange}\r\n              // onClick={this.fetchData}\r\n              label=\"Age\"\r\n              MenuProps={{ classes: { paper: classes.menuPaper } }}\r\n            >\r\n              {this.state.plotAreas.map((options) => {\r\n                return <MenuItem value={options}>{options}</MenuItem>;\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className=\"plot-graph\">\r\n          {this.state.isLoading == true ? (\r\n            <CircularProgress\r\n              style={{ marginLeft: \"50%\", marginTop: \"50px\" }}\r\n              size={60}\r\n              disableShrink\r\n            />\r\n          ) : (\r\n            <ReactApexCharts\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type=\"line\"\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(PredictedPlots);\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PlotChart.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\SidebarData.js",[],["246","247"],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\TermsandConditions.js",[],{"ruleId":"248","severity":1,"message":"249","line":16,"column":3,"nodeType":"250","messageId":"251","endLine":30,"endColumn":4},{"ruleId":"252","severity":1,"message":"253","line":23,"column":5,"nodeType":"254","messageId":"255","endLine":29,"endColumn":13},{"ruleId":"256","severity":1,"message":"257","line":50,"column":7,"nodeType":"258","messageId":"259","endLine":50,"endColumn":15},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"256","severity":1,"message":"264","line":9,"column":42,"nodeType":"258","messageId":"259","endLine":9,"endColumn":48},{"ruleId":"256","severity":1,"message":"265","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":14},{"ruleId":"266","severity":1,"message":"267","line":79,"column":13,"nodeType":"268","endLine":79,"endColumn":43},{"ruleId":"256","severity":1,"message":"269","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":14},{"ruleId":"256","severity":1,"message":"270","line":22,"column":26,"nodeType":"258","messageId":"259","endLine":22,"endColumn":39},{"ruleId":"256","severity":1,"message":"271","line":30,"column":8,"nodeType":"258","messageId":"259","endLine":30,"endColumn":23},{"ruleId":"256","severity":1,"message":"272","line":31,"column":8,"nodeType":"258","messageId":"259","endLine":31,"endColumn":12},{"ruleId":"256","severity":1,"message":"273","line":32,"column":8,"nodeType":"258","messageId":"259","endLine":32,"endColumn":12},{"ruleId":"256","severity":1,"message":"274","line":33,"column":8,"nodeType":"258","messageId":"259","endLine":33,"endColumn":15},{"ruleId":"256","severity":1,"message":"275","line":34,"column":8,"nodeType":"258","messageId":"259","endLine":34,"endColumn":16},{"ruleId":"256","severity":1,"message":"276","line":35,"column":8,"nodeType":"258","messageId":"259","endLine":35,"endColumn":20},{"ruleId":"256","severity":1,"message":"277","line":37,"column":8,"nodeType":"258","messageId":"259","endLine":37,"endColumn":18},{"ruleId":"256","severity":1,"message":"278","line":39,"column":7,"nodeType":"258","messageId":"259","endLine":39,"endColumn":12},{"ruleId":"256","severity":1,"message":"279","line":124,"column":11,"nodeType":"258","messageId":"259","endLine":124,"endColumn":15},{"ruleId":"280","severity":1,"message":"281","line":155,"column":15,"nodeType":"282","endLine":155,"endColumn":39},{"ruleId":"280","severity":1,"message":"281","line":320,"column":17,"nodeType":"282","endLine":320,"endColumn":41},{"ruleId":"283","severity":1,"message":"284","line":322,"column":17,"nodeType":"268","endLine":322,"endColumn":42},{"ruleId":"280","severity":1,"message":"281","line":337,"column":19,"nodeType":"282","endLine":337,"endColumn":41},{"ruleId":"280","severity":1,"message":"281","line":358,"column":17,"nodeType":"282","endLine":358,"endColumn":41},{"ruleId":"283","severity":1,"message":"284","line":360,"column":17,"nodeType":"268","endLine":360,"endColumn":45},{"ruleId":"280","severity":1,"message":"281","line":374,"column":19,"nodeType":"282","endLine":374,"endColumn":41},{"ruleId":"280","severity":1,"message":"281","line":393,"column":17,"nodeType":"282","endLine":393,"endColumn":41},{"ruleId":"283","severity":1,"message":"284","line":395,"column":17,"nodeType":"268","endLine":395,"endColumn":39},{"ruleId":"280","severity":1,"message":"281","line":409,"column":19,"nodeType":"282","endLine":409,"endColumn":41},{"ruleId":"256","severity":1,"message":"285","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":29},{"ruleId":"256","severity":1,"message":"286","line":6,"column":10,"nodeType":"258","messageId":"259","endLine":6,"endColumn":23},{"ruleId":"256","severity":1,"message":"287","line":131,"column":13,"nodeType":"258","messageId":"259","endLine":131,"endColumn":25},{"ruleId":"288","severity":1,"message":"289","line":154,"column":37,"nodeType":"290","messageId":"291","endLine":154,"endColumn":39},{"ruleId":"256","severity":1,"message":"292","line":175,"column":16,"nodeType":"258","messageId":"259","endLine":175,"endColumn":25},{"ruleId":"256","severity":1,"message":"293","line":176,"column":13,"nodeType":"258","messageId":"259","endLine":176,"endColumn":18},{"ruleId":"256","severity":1,"message":"294","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":22},{"ruleId":"256","severity":1,"message":"295","line":58,"column":47,"nodeType":"258","messageId":"259","endLine":58,"endColumn":59},{"ruleId":"288","severity":1,"message":"296","line":66,"column":20,"nodeType":"290","messageId":"291","endLine":66,"endColumn":22},{"ruleId":"288","severity":1,"message":"289","line":122,"column":32,"nodeType":"290","messageId":"291","endLine":122,"endColumn":34},{"ruleId":"256","severity":1,"message":"297","line":3,"column":18,"nodeType":"258","messageId":"259","endLine":3,"endColumn":25},{"ruleId":"256","severity":1,"message":"298","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":12},{"ruleId":"256","severity":1,"message":"299","line":22,"column":9,"nodeType":"258","messageId":"259","endLine":22,"endColumn":12},{"ruleId":"300","severity":1,"message":"301","line":63,"column":48,"nodeType":"302","messageId":"303","endLine":63,"endColumn":50},{"ruleId":"300","severity":1,"message":"301","line":79,"column":48,"nodeType":"302","messageId":"303","endLine":79,"endColumn":50},{"ruleId":"288","severity":1,"message":"296","line":101,"column":26,"nodeType":"290","messageId":"291","endLine":101,"endColumn":28},{"ruleId":"256","severity":1,"message":"304","line":18,"column":8,"nodeType":"258","messageId":"259","endLine":18,"endColumn":22},{"ruleId":"256","severity":1,"message":"305","line":21,"column":8,"nodeType":"258","messageId":"259","endLine":21,"endColumn":20},{"ruleId":"256","severity":1,"message":"306","line":22,"column":8,"nodeType":"258","messageId":"259","endLine":22,"endColumn":10},{"ruleId":"256","severity":1,"message":"307","line":148,"column":9,"nodeType":"258","messageId":"259","endLine":148,"endColumn":13},{"ruleId":"288","severity":1,"message":"296","line":184,"column":35,"nodeType":"290","messageId":"291","endLine":184,"endColumn":37},{"ruleId":"288","severity":1,"message":"296","line":244,"column":41,"nodeType":"290","messageId":"291","endLine":244,"endColumn":43},{"ruleId":"300","severity":1,"message":"308","line":258,"column":54,"nodeType":"302","messageId":"309","endLine":258,"endColumn":56},{"ruleId":"288","severity":1,"message":"296","line":262,"column":48,"nodeType":"290","messageId":"291","endLine":262,"endColumn":50},{"ruleId":"256","severity":1,"message":"310","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":14},{"ruleId":"256","severity":1,"message":"294","line":9,"column":8,"nodeType":"258","messageId":"259","endLine":9,"endColumn":22},{"ruleId":"256","severity":1,"message":"311","line":34,"column":8,"nodeType":"258","messageId":"259","endLine":34,"endColumn":25},{"ruleId":"256","severity":1,"message":"312","line":35,"column":10,"nodeType":"258","messageId":"259","endLine":35,"endColumn":15},{"ruleId":"256","severity":1,"message":"313","line":197,"column":11,"nodeType":"258","messageId":"259","endLine":197,"endColumn":14},{"ruleId":"288","severity":1,"message":"296","line":208,"column":35,"nodeType":"290","messageId":"291","endLine":208,"endColumn":37},{"ruleId":"288","severity":1,"message":"296","line":208,"column":66,"nodeType":"290","messageId":"291","endLine":208,"endColumn":68},{"ruleId":"288","severity":1,"message":"289","line":216,"column":15,"nodeType":"290","messageId":"291","endLine":216,"endColumn":17},{"ruleId":"288","severity":1,"message":"296","line":225,"column":28,"nodeType":"290","messageId":"291","endLine":225,"endColumn":30},{"ruleId":"288","severity":1,"message":"296","line":299,"column":35,"nodeType":"290","messageId":"291","endLine":299,"endColumn":37},{"ruleId":"256","severity":1,"message":"278","line":529,"column":13,"nodeType":"258","messageId":"259","endLine":529,"endColumn":18},{"ruleId":"256","severity":1,"message":"294","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":22},{"ruleId":"256","severity":1,"message":"297","line":6,"column":18,"nodeType":"258","messageId":"259","endLine":6,"endColumn":25},{"ruleId":"256","severity":1,"message":"314","line":31,"column":24,"nodeType":"258","messageId":"259","endLine":31,"endColumn":32},{"ruleId":"288","severity":1,"message":"296","line":53,"column":20,"nodeType":"290","messageId":"291","endLine":53,"endColumn":22},{"ruleId":"256","severity":1,"message":"315","line":63,"column":25,"nodeType":"258","messageId":"259","endLine":63,"endColumn":30},{"ruleId":"256","severity":1,"message":"316","line":2,"column":16,"nodeType":"258","messageId":"259","endLine":2,"endColumn":26},{"ruleId":"256","severity":1,"message":"317","line":5,"column":10,"nodeType":"258","messageId":"259","endLine":5,"endColumn":17},{"ruleId":"256","severity":1,"message":"294","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":22},{"ruleId":"288","severity":1,"message":"296","line":39,"column":18,"nodeType":"290","messageId":"291","endLine":39,"endColumn":20},{"ruleId":"256","severity":1,"message":"272","line":14,"column":8,"nodeType":"258","messageId":"259","endLine":14,"endColumn":12},{"ruleId":"256","severity":1,"message":"318","line":22,"column":8,"nodeType":"258","messageId":"259","endLine":22,"endColumn":16},{"ruleId":"288","severity":1,"message":"289","line":76,"column":19,"nodeType":"290","messageId":"291","endLine":76,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":119,"column":23,"nodeType":"290","messageId":"291","endLine":119,"endColumn":25},{"ruleId":"319","severity":1,"message":"320","line":149,"column":15,"nodeType":"258","messageId":"321","endLine":149,"endColumn":18},{"ruleId":"256","severity":1,"message":"299","line":149,"column":15,"nodeType":"258","messageId":"259","endLine":149,"endColumn":18},{"ruleId":"288","severity":1,"message":"296","line":162,"column":28,"nodeType":"290","messageId":"291","endLine":162,"endColumn":30},{"ruleId":"288","severity":1,"message":"296","line":231,"column":16,"nodeType":"290","messageId":"291","endLine":231,"endColumn":18},{"ruleId":"288","severity":1,"message":"296","line":309,"column":33,"nodeType":"290","messageId":"291","endLine":309,"endColumn":35},{"ruleId":"256","severity":1,"message":"322","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":16},{"ruleId":"283","severity":1,"message":"284","line":26,"column":11,"nodeType":"268","endLine":26,"endColumn":60},{"ruleId":"283","severity":1,"message":"284","line":41,"column":11,"nodeType":"268","endLine":41,"endColumn":55},{"ruleId":"283","severity":1,"message":"284","line":52,"column":11,"nodeType":"268","endLine":52,"endColumn":59},{"ruleId":"300","severity":1,"message":"301","line":145,"column":53,"nodeType":"302","messageId":"303","endLine":145,"endColumn":55},{"ruleId":"288","severity":1,"message":"296","line":212,"column":33,"nodeType":"290","messageId":"291","endLine":212,"endColumn":35},{"ruleId":"288","severity":1,"message":"296","line":255,"column":41,"nodeType":"290","messageId":"291","endLine":255,"endColumn":43},{"ruleId":"288","severity":1,"message":"296","line":265,"column":41,"nodeType":"290","messageId":"291","endLine":265,"endColumn":43},{"ruleId":"288","severity":1,"message":"296","line":275,"column":41,"nodeType":"290","messageId":"291","endLine":275,"endColumn":43},{"ruleId":"256","severity":1,"message":"323","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":26},{"ruleId":"256","severity":1,"message":"310","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":14},{"ruleId":"256","severity":1,"message":"317","line":12,"column":10,"nodeType":"258","messageId":"259","endLine":12,"endColumn":17},{"ruleId":"256","severity":1,"message":"324","line":15,"column":8,"nodeType":"258","messageId":"259","endLine":15,"endColumn":17},{"ruleId":"325","severity":1,"message":"326","line":95,"column":30,"nodeType":"327","messageId":"328","endLine":95,"endColumn":31,"suggestions":"329"},{"ruleId":"288","severity":1,"message":"296","line":98,"column":28,"nodeType":"290","messageId":"291","endLine":98,"endColumn":30},{"ruleId":"288","severity":1,"message":"296","line":99,"column":28,"nodeType":"290","messageId":"291","endLine":99,"endColumn":30},{"ruleId":"288","severity":1,"message":"296","line":101,"column":28,"nodeType":"290","messageId":"291","endLine":101,"endColumn":30},{"ruleId":"288","severity":1,"message":"296","line":110,"column":28,"nodeType":"290","messageId":"291","endLine":110,"endColumn":30},{"ruleId":"288","severity":1,"message":"296","line":111,"column":28,"nodeType":"290","messageId":"291","endLine":111,"endColumn":30},{"ruleId":"288","severity":1,"message":"296","line":121,"column":27,"nodeType":"290","messageId":"291","endLine":121,"endColumn":29},{"ruleId":"288","severity":1,"message":"296","line":122,"column":27,"nodeType":"290","messageId":"291","endLine":122,"endColumn":29},{"ruleId":"288","severity":1,"message":"289","line":132,"column":32,"nodeType":"290","messageId":"291","endLine":132,"endColumn":34},{"ruleId":"288","severity":1,"message":"296","line":344,"column":30,"nodeType":"290","messageId":"291","endLine":344,"endColumn":32},{"ruleId":"288","severity":1,"message":"296","line":448,"column":28,"nodeType":"290","messageId":"291","endLine":448,"endColumn":30},{"ruleId":"256","severity":1,"message":"330","line":480,"column":7,"nodeType":"258","messageId":"259","endLine":480,"endColumn":22},{"ruleId":"256","severity":1,"message":"298","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":12},{"ruleId":"256","severity":1,"message":"304","line":7,"column":8,"nodeType":"258","messageId":"259","endLine":7,"endColumn":22},{"ruleId":"256","severity":1,"message":"331","line":10,"column":10,"nodeType":"258","messageId":"259","endLine":10,"endColumn":29},{"ruleId":"300","severity":1,"message":"301","line":181,"column":53,"nodeType":"302","messageId":"303","endLine":181,"endColumn":55},{"ruleId":"300","severity":1,"message":"301","line":195,"column":53,"nodeType":"302","messageId":"303","endLine":195,"endColumn":55},{"ruleId":"288","severity":1,"message":"296","line":255,"column":33,"nodeType":"290","messageId":"291","endLine":255,"endColumn":35},{"ruleId":"260","replacedBy":"332"},{"ruleId":"262","replacedBy":"333"},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-unused-vars","'myLogger' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["334"],"no-negated-in-lhs",["335"],"'Switch' is defined but never used.","'Link' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Footer' is defined but never used.","'ThemeProvider' is defined but never used.","'SwipeableDrawer' is defined but never used.","'clsx' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'StockTable' is defined but never used.","'theme' is assigned a value but never used.","'user' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'RiThunderstormsFill' is defined but never used.","'FaUserInjured' is defined but never used.","'checkedError' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'isLoading' is assigned a value but never used.","'token' is assigned a value but never used.","'PropertyHeader' is defined but never used.","'cNewPassword' is assigned a value but never used.","Expected '===' and instead saw '=='.","'Popover' is defined but never used.","'fire' is defined but never used.","'arr' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'FormHelperText' is defined but never used.","'readXlsxFile' is defined but never used.","'fs' is defined but never used.","'data' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'AppBar' is defined but never used.","'ReactNotification' is defined but never used.","'store' is defined but never used.","'uid' is assigned a value but never used.","'newEmail' is assigned a value but never used.","'datas' is assigned a value but never used.","'withRouter' is defined but never used.","'connect' is defined but never used.","'MenuItem' is defined but never used.","no-redeclare","'arr' is already defined.","redeclared","'stockpic' is defined but never used.","'useEffect' is defined but never used.","'PlotChart' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["336","337"],"'mapStateToProps' is assigned a value but never used.","'GiConsoleController' is defined but never used.",["334"],["335"],"no-global-assign","no-unsafe-negation",{"messageId":"338","fix":"339","desc":"340"},{"messageId":"341","fix":"342","desc":"343"},"removeEscape",{"range":"344","text":"345"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"346","text":"347"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[2859,2860],"",[2859,2859],"\\"]