[{"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\index.js":"1","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\App.js":"2","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\reportWebVitals.js":"3","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\LandingPage.js":"4","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Home.js":"5","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\RealEstateMainPage.js":"6","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Signup.js":"7","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\ChangePassword.js":"8","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\InvestmentRec.js":"9","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Login.js":"10","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\StockTable.js":"11","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\StockMainPage.js":"12","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\ChangeEmail.js":"13","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\ForgotPassword.js":"14","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\DeleteAccount.js":"15","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\config\\fire.js":"16","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\LandingPageHeader.js":"17","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Footer.js":"18","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PropertyHeader.js":"19","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Header.js":"20","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Slider.js":"21","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\AreaSidebarData.js":"22","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PredictedStock.js":"23","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\HomePlotMenu.js":"24","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PredictedPlots.js":"25","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PlotChart.js":"26","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\SidebarData.js":"27","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\TermsandConditions.js":"28","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Favourites.js":"29"},{"size":1863,"mtime":1622383175058,"results":"30","hashOfConfig":"31"},{"size":3235,"mtime":1623692864744,"results":"32","hashOfConfig":"31"},{"size":377,"mtime":1622383254978,"results":"33","hashOfConfig":"31"},{"size":8631,"mtime":1623760357302,"results":"34","hashOfConfig":"31"},{"size":16748,"mtime":1622383134212,"results":"35","hashOfConfig":"31"},{"size":905,"mtime":1622383250030,"results":"36","hashOfConfig":"31"},{"size":10456,"mtime":1622296628945,"results":"37","hashOfConfig":"31"},{"size":8385,"mtime":1622381834540,"results":"38","hashOfConfig":"31"},{"size":7488,"mtime":1622633116539,"results":"39","hashOfConfig":"31"},{"size":3375,"mtime":1622383343889,"results":"40","hashOfConfig":"31"},{"size":9611,"mtime":1623759385394,"results":"41","hashOfConfig":"31"},{"size":22218,"mtime":1622731237039,"results":"42","hashOfConfig":"31"},{"size":7676,"mtime":1622381810370,"results":"43","hashOfConfig":"31"},{"size":2306,"mtime":1622381859156,"results":"44","hashOfConfig":"31"},{"size":4963,"mtime":1622381844096,"results":"45","hashOfConfig":"31"},{"size":520,"mtime":1622382467257,"results":"46","hashOfConfig":"31"},{"size":543,"mtime":1622382155591,"results":"47","hashOfConfig":"31"},{"size":1121,"mtime":1622639979939,"results":"48","hashOfConfig":"31"},{"size":533,"mtime":1622382252402,"results":"49","hashOfConfig":"31"},{"size":11847,"mtime":1623760105170,"results":"50","hashOfConfig":"31"},{"size":2524,"mtime":1622382293716,"results":"51","hashOfConfig":"31"},{"size":5559,"mtime":1622382274233,"results":"52","hashOfConfig":"31"},{"size":8294,"mtime":1623759651816,"results":"53","hashOfConfig":"31"},{"size":17128,"mtime":1623758764312,"results":"54","hashOfConfig":"31"},{"size":7472,"mtime":1623759146944,"results":"55","hashOfConfig":"31"},{"size":1713,"mtime":1622382166375,"results":"56","hashOfConfig":"31"},{"size":673,"mtime":1623692726190,"results":"57","hashOfConfig":"31"},{"size":11645,"mtime":1622382659515,"results":"58","hashOfConfig":"31"},{"size":7196,"mtime":1623757027201,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"tabzg6",{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"63"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"63"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"63"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\index.js",["130","131","132"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst initialUserState = {\r\n  user: null,\r\n  isAuth: false,\r\n};\r\nconst userReducer = (state = initialUserState, action) => {\r\n  switch (action.type) {\r\n    case \"nullUser\":\r\n      state = {\r\n        ...state,\r\n        user: null,\r\n        isAuth: false,\r\n      };\r\n    case \"setUser\":\r\n      state = {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuth: true,\r\n      };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\nconst initialCompState = {\r\n  inputText: \"\",\r\n};\r\nconst stockReducer = (state = initialCompState, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_INPUT\":\r\n      state = {\r\n        inputText: action.payload,\r\n      };\r\n      break;\r\n    default:\r\n      state = initialCompState;\r\n  }\r\n  return state;\r\n};\r\n\r\n//personal logger\r\nconst myLogger = (store) => (next) => (action) => {\r\n  console.log(\"logged action: \", action);\r\n  next(action);\r\n};\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    user: userReducer,\r\n    stock: stockReducer,\r\n  }),\r\n  {},\r\n  compose(applyMiddleware(createLogger()))\r\n);\r\n\r\nstore.subscribe(() => {\r\n  console.log(\"store updated!\", store.getState());\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["133","134"],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\App.js",["135"],"import React from \"react\";\r\nimport Home from \"./Home\";\r\nimport Signup from \"./Signup\";\r\nimport Login from \"./Login\";\r\nimport \"./StyleSheets/Home.css\";\r\nimport RealEstateMain from \"./RealEstateMainPage\";\r\nimport ChangeEmail from \"./Components/ChangeEmail\";\r\nimport ChangePassword from \"./Components/ChangePassword\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport LandingPage from \"./LandingPage\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport fire from \"./config/fire\";\r\nimport ForgotPassword from \"./Components/ForgotPassword\";\r\nimport StockMainPage from \"./Components/StockMainPage\";\r\nimport StockTable from \"./Components/StockTable\";\r\nimport DeleteAccount from \"./Components/DeleteAccount\";\r\nimport InvestmentRec from \"./Components/InvestmentRec\";\r\nimport TermsandConditions from \"./Components/TermsandConditions\";\r\nimport Favourites from \"./Components/Favourites\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: this.props.user.user,\r\n      isAuth: this.props.user.isAuth,\r\n    };\r\n\r\n    this.authListener = this.authListener.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.authListener();\r\n  }\r\n\r\n  authListener() {\r\n    fire.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.setState({ user });\r\n        this.props.confirmUserAuth(user);\r\n      } else {\r\n        this.setState({ user: null, isAuth: false });\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Route path=\"/\" exact component={LandingPage} />\r\n          <Route\r\n            path=\"/Home\"\r\n            exact\r\n            issAuth={this.props.setisAuth}\r\n            component={Home}\r\n          />\r\n          <Route path=\"/registration\" exact component={Signup} />\r\n          <Route path=\"/login\" exact component={Login} />\r\n          <Route\r\n            path=\"/RealEstatePrediction\"\r\n            component={RealEstateMain}\r\n            exact\r\n          />\r\n          <Route path=\"/StockPrediction\" component={StockMainPage} exact />\r\n          <Route path=\"/ChangeEmail\" component={ChangeEmail} exact />\r\n          <Route path=\"/StockTable\" component={StockTable} exact />\r\n          <Route path=\"/ChangePassword\" component={ChangePassword} exact />\r\n          <Route path=\"/DeleteAccount\" component={DeleteAccount} exact />\r\n          <Route path=\"/ForgotPassword\" component={ForgotPassword} exact />\r\n          <Route path=\"/Favourites\" component={Favourites} exact />\r\n          <Route\r\n            path=\"/InvestmentReccomendation\"\r\n            component={InvestmentRec}\r\n            exact\r\n          />\r\n\r\n          <Route\r\n            path=\"/TermsandConditions\"\r\n            component={TermsandConditions}\r\n            exact\r\n          />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    //initialUserState\r\n    user: state.user,\r\n    // math: state.mathReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    confirmUserAuth: (user) => {\r\n      dispatch({\r\n        type: \"setUser\",\r\n        payload: user,\r\n      });\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\reportWebVitals.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\LandingPage.js",["136","137"],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Home.js",["138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./Components/Header\";\r\nimport Footer from \"./Components/Footer\";\r\nimport \"./StyleSheets/Header.css\";\r\nimport CarouselPage from \"./Components/Slider\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport stockpic from \"./StyleSheets/images/business-finance-terms-and-definitions-1-2.jpg\";\r\nimport investpic from \"./StyleSheets/images/image.img.450.225.20191016091944.jpg\";\r\nimport propertypic from \"./StyleSheets/images/Property-Investment-Tips.jpg\";\r\nimport introStockPic from \"./StyleSheets/images/home-stock-prediction-intro.jpg\";\r\nimport introPropertyPic from \"./StyleSheets/images/home-property-prediction-intro.jpg\";\r\nimport introIRPic from \"./StyleSheets/images/home-IR-intro.jpg\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport WOW from \"wowjs\";\r\nimport Login from \"./Login\";\r\nimport \"./StyleSheets/Footer.css\";\r\nimport { connect } from \"react-redux\";\r\nimport fire from \"./config/fire\";\r\nimport \"./StyleSheets/Header.css\";\r\n\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport clsx from \"clsx\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport StockTable from \"./Components/StockTable\";\r\n\r\nconst theme = createMuiTheme({});\r\n\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n\r\n    minHeight: \"300px\",\r\n    borderRadius: \"10px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: \"70px\",\r\n      width: \"100%\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  homeContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n    flexWrap: \"wrap\",\r\n    width: \"100%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    alignContent: \"center\",\r\n    paddingTop: 40,\r\n  },\r\n  picii: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"#7BC7F9\",\r\n      transition: \"1000ms\",\r\n      opacity: 0.8,\r\n    },\r\n  },\r\n  btn: {\r\n    paddingRight: \"20px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#7BC7F9\",\r\n      transition: \"1000ms\",\r\n    },\r\n  },\r\n});\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      homescreen: true,\r\n      sidebar: false,\r\n      right: false,\r\n    };\r\n    this.checkSide = this.checkSide.bind(this);\r\n  }\r\n\r\n  toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ ...this.state, [anchor]: open });\r\n  };\r\n\r\n  componentDidMount() {\r\n    new WOW.WOW().init();\r\n  }\r\n\r\n  checkSideBar = (item) => {\r\n    this.setState({\r\n      homescreen: item,\r\n    });\r\n  };\r\n  checkSide = (childValue) => {\r\n    this.setState({\r\n      sidebar: childValue,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const isAuthenticated = this.props.user.isAuth;\r\n\r\n    const user = fire.auth().currentUser;\r\n\r\n    if (!isAuthenticated) {\r\n      return <Login />;\r\n    } else {\r\n      return (\r\n        // ()=>{\r\n        //     this.setState({\r\n        //     homescreen:!this.state.homescreen,\r\n        //     sidebar : !this.state.sidebar\r\n        // })}\r\n        <div>\r\n          {/*############################################## Header ############################################## */}\r\n          <Header\r\n            data={this.checkSideBar.bind(this)}\r\n            dataSide={this.checkSide.bind(this)}\r\n          />\r\n\r\n          {/*############################################## Slider ############################################## */}\r\n          <div>\r\n            <CarouselPage />\r\n          </div>\r\n          <div className=\"home-main\">\r\n            {/* <div className='home-main-heading wow pulse' data-wow-duration=\"2\" data-wow-iteration=\"3\" data-wow-offset=\"30\" data-wow-duration=\"1.7s\">\r\n                                <h2><span>Welcome to INVESCO!</span></h2>\r\n                            </div> */}\r\n            <div\r\n              className=\"home-main-heading\"\r\n              data-wow-duration=\"2\"\r\n              data-wow-iteration=\"3\"\r\n              data-wow-offset=\"30\"\r\n              data-wow-duration=\"1.7s\"\r\n            >\r\n              <h2>\r\n                <span>Welcome to INVESCO!</span>\r\n              </h2>\r\n            </div>\r\n            {/*############################################## CARDS ############################################## */}\r\n\r\n            <div>\r\n              <div className={classes.homeContent}>\r\n                <Card id=\"stockCard\" className={classes.root}>\r\n                  <CardActionArea\r\n                    onClick={() => this.props.history.push(\"/StockTable\")}\r\n                    className={classes.picii}\r\n                  >\r\n                    <CardMedia\r\n                      style={{ height: 200 }}\r\n                      component=\"img\"\r\n                      alt=\"Stock Predictor\"\r\n                      height=\"140\"\r\n                      image={stockpic}\r\n                      title=\"Stock Predictor\"\r\n                    />\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        Stock Price Predictor\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        Here you will be able to view stock companies of the\r\n                        KSE100 index.\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions>\r\n                    <Button\r\n                      className={classes.btn}\r\n                      onClick={() => this.props.history.push(\"/StockTable\")}\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Go\r\n                    </Button>\r\n                    <Button\r\n                      className={classes.btn}\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Learn More\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n\r\n                <Card id=\"propertyCard\" className={classes.root}>\r\n                  <CardActionArea\r\n                    onClick={() =>\r\n                      this.props.history.push(\"/RealEstatePrediction\")\r\n                    }\r\n                    className={classes.picii}\r\n                  >\r\n                    <CardMedia\r\n                      style={{ height: 200, width: 350 }}\r\n                      component=\"img\"\r\n                      alt=\"RealEstate Predictor\"\r\n                      height=\"140\"\r\n                      image={propertypic}\r\n                      title=\"RealEstate Predictor\"\r\n                    />\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        Real-Estate Price Predictor\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        Here you will be able to view areas in Islamabad and\r\n                        decide which areas to invest into.\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions>\r\n                    <Button\r\n                      className={classes.btn}\r\n                      onClick={() =>\r\n                        this.props.history.push(\"/RealEstatePrediction\")\r\n                      }\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Go\r\n                    </Button>\r\n                    <Button\r\n                      className={classes.btn}\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Learn More\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n                <Card id=\"IRCard\" className={classes.root}>\r\n                  <CardActionArea\r\n                    onClick={() =>\r\n                      this.props.history.push(\"/InvestmentReccomendation\")\r\n                    }\r\n                    className={classes.picii}\r\n                  >\r\n                    <CardMedia\r\n                      style={{ height: 200 }}\r\n                      component=\"img\"\r\n                      alt=\"Investment Recommendation\"\r\n                      height=\"140\"\r\n                      image={investpic}\r\n                      title=\"Investment Recommendation\"\r\n                    />\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        Investment Recommendation\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        Our personal investment recommender. This will tell you\r\n                        where you need to invest right now!\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions>\r\n                    <Button\r\n                      className={classes.btn}\r\n                      onClick={() =>\r\n                        this.props.history.push(\"/InvestmentReccomendation\")\r\n                      }\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Go\r\n                    </Button>\r\n                    <Button\r\n                      className={classes.btn}\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Learn More\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/*############################################## HOME INTRO ############################################## */}\r\n          <div className=\"home-intro\">\r\n            <div className=\"home-intro-stock\">\r\n              <div\r\n                className=\"wow slideInLeft\"\r\n                data-wow-duration=\"1\"\r\n                data-wow-offset=\"100\"\r\n                data-wow-duration=\"1.7s\"\r\n              >\r\n                <img src={introStockPic}></img>\r\n              </div>\r\n              <div className=\"home-intro-stock-content\">\r\n                <div className=\"home-intro-stock-content-heading\">\r\n                  <h2>\r\n                    <span>\r\n                      <a href=\"#stockCard\">Stock Predictor</a>\r\n                    </span>\r\n                  </h2>\r\n                </div>\r\n                <div\r\n                  id=\"stockinfo\"\r\n                  className=\"home-intro-stock-content-para wow fadeIn\"\r\n                  data-wow-duration=\"1\"\r\n                  data-wow-offset=\"100\"\r\n                  data-wow-duration=\"5s\"\r\n                >\r\n                  <p>\r\n                    Our Stock Predictor permits to show a few specialized\r\n                    markers for a solitary index on a similar graph. Our\r\n                    predictor utilizes multiple algorithms and techniques to\r\n                    predict the future stock prices. Our newest options are the\r\n                    alert and subscribe options, where you can add alerts to a\r\n                    company when its stock reaches a specific point. Also\r\n                    subscribe to companies in which you are interested in to get\r\n                    notifications.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"home-intro-property\">\r\n              <div\r\n                className=\"wow slideInRight\"\r\n                data-wow-duration=\"1\"\r\n                data-wow-offset=\"140\"\r\n                data-wow-duration=\"1.7s\"\r\n              >\r\n                <img src={introPropertyPic}></img>\r\n              </div>\r\n              <div className=\"home-intro-property-content\">\r\n                <div className=\"home-intro-property-content-heading\">\r\n                  <h2 id=\"propertyinfo\">\r\n                    <span>\r\n                      <a href=\"#propertyCard\">Property Predictor</a>\r\n                    </span>\r\n                  </h2>\r\n                </div>\r\n                <div\r\n                  className=\"home-intro-property-content-para wow fadeIn\"\r\n                  data-wow-duration=\"1\"\r\n                  data-wow-offset=\"140\"\r\n                  data-wow-duration=\"5s\"\r\n                >\r\n                  <p>\r\n                    Find out where to invest in islamabad if you are interested\r\n                    in real-estate investment. Our real-estate price predictor\r\n                    covers areas in Islamabad and will tell you the average\r\n                    price per Marla or Kanal. Our newest functionality is the\r\n                    House Price Calculator where you will be able to find out\r\n                    your house price based on the provided inputs.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"home-intro-stock\">\r\n              <div\r\n                className=\"wow slideInLeft\"\r\n                data-wow-duration=\"1\"\r\n                data-wow-offset=\"180\"\r\n                data-wow-duration=\"1.7s\"\r\n              >\r\n                <img src={introIRPic}></img>\r\n              </div>\r\n              <div className=\"home-intro-stock-content\">\r\n                <div className=\"home-intro-stock-content-heading\">\r\n                  <h2>\r\n                    <span>\r\n                      <a href=\"#IRCard\">Investment Recommendation</a>\r\n                    </span>\r\n                  </h2>\r\n                </div>\r\n                <div\r\n                  className=\"home-intro-stock-content-para wow fadeIn\"\r\n                  data-wow-duration=\"1\"\r\n                  data-wow-offset=\"180\"\r\n                  data-wow-duration=\"5s\"\r\n                >\r\n                  <p>\r\n                    This system was made keeping in mind the fact that not\r\n                    everyone has the technical skills to predict future prices.\r\n                    Whether they be stock or real-estate. Our system provides\r\n                    users an investment recommendation based on their interests.\r\n                    Just some basic knowledge and you are good to go!\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div style={{ backgroundColor: \"white\", color: \"white\" }}>.</div>\r\n          </div>\r\n          <div>\r\n            <div className=\"footer-body\">\r\n              <div className=\"footer-title\">\r\n                <h1>INVESCO</h1>\r\n              </div>\r\n              <div className=\"footer-content\">\r\n                <div className=\"contact-us\">\r\n                  <h2>Contact Us</h2>\r\n                  <p>Phone : +92324-6096102</p>\r\n                  <p>Email : invescoDev@invesco.com</p>\r\n                </div>\r\n                <div className=\"footer-web-info\">\r\n                  <p>\r\n                    INVESCO is a system helping beginners to invest in stock and\r\n                    real estate.\r\n                  </p>\r\n                </div>\r\n                <div className=\"footer-links\">\r\n                  <Link>Terms and Conditions</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    //initialUserState\r\n    user: state.user,\r\n    // math: state.mathReducer\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(withStyles(useStyles)(Home));\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\RealEstateMainPage.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Signup.js",["159","160","161","162","163","164"],"import React, { Component } from 'react'\r\nimport { RiThunderstormsFill } from 'react-icons/ri';\r\nimport { Link ,withRouter} from 'react-router-dom';\r\nimport './StyleSheets/Signup.css';\r\nimport fire from './config/fire'\r\nimport { FaUserInjured } from 'react-icons/fa';\r\nexport class Signup extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            success:false,\r\n            token: '',\r\n            signUpFirstName: '',\r\n            signUpLastName: '',\r\n            signUpEmail: '',\r\n            signUpMobile: '',\r\n            signUpPassword: '',\r\n            signUpConfirmPassword:'',\r\n            fnameError: '',\r\n            lnameError: '',\r\n            emailError: '',\r\n            passwordError: '',\r\n            checked:false       \r\n        }\r\n    }\r\n   \r\n   \r\n    resetInputs = ()=>{\r\n        this.setState({\r\n            isLoading: false,\r\n            token: '',\r\n            signUpError: '',\r\n            signUpFirstName: '',\r\n            signUpLastName: '',\r\n            signUpEmail: '',\r\n            signUpMobile: '',\r\n            signUpPassword: '',\r\n            signUpConfirmPassword: '',\r\n        })\r\n    }\r\n    //adding onChange event for text fields\r\n    onChange = (event) =>{\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n    onChangeCheckbox = () => {\r\n        this.setState({checked: !this.state.checked});\r\n    }\r\n    //pushing route on signup button\r\n    signupButtonPush = () =>{\r\n        if(this.state.success){\r\n            console.log(\"hhhh\",this.props.history)\r\n            this.props.history.push(\"/login\")\r\n        }\r\n        else{\r\n            console.log(\"isme\")\r\n            this.props.history.push(\"/registration\")\r\n        }\r\n    }\r\n    //signup button event call\r\n    onSignup = ()=> {\r\n        const {\r\n            signUpFirstName,\r\n            signUpLastName,\r\n            signUpEmail,\r\n            signUpPassword,\r\n      } = this.state\r\n        if(this.validate()){\r\n            fire.auth().createUserWithEmailAndPassword(signUpEmail, signUpPassword)\r\n          .then((u) => {\r\n            console.log('Successfully Signed Up');\r\n            const user = fire.auth().currentUser\r\n            const userID = fire.auth().currentUser.uid\r\n            user.sendEmailVerification().then(()=>{\r\n                if(user.emailVerified){\r\n                    //login the user\r\n                    fire.auth().signInWithEmailAndPassword(signUpEmail, signUpPassword)\r\n                    console.log('login successfull')\r\n                    //pushing to home\r\n                    this.props.history.push('/')\r\n                    //adding first name and last name\r\n                    // const user = fire.auth().currentUser\r\n                    user.updateProfile({\r\n                        displayName: signUpFirstName+ \",\"+ signUpLastName\r\n                    })\r\n                    const dbh = fire.firestore();\r\n                    dbh.collection(\"users\").doc(user.uid).set({\r\n                    firstName:signUpFirstName,\r\n                    lastName:signUpLastName,\r\n                    email:signUpEmail,\r\n                    // isVerified:user.emailVerified\r\n                    });\r\n                    console.log('displayName: ', signUpFirstName, \" , \", signUpLastName)\r\n                }\r\n                else{\r\n                    alert('An email verification link has been sent to you. Check your email.')\r\n                    let query = fire.database().ref('Users/'+userID)\r\n                    const userData = {\r\n                        firstName: signUpFirstName,\r\n                        lirstName: signUpLastName,\r\n                        email: signUpEmail,\r\n                    }\r\n                    query.push(userData)\r\n                    // fire.database().ref('messages').push(this.state.signUpLastName)\r\n\r\n                    this.resetInputs()\r\n\r\n                    this.props.history.push('/login')\r\n                }\r\n            })\r\n            \r\n          })\r\n          .catch((err) => {\r\n            console.log(err.toString());\r\n            alert(err.toString())\r\n          })\r\n        }\r\n        \r\n      }\r\n\r\n    validate = (event)=>{\r\n        let fnameError = '';\r\n        let lnameError = '';\r\n        let emailError = '';\r\n        let passwordError = '';\r\n        let checkedError = '';\r\n        const emailRegex = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        const nameRegex = new RegExp(/^[a-z ,.'-]+$/i)\r\n        const passRegex = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/i)\r\n        \r\n        if(!nameRegex.test(this.state.signUpFirstName)){\r\n            fnameError = 'Enter Valid First Name'\r\n        }\r\n\r\n        if(!nameRegex.test(this.state.signUpLastName)){\r\n            lnameError = 'Enter Valid Last Name'\r\n        }\r\n\r\n        if(!emailRegex.test(this.state.signUpEmail)){\r\n            emailError = 'Enter Valid Email'\r\n        }\r\n\r\n        // if(!this.state.signUpEmail.includes('@')){\r\n        //     emailError = 'Invalid Email'\r\n        // }\r\n        if(!passRegex.test(this.state.signUpPassword)){\r\n            passwordError = 'Password must have minimum 8 characters, atleast one letter and one number'\r\n        }\r\n        if(this.state.signUpPassword!=this.state.signUpConfirmPassword){\r\n            passwordError = \"Passwords don't Match\"\r\n        }\r\n        if(emailError || fnameError || lnameError || passwordError){\r\n            this.setState({\r\n                emailError,\r\n                fnameError,\r\n                lnameError,\r\n                passwordError,\r\n                // signUpEmail:''\r\n            })\r\n            //this.focusInput.focus()\r\n            return false;\r\n        }\r\n        return true\r\n    }\r\n    render(props) {\r\n        const buttonStyle = {\r\n            pointerEvents: this.state.checked ? 'all': 'none',\r\n        }\r\n        console.log(this.state)\r\n        const {isLoading,\r\n            token,\r\n            signUpFirstName,\r\n            signUpLastName,\r\n            signUpEmail,\r\n            signUpPassword,\r\n            signUpConfirmPassword,\r\n            checked,\r\n        }   = this.state;\r\n\r\n        // if(isLoading){\r\n        //     return(<div><p>Loading...</p></div>)\r\n        // }\r\n        // if(!token){\r\n        //     return(<div><p>token not set</p></div>)\r\n        // }\r\n        // const user = fire.auth().currentUser\r\n        // if(user.emailVerified){\r\n            return (\r\n                <div class='signup-main'>\r\n                    <form class=\"signupForm\">\r\n                        \r\n                        <h1>Welcome</h1>\r\n                        <div className='signupData'>\r\n                            <label for=\"fname\">First Name</label>\r\n                            <input type=\"text\" id=\"fname\" name=\"signUpFirstName\" value={signUpFirstName} onChange={this.onChange.bind(this)} required></input>\r\n                            <div className=\"error-display\">\r\n                                <span>{this.state.fnameError}</span>\r\n                            </div>\r\n                            \r\n                            <label for=\"lname\">Last Name</label>\r\n                            <input type=\"text\" id=\"lname\" name=\"signUpLastName\" value={signUpLastName} onChange={this.onChange} ></input>\r\n                            <div className=\"error-display\">\r\n                                <span className=\"error-display\">{this.state.lnameError}</span>\r\n                            </div>\r\n\r\n                            <label for=\"email\">Email</label>\r\n                            <input ref={focusInput =>{this.signUpEmail = focusInput}} type=\"email\" id=\"email\" name=\"signUpEmail\" value={signUpEmail} onChange={this.onChange} required></input>\r\n                            <div className=\"error-display\">\r\n                                <span className=\"error-display\">{this.state.emailError}</span>\r\n                            </div>\r\n\r\n                            <label for=\"password\">Password</label>\r\n                            <input type=\"password\" id=\"password\" name=\"signUpPassword\" value={signUpPassword} onChange={this.onChange} required></input>\r\n                            <div className=\"error-display\">\r\n                                <span className=\"error-display\">{this.state.passwordError}</span>\r\n                            </div>\r\n\r\n                            <label for=\"cpassword\">Confirm Password</label>\r\n                            <input type=\"password\" id=\"cpassword\" name=\"signUpConfirmPassword\" value={signUpConfirmPassword} onChange={this.onChange} ></input> \r\n                        </div>    \r\n                        <div class=\"checkbox\">\r\n                            <input type='checkbox' id='termsCond' defaultChecked={this.state.checked} value={checked} onChange={this.onChangeCheckbox} required></input>\r\n                            <label class=\"terms\" for='termsCond'>Do you agree to our <Link id=\"termsLink\" to='/TermsandConditions'>Terms and Conditions?</Link></label>                    \r\n                        </div>\r\n                        {/* <div class=\"button\" id=\"button-signup\" style={buttonStyle} onClick={this.onSignup}>\r\n                            <div id=\"circle\"></div>\r\n                            <a href=\"#\">SIGNUP</a>\r\n                        </div> */}\r\n                        <div>\r\n                            <div class=\"button\" id=\"button-login\" style={buttonStyle} onClick = {this.onSignup}>\r\n                                <div id=\"circle\"></div>\r\n                                <p>SIGNUP</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"logLink\">\r\n                            <Link id=\"loginLink\" to=\"/login\">Already have an account?</Link>\r\n                        </div>\r\n                        {/* check */}\r\n                    </form>\r\n                </div>\r\n                )\r\n        // }\r\n        // else{\r\n        //     <div>\r\n        //         verify email\r\n        //     </div>\r\n        // }\r\n        \r\n    }\r\n}\r\n\r\nexport default withRouter(Signup)\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\ChangePassword.js",["165","166","167","168"],"import React, { Component } from \"react\";\r\nimport \"../StyleSheets/ChangeEmail.css\";\r\nimport PropertyHeader from \"./PropertyHeader\";\r\nimport fire from \"../config/fire\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport Login from \"../Login\";\r\nconst useStyles = (theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n});\r\nclass ChangePassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      prevPassword: \"\",\r\n      newPassword: \"\",\r\n      cNewPassword: \"\",\r\n      msg: \"\",\r\n      errMsg: \"\",\r\n      modalStyle: this.getModalStyle(),\r\n      open: false,\r\n    };\r\n  }\r\n  onChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  changePasswordVerify = () => {};\r\n  rand = () => {\r\n    return Math.round(Math.random() * 20) - 10;\r\n  };\r\n  getModalStyle = () => {\r\n    const top = 50 + this.rand();\r\n    const left = 50 + this.rand();\r\n\r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  };\r\n  changePassword = () => {\r\n    const { email, prevPassword, newPassword, cNewPassword } = this.state;\r\n    const user = fire.auth().currentUser;\r\n    if (this.validate()) {\r\n      fire\r\n        .auth()\r\n        .signInWithEmailAndPassword(email, prevPassword)\r\n        .then(() => {\r\n          const cUser = fire.auth().currentUser;\r\n          if (user == cUser) {\r\n            cUser\r\n              .updatePassword(newPassword)\r\n              .then(() => {\r\n                this.setState(\r\n                  {\r\n                    msg: \"Password Updated Successfully!\",\r\n                    errMsg: \"\",\r\n                  },\r\n                  () => {\r\n                    this.resetInputs();\r\n                    setTimeout(() => {}, 3000);\r\n                  }\r\n                );\r\n              })\r\n              .catch((e) => {\r\n                this.setState({\r\n                  errMsg: e.message,\r\n                  msg: \"\",\r\n                });\r\n              });\r\n          } else {\r\n            this.setState({\r\n              errMsg: \"Invalid Email or Password\",\r\n              msg: \"\",\r\n            });\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          this.setState({\r\n            msg: \"\",\r\n            errMsg: \"Invalid Email or Password\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  validate = (event) => {\r\n    const emailRegex = new RegExp(\r\n      /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n    );\r\n    const passRegex = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/i);\r\n    if (!emailRegex.test(this.state.email)) {\r\n      this.setState({\r\n        errMsg: \"Enter Valid Email\",\r\n      });\r\n      return false;\r\n    }\r\n    if (!passRegex.test(this.state.newPassword)) {\r\n      this.setState({\r\n        msg: \"\",\r\n        errMsg:\r\n          \"Password must have minimum 8 characters, atleast one letter and one number\",\r\n      });\r\n      return false;\r\n    }\r\n    if (this.state.newPassword != this.state.cNewPassword) {\r\n      this.setState({\r\n        msg: \"\",\r\n        errMsg: \"Passwords don't Match\",\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  resetInputs = () => {\r\n    this.setState({\r\n      newPassword: \"\",\r\n      cNewPassword: \"\",\r\n      email: \"\",\r\n      prevPassword: \"\",\r\n    });\r\n  };\r\n  handleOpen = () => {\r\n    this.setState({\r\n      open: true,\r\n    });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  };\r\n  body = (\r\n    <div style={{ top: 50, left: 50 }} className={this.props.classes.paper}>\r\n      <h2 id=\"simple-modal-title\">Password Updated Successfully</h2>\r\n      <p style={{ color: \"black\" }} id=\"simple-modal-description\">\r\n        Your password was updated.\r\n      </p>\r\n    </div>\r\n  );\r\n  render() {\r\n    const isAuthenticated = this.props.user.isAuth;\r\n    if (!isAuthenticated) {\r\n      return <Login />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Header />\r\n          <div>\r\n            <div className=\"change-field-heading\">\r\n              <h1>Change Password</h1>\r\n            </div>\r\n            <div className=\"change-field-inputs\">\r\n              <div className=\"change-field-inputs-content\">\r\n                <label for=\"email\">Enter Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={this.state.email}\r\n                  id=\"email\"\r\n                  onChange={this.onChange}\r\n                  required\r\n                ></input>\r\n              </div>\r\n              <div className=\"change-field-inputs-content\">\r\n                <label for=\"prevPassword\">Enter Previous Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"prevPassword\"\r\n                  value={this.state.prevPassword}\r\n                  id=\"prevPassword\"\r\n                  onChange={this.onChange}\r\n                  required\r\n                ></input>\r\n              </div>\r\n              {/* <div class=\"change-field-button\" onClick = {this.changePasswordVerify}>\r\n                                    <p>Verify</p>\r\n                                </div> */}\r\n              <div>\r\n                <div className=\"change-field-inputs-content\">\r\n                  <label for=\"newPassword\">Enter New Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"newPassword\"\r\n                    value={this.state.newPassword}\r\n                    id=\"newPassword\"\r\n                    onChange={this.onChange}\r\n                    required\r\n                  ></input>\r\n                </div>\r\n                <div className=\"change-field-inputs-content\">\r\n                  <label for=\"cNewPassword\">Confirm Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"cNewPassword\"\r\n                    value={this.state.cNewPassword}\r\n                    id=\"cNewPassword\"\r\n                    onChange={this.onChange}\r\n                    required\r\n                  ></input>\r\n                </div>\r\n                <div className=\"change-field-inputs-content\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.changePassword}\r\n                  >\r\n                    Done\r\n                  </Button>\r\n                </div>\r\n                {/* <div class=\"change-field-button\" onClick = {this.changePassword}>\r\n                                        <p>Done</p>\r\n                                </div> */}\r\n              </div>\r\n              <div className=\"msg-display\">\r\n                <span\r\n                  style={{\r\n                    color: \"green\",\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"18px\",\r\n                  }}\r\n                >\r\n                  {this.state.msg}\r\n                </span>\r\n                <span\r\n                  style={{ color: \"red\", fontWeight: \"bold\", fontSize: \"18px\" }}\r\n                >\r\n                  {this.state.errMsg}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <Modal\r\n              open={this.state.open}\r\n              onClose={this.handleClose}\r\n              aria-labelledby=\"simple-modal-title\"\r\n              aria-describedby=\"simple-modal-description\"\r\n            >\r\n              {this.body}\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    stock: state.stock,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(withStyles(useStyles)(ChangePassword));\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\InvestmentRec.js",["169","170","171","172","173","174"],"import React, { Component } from \"react\";\r\nimport \"../StyleSheets/InvestmentRec.css\";\r\nimport { Button, Popover } from \"@material-ui/core\";\r\nimport fire from \"../config/fire\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport Login from \"../Login\";\r\nclass InevstmentRec extends Component {\r\n  state = {\r\n    checkboxVal: [],\r\n    price: \"\",\r\n    timeframe: \"3 Month\",\r\n    btnDisable: true,\r\n    error: \"\",\r\n    stockRec: [],\r\n    propertyRec: [],\r\n    isLoading: true,\r\n  };\r\n  componentDidMount() {}\r\n\r\n  onPropertyCheckbox = (e) => {\r\n    var arr = [];\r\n    for (let i = 0; i < 2; i++) {\r\n      if (e.target.checked) {\r\n        this.setState({\r\n          checkboxVal: [...this.state.checkboxVal, e.target.value],\r\n        });\r\n      } else {\r\n        const newArr = this.state.checkboxVal.filter(\r\n          (item) => item !== e.target.value\r\n        );\r\n        this.setState({\r\n          checkboxVal: newArr,\r\n        });\r\n      }\r\n    }\r\n\r\n    // console.log(arr)\r\n    // this.setState({...this.state.checkboxVal, checkboxVal: 'property'});\r\n  };\r\n  onHandlePrice = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleSelect = (e) => {\r\n    this.setState({\r\n      timeframe: e.target.value,\r\n    });\r\n  };\r\n  getRec = () => {\r\n    if (this.validate()) {\r\n      var stockArr = [];\r\n      var propertyArr = [];\r\n      fetch(\r\n        `http://investmentrecommendation.herokuapp.com/stock/?time=${this.state.timeframe}&&amount=${this.state.price}`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          Object.keys(responseData).map((data) => {\r\n            console.log(responseData[data]);\r\n            stockArr.push(responseData[data]);\r\n          });\r\n          this.setState({\r\n            stockRec: stockArr,\r\n          });\r\n          console.log(this.state.stockRec);\r\n        });\r\n\r\n      fetch(\r\n        `http://investmentrecommendation.herokuapp.com/plot/?time=${this.state.timeframe}&&amount=${this.state.price}`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          console.log(this.state.propertyRec);\r\n          Object.keys(responseData).map((data) => {\r\n            console.log(responseData[data]);\r\n            propertyArr.push(responseData[data]);\r\n          });\r\n          this.setState({\r\n            propertyRec: propertyArr,\r\n          });\r\n          console.log(this.state.propertyArr);\r\n        });\r\n      //setTimeout(4000);\r\n      this.setState({\r\n        error: \"\",\r\n        isLoading: false,\r\n      });\r\n    } else {\r\n      console.log(\"2st\");\r\n      this.setState({\r\n        error: \"Please fulfill all fields\",\r\n      });\r\n    }\r\n  };\r\n  validate = () => {\r\n    if (this.state.price == \"\") {\r\n      this.setState({\r\n        btnDisable: false,\r\n        error: \"Please fulfill all fields\",\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  render() {\r\n    const isAuthenticated = this.props.user.isAuth;\r\n    console.log(this.state.btnDisable);\r\n    const tableStyle = {\r\n      display: this.state.isLoading ? \"none\" : \"block\",\r\n    };\r\n    if (!isAuthenticated) {\r\n      return <Login />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Header />\r\n          <div className=\"realestate-main\">\r\n            <h1>INVESTMENT RECOMMENDATION</h1>\r\n          </div>\r\n          <div className=\"inv-content\">\r\n            <div className=\"inv-inputs-container\">\r\n              <label className=\"inv-labels\" for=\"range\">\r\n                Enter your maximum investment (in PKR)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"inv-inputs\"\r\n                name=\"price\"\r\n                value={this.state.price}\r\n                onChange={this.onHandlePrice}\r\n                placeholder=\"example: 200000\"\r\n                id=\"range\"\r\n              ></input>\r\n            </div>\r\n            <div className=\"inv-inputs-container\">\r\n              <label className=\"inv-labels\" for=\"time\">\r\n                Select your timeframe\r\n              </label>\r\n              <select\r\n                className=\"select-text\"\r\n                id=\"time\"\r\n                onChange={this.handleSelect}\r\n              >\r\n                <option className=\"option-text\" value=\"3 Month\">\r\n                  3 Month\r\n                </option>\r\n                <option className=\"option-text\" value=\"6 Month\">\r\n                  6 Month\r\n                </option>\r\n                <option className=\"option-text\" value=\"1 Year\">\r\n                  1 Year\r\n                </option>\r\n                <option className=\"option-text\" value=\"3 Year\">\r\n                  3 Year\r\n                </option>\r\n                <option className=\"option-text\" value=\"5 Year\">\r\n                  5 Year\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"inv-button\">\r\n              <Button variant=\"contained\" color=\"primary\" onClick={this.getRec}>\r\n                Get Recommendation\r\n              </Button>\r\n            </div>\r\n            <span\r\n              style={{\r\n                color: \"red\",\r\n                fontWeight: \"bold\",\r\n                fontSize: \"18px\",\r\n                marginLeft: \"5%\",\r\n              }}\r\n            >\r\n              {this.state.error}\r\n            </span>\r\n          </div>\r\n          <div style={tableStyle} className=\"invest-results\">\r\n            <div className=\"invest-results-tables\">\r\n              <h2>Stock Companies to Invest</h2>\r\n              <div className=\"invest-table\" style={{ width: \"100%\" }}>\r\n                <table className=\"techAnalysis\">\r\n                  <tr className=\"invest-row\">\r\n                    <th>Name</th>\r\n                    <th>Percent</th>\r\n                    <th>Returned Amount</th>\r\n                  </tr>\r\n                  {this.state.stockRec.map((title) => {\r\n                    return (\r\n                      <tr className=\"invest-row\">\r\n                        <td>{title.Ticker}</td>\r\n                        <td>{title.Percent}</td>\r\n                        <td>{title.Amount}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </table>\r\n              </div>\r\n            </div>\r\n            <div className=\"invest-results-tables\">\r\n              <h2>Areas to Invest</h2>\r\n              <div className=\"invest-table\" style={{ width: \"100%\" }}>\r\n                <table className=\"techAnalysis\">\r\n                  <tr className=\"invest-row\">\r\n                    <th>Name</th>\r\n                    <th>Percent</th>\r\n                    <th>Returned Amount</th>\r\n                  </tr>\r\n                  {this.state.propertyRec.map((title) => {\r\n                    return (\r\n                      <tr className=\"invest-row\">\r\n                        <td>{title.Ticker}</td>\r\n                        <td>{title.Percent}</td>\r\n                        <td>{title.Amount}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    stock: state.stock,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(InevstmentRec);\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Login.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\StockTable.js",["175","176","177","178","179","180","181","182"],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\StockMainPage.js",["183","184","185","186","187","188","189","190","191","192","193"],"import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport TabContext from \"@material-ui/lab/TabContext\";\r\nimport TabList from \"@material-ui/lab/TabList\";\r\nimport TabPanel from \"@material-ui/lab/TabPanel\";\r\nimport fire from \"../config/fire\";\r\nimport PropertyHeader from \"./PropertyHeader\";\r\nimport Header from \"./Header\";\r\nimport \"../StyleSheets/StockMainPage.css\";\r\nimport ReactApexCharts from \"react-apexcharts\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport PredictedStock from \"./PredictedStock\";\r\n\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n\r\nimport Login from \"../Login\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ReactNotification from \"react-notification-component\";\r\nimport { store } from \"react-notification-component\";\r\n\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\n\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  tab: {\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    color: \"black\",\r\n  },\r\n  modalText: {\r\n    color: \"black\",\r\n  },\r\n  modalInputs: {\r\n    width: \"50px\",\r\n  },\r\n  buttonDiv: {\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n    paddingTop: \"10px\",\r\n  },\r\n});\r\n\r\nexport class StockMainPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      techArr: [],\r\n      mainCompanies: [\r\n        \"ACPL\",\r\n        \"AGHA\",\r\n        \"APL\",\r\n        \"ASC\",\r\n        \"ASTL\",\r\n        \"ATRL\",\r\n        \"BOP\",\r\n        \"BYCO\",\r\n        \"DCL\",\r\n        \"DOL\",\r\n        \"EFERT\",\r\n        \"EPCL\",\r\n        \"FCCL\",\r\n        \"FFBL\",\r\n        \"FFL\",\r\n        \"GAIL\",\r\n        \"GGL\",\r\n        \"GTYR\",\r\n        \"HASCOL\",\r\n        \"HBL\",\r\n        \"HUBC\",\r\n        \"HUMNL\",\r\n        \"ICL\",\r\n        \"ISL\",\r\n        \"KAPCO\",\r\n        \"KEL\",\r\n        \"MDTL\",\r\n        \"PIAA\",\r\n        \"PRL\",\r\n        \"PSMC\",\r\n        \"SAZEW\",\r\n        \"SILK\",\r\n        \"SNGP\",\r\n        \"TELE\",\r\n        \"TRG\",\r\n        \"UNITY\",\r\n      ],\r\n      green: false,\r\n      text: \"Subscribe\",\r\n      open: false,\r\n      belowAlert: \"\",\r\n      aboveAlert: \"\",\r\n      notiArray: \"\",\r\n      selectedValue: this.props.location.state,\r\n      subscribed: [],\r\n      page: 0,\r\n      rowsPerPage: 10,\r\n      rows: [],\r\n      value: \"1\",\r\n      series: [\r\n        {\r\n          data: [\r\n            {\r\n              x: 0,\r\n              y: [],\r\n            },\r\n            //   {\r\n            //   x: new Date(1538778600000),\r\n            //   y: [6629.81, 6650.5, 6623.04, 6633.33]\r\n            // },\r\n          ],\r\n        },\r\n      ],\r\n      options: {\r\n        chart: {\r\n          type: \"candlestick\",\r\n          height: 1050,\r\n          animations: {\r\n            enabled: false,\r\n            animateGradually: {\r\n              enabled: false,\r\n              delay: 150,\r\n            },\r\n            dynamicAnimation: {\r\n              enabled: true,\r\n              speed: 100,\r\n            },\r\n          },\r\n        },\r\n        title: {\r\n          text: \"OHLC Chart\",\r\n          align: \"left\",\r\n        },\r\n        xaxis: {\r\n          type: \"datetime\",\r\n        },\r\n        yaxis: {\r\n          tooltip: {\r\n            enabled: true,\r\n          },\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  handleOpen = () => {\r\n    this.setState({\r\n      open: true,\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  handleAlert = async () => {\r\n    fire.auth().onAuthStateChanged(async function (cUser) {\r\n      localStorage.setItem(\"uid\", cUser.uid);\r\n    });\r\n    const uid = localStorage.getItem(\"uid\");\r\n    const companyData = await fire\r\n      .database()\r\n      .ref(`historicaldatafyp-default-rtdb/Stocks/${this.state.selectedValue}`)\r\n      .limitToLast(1)\r\n      .once(\"value\");\r\n    var notif = \"\";\r\n    var temp = [];\r\n    for (let i in companyData.val()) {\r\n      const Close = companyData.val()[i].Close;\r\n      if (Close > this.state.aboveAlert || Close < this.state.belowAlert) {\r\n        if (this.state.belowAlert == \"\" && this.state.aboveAlert == \"\") {\r\n        } else {\r\n          notif =\r\n            this.state.selectedValue + \": ALERT! Closing Price is now \" + Close;\r\n        }\r\n      }\r\n    }\r\n    temp.push(notif);\r\n    if (notif != \"\") {\r\n      NotificationManager.success(notif, \"ALERT\", 3600000);\r\n    }\r\n\r\n    this.handleClose();\r\n  };\r\n\r\n  handleSubscribe = async (e) => {\r\n    const userID = localStorage.getItem(\"uid\");\r\n    if (e.target.innerText == \"SUBSCRIBE\") {\r\n      this.setState({\r\n        subscribed: [...this.state.subscribed, this.state.selectedValue],\r\n      });\r\n      await fire\r\n        .database()\r\n        .ref(\"Users/\" + userID)\r\n        .once(\"value\", (snap) => {\r\n          snap.forEach((doc) => {\r\n            fire\r\n              .database()\r\n              .ref(\"Users/\" + userID + \"/\" + doc.key)\r\n              .update({\r\n                subscriptions: this.state.subscribed,\r\n              });\r\n          });\r\n        });\r\n      const cUser = await fire\r\n        .database()\r\n        .ref(\"Users/\" + userID)\r\n        .once(\"value\");\r\n      //key\r\n      const userData = cUser.val()[Object.keys(cUser.val())[0]];\r\n      var temp = [];\r\n      for (let i in userData.subscriptions) {\r\n        //company name\r\n        // console.log('WORKINGH',userData.subscriptions[i])\r\n        //latest value\r\n        const lastval = await fire\r\n          .database()\r\n          .ref(\r\n            `historicaldatafyp-default-rtdb/Stocks/${userData.subscriptions[i]}`\r\n          )\r\n          .limitToLast(1)\r\n          .once(\"value\");\r\n        var notif = \"\";\r\n        for (let j in lastval.val()) {\r\n          const Close = lastval.val()[j].Close;\r\n          const Date = lastval.val()[j].Date;\r\n          const Open = lastval.val()[j].Open;\r\n          const High = lastval.val()[j].High;\r\n          const Low = lastval.val()[j].Low;\r\n          notif =\r\n            userData.subscriptions[i] +\r\n            \": OHLC for \" +\r\n            Date +\r\n            \" is \" +\r\n            \" O:\" +\r\n            Open +\r\n            \" H:\" +\r\n            High +\r\n            \" L:\" +\r\n            Low +\r\n            \" C:\" +\r\n            Close;\r\n        }\r\n        temp.push(notif);\r\n        fire\r\n          .database()\r\n          .ref(\"Users/\" + userID)\r\n          .once(\"value\", (snap) => {\r\n            snap.forEach((doc) => {\r\n              fire\r\n                .database()\r\n                .ref(\"Users/\" + userID + \"/\" + doc.key)\r\n                .update({\r\n                  Notifications: temp,\r\n                });\r\n            });\r\n          });\r\n        // this.setState({\r\n        //     data:temp\r\n        // })\r\n      }\r\n    } else if (e.target.innerText == \"SUBSCRIBED\") {\r\n      const arr = this.state.subscribed.filter((company) => {\r\n        return company !== this.state.selectedValue;\r\n      });\r\n      this.setState({\r\n        subscribed: arr,\r\n      });\r\n      fire\r\n        .database()\r\n        .ref(\"Users/\" + userID)\r\n        .once(\"value\", (snap) => {\r\n          snap.forEach((doc) => {\r\n            fire\r\n              .database()\r\n              .ref(\"Users/\" + userID + \"/\" + doc.key)\r\n              .update({\r\n                subscriptions: arr,\r\n              });\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  getSubscriptions = async () => {\r\n    // const isAuthenticated = this.props.user.isAuth\r\n    const isAuthenticated = localStorage.getItem(\"uid\");\r\n    if (isAuthenticated == null) {\r\n      this.props.history.push(\"/login\");\r\n    } else {\r\n      // fire.auth().onAuthStateChanged(async function(cUser) {\r\n      //     try {\r\n      //         localStorage.setItem('uid',cUser.uid);\r\n      //     } catch (error) {\r\n      //         // alert('Please Login')\r\n\r\n      //         // this.forceUpdate()\r\n      //     }\r\n\r\n      //   }\r\n      //   );\r\n\r\n      const uid = localStorage.getItem(\"uid\");\r\n      const user = await fire\r\n        .database()\r\n        .ref(\"Users/\" + uid)\r\n        .once(\"value\");\r\n      //key\r\n      const userData = user.val()[Object.keys(user.val())[0]];\r\n      this.setState({\r\n        subscribed:\r\n          userData.subscriptions == null ? [] : userData.subscriptions,\r\n      });\r\n    }\r\n  };\r\n\r\n  sendData = () => {\r\n    fire\r\n      .database()\r\n      .ref(\"historicaldatafyp-default-rtdb/Stocks/ABCD\")\r\n      .set({ key: \"value\" });\r\n  };\r\n  getHistoricalTableData = () => {\r\n    let tableData = [];\r\n    try {\r\n      fire\r\n        .database()\r\n        .ref(\r\n          `historicaldatafyp-default-rtdb/Stocks/${this.state.selectedValue}`\r\n        )\r\n        .limitToLast(30)\r\n        .on(\"value\", (snapshot) => {\r\n          snapshot.forEach((openSnapShot) => {\r\n            var val = openSnapShot.val();\r\n            const ros = {\r\n              open: val.Open,\r\n              high: val.High,\r\n              low: val.Low,\r\n              close: val.Close,\r\n              change: val.Change,\r\n              volume: val.Volume,\r\n              date: val.Date,\r\n            };\r\n            tableData.push(ros);\r\n          });\r\n          this.setState({\r\n            rows: tableData,\r\n          });\r\n        });\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n    }\r\n  };\r\n\r\n  getHistoricalGraphData = () => {\r\n    let data = [];\r\n    fire\r\n      .database()\r\n      .ref(`historicaldatafyp-default-rtdb/Stocks/${this.state.selectedValue}`)\r\n      .on(\"value\", (snapshot) => {\r\n        snapshot.forEach((openSnapShot) => {\r\n          var val = openSnapShot.val();\r\n          let data1 = [];\r\n          data1.push(val.Open, val.High, val.Low, val.Close);\r\n          data.push({\r\n            x: new Date(val.Date),\r\n            y: data1,\r\n          });\r\n        });\r\n        this.setState({\r\n          series: [\r\n            {\r\n              data: data,\r\n            },\r\n          ],\r\n        });\r\n      });\r\n  };\r\n\r\n  getTechnicalAnalysis = () => {\r\n    var arr = [];\r\n    fetch(\r\n      `https://ml-stock.herokuapp.com/technical/?Ticker=${this.state.selectedValue}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        Object.keys(responseData).forEach((i) => {\r\n          arr.push(responseData[i]);\r\n        });\r\n        this.setState({\r\n          techArr: arr,\r\n        });\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    this.getHistoricalTableData();\r\n    this.getHistoricalGraphData();\r\n    this.getSubscriptions();\r\n    this.getTechnicalAnalysis();\r\n  }\r\n\r\n  handleRadioChange = (event) => {\r\n    this.setState(\r\n      {\r\n        ...this.state.selectedValue,\r\n        selectedValue: event.target.value,\r\n      },\r\n      () => {\r\n        this.getHistoricalTableData();\r\n        this.getHistoricalGraphData();\r\n        this.getTechnicalAnalysis();\r\n      }\r\n    );\r\n\r\n    // this.forceUpdate()\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({\r\n      page: newPage,\r\n    });\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event) => {\r\n    this.setState({\r\n      rowsPerPage: +event.target.value,\r\n      page: 0,\r\n    });\r\n  };\r\n\r\n  handleChange = (event, newValue) => {\r\n    this.setState({\r\n      value: newValue,\r\n    });\r\n  };\r\n\r\n  columns = [\r\n    {\r\n      id: \"date\",\r\n      label: \"Date\",\r\n      minWidth: 170,\r\n    },\r\n    {\r\n      id: \"open\",\r\n      label: \"Open\",\r\n      minWidth: 170,\r\n      align: \"right\",\r\n    },\r\n    {\r\n      id: \"high\",\r\n      label: \"High\",\r\n      minWidth: 170,\r\n      align: \"right\",\r\n    },\r\n    {\r\n      id: \"low\",\r\n      label: \"Low\",\r\n      minWidth: 170,\r\n      align: \"right\",\r\n    },\r\n    {\r\n      id: \"close\",\r\n      label: \"Close\",\r\n      minWidth: 170,\r\n      align: \"right\",\r\n    },\r\n    {\r\n      id: \"change\",\r\n      label: \"Change\",\r\n      minWidth: 170,\r\n      align: \"right\",\r\n    },\r\n    {\r\n      id: \"volume\",\r\n      label: \"Volume\",\r\n      minWidth: 170,\r\n      align: \"right\",\r\n    },\r\n  ];\r\n\r\n  alertOnChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  render() {\r\n    const isAuthenticated = this.props.user.isAuth;\r\n    const { classes } = this.props;\r\n    const { theme } = this.props;\r\n    const btnStyle = {\r\n      backgroundColor: this.state.subscribed.includes(this.state.selectedValue)\r\n        ? \"#4caf50\"\r\n        : \"#f50057\",\r\n    };\r\n\r\n    if (!isAuthenticated) {\r\n      return <Login />;\r\n    } else {\r\n      return (\r\n        <div className={classes.root}>\r\n          <Header />\r\n          <NotificationContainer />\r\n          <div className=\"stock-main-heading\">\r\n            <h1>STOCK PRICE PREDICTOR</h1>\r\n          </div>\r\n          <TabContext value={this.state.value}>\r\n            <TabList\r\n              onChange={this.handleChange}\r\n              className={classes.tab}\r\n              aria-label=\"simple tabs example\"\r\n            >\r\n              <Tab label=\"HISTORICAL\" value=\"1\" />\r\n              <Tab label=\"PREDICTED\" value=\"2\" />\r\n            </TabList>\r\n            <TabPanel\r\n              value=\"1\"\r\n              //style={{backgroundColor:'rgb(196, 196, 196)'}}\r\n            >\r\n              <div className=\"stock-page-main\">\r\n                <div className=\"stock-buttons\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    style={btnStyle}\r\n                    color=\"secondary\"\r\n                    onClick={this.handleSubscribe}\r\n                  >\r\n                    {this.state.subscribed.includes(this.state.selectedValue)\r\n                      ? \"Subscribed\"\r\n                      : \"Subscribe\"}\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={this.handleOpen}\r\n                  >\r\n                    Alert\r\n                  </Button>\r\n                  <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                      timeout: 500,\r\n                    }}\r\n                  >\r\n                    <Fade in={this.state.open}>\r\n                      <div className={classes.paper}>\r\n                        <h2 id=\"transition-modal-title\">ALERT ME!</h2>\r\n                        <label for=\"aboveInput\" class={classes.modalText}>\r\n                          When Price Gets Above:{\" \"}\r\n                        </label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className={classes.modalInputs}\r\n                          name=\"aboveAlert\"\r\n                          id=\"aboveInput\"\r\n                          onChange={this.alertOnChange}\r\n                          value={this.state.aboveAlert}\r\n                        ></input>\r\n                        <br></br>\r\n                        <label for=\"belowInput\" class={classes.modalText}>\r\n                          When Price Gets Below:{\" \"}\r\n                        </label>\r\n                        <input\r\n                          style={{ marginLeft: \"3px\" }}\r\n                          type=\"number\"\r\n                          className={classes.modalInputs}\r\n                          name=\"belowAlert\"\r\n                          id=\"belowInput\"\r\n                          value={this.state.belowAlert}\r\n                          onChange={this.alertOnChange}\r\n                        ></input>\r\n                        <br></br>\r\n                        <div className={classes.buttonDiv}>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.handleAlert}\r\n                          >\r\n                            Done\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </Fade>\r\n                  </Modal>\r\n                </div>\r\n                <div className=\"graph-and-selector\">\r\n                  <div className=\"stock-graph\">\r\n                    <ReactApexCharts\r\n                      options={this.state.options}\r\n                      series={this.state.series}\r\n                      type=\"candlestick\"\r\n                    />\r\n                    <h2>Select a company</h2>\r\n                    <div className=\"stock-radio-buttons\">\r\n                      {this.state.mainCompanies.map((row, index) => {\r\n                        return (\r\n                          <label>\r\n                            <Radio\r\n                              checked={this.state.selectedValue === row}\r\n                              onChange={this.handleRadioChange}\r\n                              value={row}\r\n                              name=\"radio-button-demo\"\r\n                              inputProps={{ \"aria-label\": row }}\r\n                              color=\"primary\"\r\n                            />\r\n                            {row}\r\n                          </label>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div style={{ paddingTop: \"5%\", textAlign: \"center\" }}>\r\n                  <h1>Company Latest Historical Prices</h1>\r\n                </div>\r\n                5\r\n                <div className=\"stock-company-historical-table-div\">\r\n                  <Paper>\r\n                    <TableContainer className={classes.container}>\r\n                      <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            {this.columns.map((column) => (\r\n                              <TableCell\r\n                                key={column.id}\r\n                                align={column.align}\r\n                                style={{\r\n                                  minWidth: column.minWidth,\r\n                                  fontWeight: \"800\",\r\n                                }}\r\n                              >\r\n                                {column.label}\r\n                              </TableCell>\r\n                            ))}\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {this.state.rows\r\n                            .slice(\r\n                              this.state.page * this.state.rowsPerPage,\r\n                              this.state.page * this.state.rowsPerPage +\r\n                                this.state.rowsPerPage\r\n                            )\r\n                            .map((row) => {\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  role=\"checkbox\"\r\n                                  tabIndex={-1}\r\n                                  key={row.code}\r\n                                >\r\n                                  {this.columns.map((column) => {\r\n                                    const value = row[column.id];\r\n\r\n                                    return (\r\n                                      <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                      >\r\n                                        {column.format &&\r\n                                        typeof value === \"number\"\r\n                                          ? column.format(value)\r\n                                          : value}\r\n                                      </TableCell>\r\n                                    );\r\n                                  })}\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                    <TablePagination\r\n                      rowsPerPageOptions={[10, 30, 100]}\r\n                      component=\"div\"\r\n                      count={this.state.rows.length}\r\n                      rowsPerPage={this.state.rowsPerPage}\r\n                      page={this.state.page}\r\n                      onChangePage={this.handleChangePage}\r\n                      onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                    />\r\n                  </Paper>\r\n                </div>\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel value=\"2\">\r\n              <PredictedStock\r\n                mainCompanies={this.state.mainCompanies}\r\n                selector={this.state.selectedValue}\r\n              />\r\n            </TabPanel>\r\n          </TabContext>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    stock: state.stock,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(withStyles(useStyles)(StockMainPage));\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\ChangeEmail.js",["194","195","196","197","198"],"import React, { Component } from \"react\";\r\nimport \"../StyleSheets/ChangeEmail.css\";\r\nimport PropertyHeader from \"./PropertyHeader\";\r\nimport Header from \"./Header\";\r\nimport fire from \"../config/fire\";\r\nimport { Button, Popover } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport Login from \"../Login\";\r\nexport class ChangeEmail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      prevEmail: \"\",\r\n      Epassword: \"\",\r\n      newEmail: \"\",\r\n      msg: \"\",\r\n      errMsg: \"\",\r\n      verMsg: \"\",\r\n    };\r\n  }\r\n  onChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  changeEmailVerify = () => {\r\n    const user = fire.auth().currentUser;\r\n    const { prevEmail, newEmail, Epassword } = this.state;\r\n    user\r\n      .reauthenticateWithCredential(prevEmail, Epassword)\r\n      .then(() => {\r\n        console.log(\"reauthenticated\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"error\", e);\r\n      });\r\n    // user.verifyBeforeUpdateEmail(newEmail)\r\n  };\r\n\r\n  changeEmail = () => {\r\n    const { prevEmail, newEmail, Epassword } = this.state;\r\n    const user = fire.auth().currentUser;\r\n    const userID = fire.auth().currentUser.uid;\r\n    if (this.validate()) {\r\n      fire\r\n        .auth()\r\n        .signInWithEmailAndPassword(prevEmail, Epassword)\r\n        .then(() => {\r\n          const cUser = fire.auth().currentUser;\r\n          if (user == cUser) {\r\n            //updating in authentication\r\n            cUser\r\n              .updateEmail(newEmail)\r\n              .then(() => {\r\n                //updating in realtime\r\n                fire\r\n                  .database()\r\n                  .ref(\"Users/\" + userID)\r\n                  .once(\"value\", (data) => {\r\n                    var datas = [];\r\n                    data.forEach((doc) => {\r\n                      fire\r\n                        .database()\r\n                        .ref(\"Users/\" + userID + \"/\" + doc.key)\r\n                        .update({ email: newEmail });\r\n                    });\r\n                  });\r\n                this.setState(\r\n                  {\r\n                    msg: \"Email Updated Successfully!\",\r\n                    errMsg: \"\",\r\n                  },\r\n                  () => {\r\n                    cUser.sendEmailVerification().then(\r\n                      () => {\r\n                        this.setState({\r\n                          ...this.state,\r\n                          errMsg: \"\",\r\n                          verMsg:\r\n                            \"Verify Your Email Before You Login Next Time.\",\r\n                        });\r\n                      },\r\n                      () => {\r\n                        this.resetInputs();\r\n\r\n                        setTimeout(() => {}, 3000);\r\n                      }\r\n                    );\r\n                  }\r\n                );\r\n              })\r\n              .catch((e) => {\r\n                this.setState({\r\n                  errMsg: e.message,\r\n                  msg: \"\",\r\n                });\r\n              });\r\n          } else {\r\n            alert(\"For Security Purposes we are logging you out\");\r\n            fire.auth().signOut();\r\n            this.props.history.push(\"/login\");\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          this.setState({\r\n            errMsg: \"Invalid Email or Password\",\r\n            msg: \"\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n  resetInputs = () => {\r\n    this.setState({\r\n      newEmail: \"\",\r\n      Epassword: \"\",\r\n      prevEmail: \"\",\r\n      msg: \"\",\r\n      errMsg: \"\",\r\n    });\r\n  };\r\n  validate = () => {\r\n    const { newEmail } = this.state;\r\n    const emailRegex = new RegExp(\r\n      /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n    );\r\n    if (!emailRegex.test(newEmail)) {\r\n      this.setState({\r\n        errMsg: \"Enter a Valid New Email\",\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  render() {\r\n    const isAuthenticated = this.props.user.isAuth;\r\n    if (!isAuthenticated) {\r\n      return <Login />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Header />\r\n          <div>\r\n            <div className=\"change-field-heading\">\r\n              <h1>Change Email</h1>\r\n            </div>\r\n            <div className=\"change-field-inputs\">\r\n              <div className=\"change-field-inputs-content\">\r\n                <label for=\"prevEmail\">Enter Previous Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"prevEmail\"\r\n                  value={this.state.prevEmail}\r\n                  id=\"prevEmail\"\r\n                  onChange={this.onChange}\r\n                  required\r\n                ></input>\r\n              </div>\r\n              <div className=\"change-field-inputs-content\">\r\n                <label for=\"Epassword\">Enter Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"Epassword\"\r\n                  value={this.state.Epassword}\r\n                  id=\"Epassword\"\r\n                  onChange={this.onChange}\r\n                  required\r\n                ></input>\r\n              </div>\r\n              {/* <div class=\"change-field-button\" onClick = {this.changeEmailVerify}>\r\n                                    <p>Verify</p>\r\n                                </div> */}\r\n              <div>\r\n                <div className=\"change-field-inputs-content\">\r\n                  <label for=\"newEmail\">Enter New Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"newEmail\"\r\n                    value={this.state.newEmail}\r\n                    id=\"newEmail\"\r\n                    onChange={this.onChange}\r\n                    required\r\n                  ></input>\r\n                </div>\r\n                <div className=\"change-field-inputs-content\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.changeEmail}\r\n                  >\r\n                    Done\r\n                  </Button>\r\n                </div>\r\n                {/* <div class=\"change-field-button\" onClick = {this.changeEmail}>\r\n                                    <p>Done</p>\r\n                                </div> */}\r\n              </div>\r\n              <div className=\"msg-display\">\r\n                <span\r\n                  style={{\r\n                    color: \"green\",\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"18px\",\r\n                  }}\r\n                >\r\n                  {this.state.msg}\r\n                </span>\r\n                <br />\r\n                <span\r\n                  style={{\r\n                    color: \"green\",\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"18px\",\r\n                  }}\r\n                >\r\n                  {this.state.verMsg}\r\n                </span>\r\n                <span\r\n                  style={{ color: \"red\", fontWeight: \"bold\", fontSize: \"18px\" }}\r\n                >\r\n                  {this.state.errMsg}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    stock: state.stock,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(ChangeEmail);\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\ForgotPassword.js",["199","200"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport \"../StyleSheets/Login.css\";\r\nimport \"../StyleSheets/ForgotPassword.css\";\r\nimport { connect } from \"react-redux\";\r\nimport fire from \"../config/fire\";\r\n\r\nexport class ForgotPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      success: false,\r\n      email: \"\",\r\n      inputError: \"\",\r\n      inputSuccess: \"\",\r\n    };\r\n  }\r\n\r\n  onChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onPasswordReset = () => {\r\n    const { email } = this.state;\r\n    fire\r\n      .auth()\r\n      .sendPasswordResetEmail(email)\r\n      .then(() => {\r\n        this.setState({\r\n          inputSuccess: \"Check Your Email\",\r\n          inputError: \"\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          inputError: \"Invalid Email\",\r\n          inputSuccess: \"\",\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"fgp-main\">\r\n        <form method=\"post\" class=\"fgpForm\">\r\n          <div class=\"fgpData\">\r\n            <h1>Password Reset</h1>\r\n            <label for=\"email\">Enter Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={this.state.email}\r\n              id=\"email\"\r\n              onChange={this.onChange}\r\n              required\r\n            ></input>\r\n            <span className=\"fgp-error\">{this.state.inputError}</span>\r\n\r\n            <span className=\"fgp-success\">{this.state.inputSuccess}</span>\r\n\r\n            <div>\r\n              <div\r\n                class=\"button\"\r\n                id=\"button-login\"\r\n                onClick={this.onPasswordReset}\r\n              >\r\n                <div id=\"circle\"></div>\r\n                <p>Reset Password</p>\r\n                {/* <Link to=\"/\">LOGIN</Link> */}\r\n              </div>\r\n            </div>\r\n            <div class=\"fgp-links\">\r\n              <Link id=\"fpass\" to=\"/Login\">\r\n                Back to Login\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\DeleteAccount.js",["201","202"],"import React, { Component } from \"react\";\r\nimport \"../StyleSheets/ChangeEmail.css\";\r\nimport PropertyHeader from \"./PropertyHeader\";\r\nimport fire from \"../config/fire\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport Login from \"../Login\";\r\nclass DeleteAccount extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      prevEmail: \"\",\r\n      Epassword: \"\",\r\n      msg: \"\",\r\n      errMsg: \"\",\r\n      verMsg: \"\",\r\n    };\r\n  }\r\n  onChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  deleteAccount = () => {\r\n    const { prevEmail, Epassword } = this.state;\r\n    const user = fire.auth().currentUser;\r\n    const userID = fire.auth().currentUser.uid;\r\n    fire\r\n      .auth()\r\n      .signInWithEmailAndPassword(prevEmail, Epassword)\r\n      .then(() => {\r\n        const cUser = fire.auth().currentUser;\r\n\r\n        if (user == cUser) {\r\n          cUser\r\n            .delete()\r\n            .then(() => {})\r\n            .catch((e) => {\r\n              this.setState({\r\n                errMsg: e.message,\r\n              });\r\n            });\r\n          fire\r\n            .database()\r\n            .ref(\"Users/\" + userID)\r\n            .remove();\r\n\r\n          alert(\"Your Account has been deleted. Logging you out.\");\r\n          this.props.history.push(\"/login\");\r\n        } else {\r\n          alert(\"For Security Purposes we are logging you out\");\r\n          fire.auth().signOut();\r\n          this.props.history.push(\"/login\");\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        this.setState({\r\n          errMsg: e.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  resetInputs = () => {\r\n    this.setState({\r\n      Epassword: \"\",\r\n      prevEmail: \"\",\r\n      msg: \"\",\r\n      errMsg: \"\",\r\n    });\r\n  };\r\n  validate = () => {\r\n    const { newEmail } = this.state;\r\n    const emailRegex = new RegExp(\r\n      /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n    );\r\n    if (!emailRegex.test(newEmail)) {\r\n      this.setState({\r\n        errMsg: \"Enter a Valid New Email\",\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  render() {\r\n    const isAuthenticated = this.props.user.isAuth;\r\n    if (!isAuthenticated) {\r\n      return <Login />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Header />\r\n          <div>\r\n            <div className=\"change-field-heading\">\r\n              <h1>Delete Your Account</h1>\r\n            </div>\r\n            <div className=\"change-field-inputs\">\r\n              <div className=\"change-field-inputs-content\">\r\n                <label for=\"prevEmail\">Enter Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"prevEmail\"\r\n                  value={this.state.prevEmail}\r\n                  id=\"prevEmail\"\r\n                  onChange={this.onChange}\r\n                  required\r\n                ></input>\r\n              </div>\r\n              <div className=\"change-field-inputs-content\">\r\n                <label for=\"Epassword\">Enter Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"Epassword\"\r\n                  value={this.state.Epassword}\r\n                  id=\"Epassword\"\r\n                  onChange={this.onChange}\r\n                  required\r\n                ></input>\r\n              </div>\r\n              <div className=\"change-field-inputs-content\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.deleteAccount}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n\r\n              {/* <div class=\"change-field-button\" onClick = {this.deleteAccount}>\r\n                                    <p>Delete</p>\r\n                                </div> */}\r\n\r\n              <div className=\"msg-display\">\r\n                <span\r\n                  style={{\r\n                    color: \"green\",\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"18px\",\r\n                  }}\r\n                >\r\n                  {this.state.msg}\r\n                </span>\r\n                <span\r\n                  style={{ color: \"red\", fontWeight: \"bold\", fontSize: \"18px\" }}\r\n                >\r\n                  {this.state.errMsg}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    stock: state.stock,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(DeleteAccount);\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\config\\fire.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\LandingPageHeader.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Footer.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PropertyHeader.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Header.js",["203","204","205","206","207","208","209","210","211"],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Slider.js",["212","213","214","215"],"import AwesomeSlider from \"react-awesome-slider\";\r\nimport withAutoplay from \"react-awesome-slider/dist/autoplay\";\r\nimport \"react-awesome-slider/dist/styles.css\";\r\nimport stockpic from \"../StyleSheets/images/business-finance-terms-and-definitions-1-2.jpg\";\r\n// import begginerpic from 'C:/Users/Faian/invvesco/client/src/StyleSheets/images/begginer.jpg'\r\nimport begginerpic from \"../StyleSheets/images/easy.jpg\";\r\nimport prosliderpic from \"../StyleSheets/images/propertySlider.jpg\";\r\nimport algopic from \"../StyleSheets/images/algo.jpg\";\r\nimport \"../StyleSheets/Slider.css\";\r\nconst AutoplaySlider = withAutoplay(AwesomeSlider);\r\n\r\nfunction Slider() {\r\n  return (\r\n    <div className=\"slider-main\">\r\n      <AutoplaySlider\r\n        fillParent={true}\r\n        play={true}\r\n        mobileTouch={true}\r\n        cancelOnInteraction={false} // should stop playing on user interaction\r\n        interval={6000}\r\n        // transitionDelay={2000}\r\n        bullets={false}\r\n        organicArrows={true}\r\n      >\r\n        <div>\r\n          <img className=\"slider-image\" src={prosliderpic}></img>\r\n          <div className=\"slider-content\">\r\n            <div className=\"slider-content-heading\">\r\n              <h1>Know Where to Invest!</h1>\r\n            </div>\r\n            <div className=\"slider-content-description\">\r\n              <p>\r\n                Want to invest but don't know where to? You've come to the right\r\n                place!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <img className=\"slider-image\" src={algopic}></img>\r\n          <div className=\"slider-content\">\r\n            <div className=\"slider-content-heading\">\r\n              <h1>The Best Practices!</h1>\r\n            </div>\r\n            <div className=\"slider-content-description\">\r\n              <p>Get access to strategies and practices created by experts!</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <img className=\"slider-image\" src={begginerpic}></img>\r\n          <div className=\"slider-content\">\r\n            <div className=\"slider-content-heading\">\r\n              <h1>Easy For Everyone!</h1>\r\n            </div>\r\n            <div className=\"slider-content-description\">\r\n              <p>\r\n                A beginner? No problem! Get the predicted data and invest. No\r\n                technical skills required!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </AutoplaySlider>\r\n    </div>\r\n  );\r\n}\r\nexport default Slider;\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\AreaSidebarData.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PredictedStock.js",["216","217","218","219","220"],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\HomePlotMenu.js",["221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238"],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PredictedPlots.js",["239","240","241","242","243","244"],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PlotChart.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\SidebarData.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\TermsandConditions.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Favourites.js",["245","246","247","248","249"],{"ruleId":"250","severity":1,"message":"251","line":16,"column":3,"nodeType":"252","messageId":"253","endLine":30,"endColumn":4},{"ruleId":"254","severity":1,"message":"255","line":23,"column":5,"nodeType":"256","messageId":"257","endLine":29,"endColumn":13},{"ruleId":"258","severity":1,"message":"259","line":50,"column":7,"nodeType":"260","messageId":"261","endLine":50,"endColumn":15},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"258","severity":1,"message":"266","line":9,"column":42,"nodeType":"260","messageId":"261","endLine":9,"endColumn":48},{"ruleId":"258","severity":1,"message":"267","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":14},{"ruleId":"268","severity":1,"message":"269","line":79,"column":13,"nodeType":"270","endLine":79,"endColumn":43},{"ruleId":"258","severity":1,"message":"271","line":4,"column":8,"nodeType":"260","messageId":"261","endLine":4,"endColumn":14},{"ruleId":"258","severity":1,"message":"272","line":22,"column":26,"nodeType":"260","messageId":"261","endLine":22,"endColumn":39},{"ruleId":"258","severity":1,"message":"273","line":30,"column":8,"nodeType":"260","messageId":"261","endLine":30,"endColumn":23},{"ruleId":"258","severity":1,"message":"274","line":31,"column":8,"nodeType":"260","messageId":"261","endLine":31,"endColumn":12},{"ruleId":"258","severity":1,"message":"275","line":32,"column":8,"nodeType":"260","messageId":"261","endLine":32,"endColumn":12},{"ruleId":"258","severity":1,"message":"276","line":33,"column":8,"nodeType":"260","messageId":"261","endLine":33,"endColumn":15},{"ruleId":"258","severity":1,"message":"277","line":34,"column":8,"nodeType":"260","messageId":"261","endLine":34,"endColumn":16},{"ruleId":"258","severity":1,"message":"278","line":35,"column":8,"nodeType":"260","messageId":"261","endLine":35,"endColumn":20},{"ruleId":"258","severity":1,"message":"279","line":37,"column":8,"nodeType":"260","messageId":"261","endLine":37,"endColumn":18},{"ruleId":"258","severity":1,"message":"280","line":39,"column":7,"nodeType":"260","messageId":"261","endLine":39,"endColumn":12},{"ruleId":"258","severity":1,"message":"281","line":124,"column":11,"nodeType":"260","messageId":"261","endLine":124,"endColumn":15},{"ruleId":"282","severity":1,"message":"283","line":155,"column":15,"nodeType":"284","endLine":155,"endColumn":39},{"ruleId":"282","severity":1,"message":"283","line":320,"column":17,"nodeType":"284","endLine":320,"endColumn":41},{"ruleId":"285","severity":1,"message":"286","line":322,"column":17,"nodeType":"270","endLine":322,"endColumn":42},{"ruleId":"282","severity":1,"message":"283","line":337,"column":19,"nodeType":"284","endLine":337,"endColumn":41},{"ruleId":"282","severity":1,"message":"283","line":358,"column":17,"nodeType":"284","endLine":358,"endColumn":41},{"ruleId":"285","severity":1,"message":"286","line":360,"column":17,"nodeType":"270","endLine":360,"endColumn":45},{"ruleId":"282","severity":1,"message":"283","line":374,"column":19,"nodeType":"284","endLine":374,"endColumn":41},{"ruleId":"282","severity":1,"message":"283","line":393,"column":17,"nodeType":"284","endLine":393,"endColumn":41},{"ruleId":"285","severity":1,"message":"286","line":395,"column":17,"nodeType":"270","endLine":395,"endColumn":39},{"ruleId":"282","severity":1,"message":"283","line":409,"column":19,"nodeType":"284","endLine":409,"endColumn":41},{"ruleId":"258","severity":1,"message":"287","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":29},{"ruleId":"258","severity":1,"message":"288","line":6,"column":10,"nodeType":"260","messageId":"261","endLine":6,"endColumn":23},{"ruleId":"258","severity":1,"message":"289","line":131,"column":13,"nodeType":"260","messageId":"261","endLine":131,"endColumn":25},{"ruleId":"290","severity":1,"message":"291","line":154,"column":37,"nodeType":"292","messageId":"293","endLine":154,"endColumn":39},{"ruleId":"258","severity":1,"message":"294","line":175,"column":16,"nodeType":"260","messageId":"261","endLine":175,"endColumn":25},{"ruleId":"258","severity":1,"message":"295","line":176,"column":13,"nodeType":"260","messageId":"261","endLine":176,"endColumn":18},{"ruleId":"258","severity":1,"message":"296","line":3,"column":8,"nodeType":"260","messageId":"261","endLine":3,"endColumn":22},{"ruleId":"258","severity":1,"message":"297","line":58,"column":47,"nodeType":"260","messageId":"261","endLine":58,"endColumn":59},{"ruleId":"290","severity":1,"message":"298","line":66,"column":20,"nodeType":"292","messageId":"293","endLine":66,"endColumn":22},{"ruleId":"290","severity":1,"message":"291","line":122,"column":32,"nodeType":"292","messageId":"293","endLine":122,"endColumn":34},{"ruleId":"258","severity":1,"message":"299","line":3,"column":18,"nodeType":"260","messageId":"261","endLine":3,"endColumn":25},{"ruleId":"258","severity":1,"message":"300","line":4,"column":8,"nodeType":"260","messageId":"261","endLine":4,"endColumn":12},{"ruleId":"258","severity":1,"message":"301","line":22,"column":9,"nodeType":"260","messageId":"261","endLine":22,"endColumn":12},{"ruleId":"302","severity":1,"message":"303","line":63,"column":48,"nodeType":"304","messageId":"305","endLine":63,"endColumn":50},{"ruleId":"302","severity":1,"message":"303","line":79,"column":48,"nodeType":"304","messageId":"305","endLine":79,"endColumn":50},{"ruleId":"290","severity":1,"message":"298","line":101,"column":26,"nodeType":"292","messageId":"293","endLine":101,"endColumn":28},{"ruleId":"258","severity":1,"message":"306","line":18,"column":8,"nodeType":"260","messageId":"261","endLine":18,"endColumn":22},{"ruleId":"258","severity":1,"message":"307","line":21,"column":8,"nodeType":"260","messageId":"261","endLine":21,"endColumn":20},{"ruleId":"258","severity":1,"message":"308","line":22,"column":8,"nodeType":"260","messageId":"261","endLine":22,"endColumn":10},{"ruleId":"258","severity":1,"message":"309","line":148,"column":9,"nodeType":"260","messageId":"261","endLine":148,"endColumn":13},{"ruleId":"290","severity":1,"message":"298","line":184,"column":35,"nodeType":"292","messageId":"293","endLine":184,"endColumn":37},{"ruleId":"290","severity":1,"message":"298","line":244,"column":41,"nodeType":"292","messageId":"293","endLine":244,"endColumn":43},{"ruleId":"302","severity":1,"message":"310","line":258,"column":54,"nodeType":"304","messageId":"311","endLine":258,"endColumn":56},{"ruleId":"290","severity":1,"message":"298","line":262,"column":48,"nodeType":"292","messageId":"293","endLine":262,"endColumn":50},{"ruleId":"258","severity":1,"message":"312","line":3,"column":8,"nodeType":"260","messageId":"261","endLine":3,"endColumn":14},{"ruleId":"258","severity":1,"message":"296","line":9,"column":8,"nodeType":"260","messageId":"261","endLine":9,"endColumn":22},{"ruleId":"258","severity":1,"message":"313","line":34,"column":8,"nodeType":"260","messageId":"261","endLine":34,"endColumn":25},{"ruleId":"258","severity":1,"message":"314","line":35,"column":10,"nodeType":"260","messageId":"261","endLine":35,"endColumn":15},{"ruleId":"258","severity":1,"message":"315","line":197,"column":11,"nodeType":"260","messageId":"261","endLine":197,"endColumn":14},{"ruleId":"290","severity":1,"message":"298","line":208,"column":35,"nodeType":"292","messageId":"293","endLine":208,"endColumn":37},{"ruleId":"290","severity":1,"message":"298","line":208,"column":66,"nodeType":"292","messageId":"293","endLine":208,"endColumn":68},{"ruleId":"290","severity":1,"message":"291","line":216,"column":15,"nodeType":"292","messageId":"293","endLine":216,"endColumn":17},{"ruleId":"290","severity":1,"message":"298","line":225,"column":28,"nodeType":"292","messageId":"293","endLine":225,"endColumn":30},{"ruleId":"290","severity":1,"message":"298","line":299,"column":35,"nodeType":"292","messageId":"293","endLine":299,"endColumn":37},{"ruleId":"258","severity":1,"message":"280","line":529,"column":13,"nodeType":"260","messageId":"261","endLine":529,"endColumn":18},{"ruleId":"258","severity":1,"message":"296","line":3,"column":8,"nodeType":"260","messageId":"261","endLine":3,"endColumn":22},{"ruleId":"258","severity":1,"message":"299","line":6,"column":18,"nodeType":"260","messageId":"261","endLine":6,"endColumn":25},{"ruleId":"258","severity":1,"message":"316","line":31,"column":24,"nodeType":"260","messageId":"261","endLine":31,"endColumn":32},{"ruleId":"290","severity":1,"message":"298","line":53,"column":20,"nodeType":"292","messageId":"293","endLine":53,"endColumn":22},{"ruleId":"258","severity":1,"message":"317","line":63,"column":25,"nodeType":"260","messageId":"261","endLine":63,"endColumn":30},{"ruleId":"258","severity":1,"message":"318","line":2,"column":16,"nodeType":"260","messageId":"261","endLine":2,"endColumn":26},{"ruleId":"258","severity":1,"message":"319","line":5,"column":10,"nodeType":"260","messageId":"261","endLine":5,"endColumn":17},{"ruleId":"258","severity":1,"message":"296","line":3,"column":8,"nodeType":"260","messageId":"261","endLine":3,"endColumn":22},{"ruleId":"290","severity":1,"message":"298","line":39,"column":18,"nodeType":"292","messageId":"293","endLine":39,"endColumn":20},{"ruleId":"258","severity":1,"message":"274","line":14,"column":8,"nodeType":"260","messageId":"261","endLine":14,"endColumn":12},{"ruleId":"258","severity":1,"message":"320","line":22,"column":8,"nodeType":"260","messageId":"261","endLine":22,"endColumn":16},{"ruleId":"290","severity":1,"message":"291","line":76,"column":19,"nodeType":"292","messageId":"293","endLine":76,"endColumn":21},{"ruleId":"290","severity":1,"message":"291","line":119,"column":23,"nodeType":"292","messageId":"293","endLine":119,"endColumn":25},{"ruleId":"321","severity":1,"message":"322","line":149,"column":15,"nodeType":"260","messageId":"323","endLine":149,"endColumn":18},{"ruleId":"258","severity":1,"message":"301","line":149,"column":15,"nodeType":"260","messageId":"261","endLine":149,"endColumn":18},{"ruleId":"290","severity":1,"message":"298","line":162,"column":28,"nodeType":"292","messageId":"293","endLine":162,"endColumn":30},{"ruleId":"290","severity":1,"message":"298","line":231,"column":16,"nodeType":"292","messageId":"293","endLine":231,"endColumn":18},{"ruleId":"290","severity":1,"message":"298","line":309,"column":33,"nodeType":"292","messageId":"293","endLine":309,"endColumn":35},{"ruleId":"258","severity":1,"message":"324","line":4,"column":8,"nodeType":"260","messageId":"261","endLine":4,"endColumn":16},{"ruleId":"285","severity":1,"message":"286","line":26,"column":11,"nodeType":"270","endLine":26,"endColumn":60},{"ruleId":"285","severity":1,"message":"286","line":41,"column":11,"nodeType":"270","endLine":41,"endColumn":55},{"ruleId":"285","severity":1,"message":"286","line":52,"column":11,"nodeType":"270","endLine":52,"endColumn":59},{"ruleId":"302","severity":1,"message":"303","line":145,"column":53,"nodeType":"304","messageId":"305","endLine":145,"endColumn":55},{"ruleId":"290","severity":1,"message":"298","line":212,"column":33,"nodeType":"292","messageId":"293","endLine":212,"endColumn":35},{"ruleId":"290","severity":1,"message":"298","line":274,"column":41,"nodeType":"292","messageId":"293","endLine":274,"endColumn":43},{"ruleId":"290","severity":1,"message":"298","line":284,"column":41,"nodeType":"292","messageId":"293","endLine":284,"endColumn":43},{"ruleId":"290","severity":1,"message":"298","line":294,"column":41,"nodeType":"292","messageId":"293","endLine":294,"endColumn":43},{"ruleId":"258","severity":1,"message":"325","line":1,"column":17,"nodeType":"260","messageId":"261","endLine":1,"endColumn":26},{"ruleId":"258","severity":1,"message":"312","line":4,"column":8,"nodeType":"260","messageId":"261","endLine":4,"endColumn":14},{"ruleId":"258","severity":1,"message":"319","line":12,"column":10,"nodeType":"260","messageId":"261","endLine":12,"endColumn":17},{"ruleId":"258","severity":1,"message":"326","line":15,"column":8,"nodeType":"260","messageId":"261","endLine":15,"endColumn":17},{"ruleId":"258","severity":1,"message":"327","line":19,"column":8,"nodeType":"260","messageId":"261","endLine":19,"endColumn":13},{"ruleId":"328","severity":1,"message":"329","line":86,"column":51,"nodeType":"330","messageId":"331","endLine":86,"endColumn":52,"suggestions":"332"},{"ruleId":"290","severity":1,"message":"298","line":87,"column":24,"nodeType":"292","messageId":"293","endLine":87,"endColumn":26},{"ruleId":"328","severity":1,"message":"329","line":107,"column":55,"nodeType":"330","messageId":"331","endLine":107,"endColumn":56,"suggestions":"333"},{"ruleId":"290","severity":1,"message":"298","line":109,"column":30,"nodeType":"292","messageId":"293","endLine":109,"endColumn":32},{"ruleId":"290","severity":1,"message":"298","line":110,"column":30,"nodeType":"292","messageId":"293","endLine":110,"endColumn":32},{"ruleId":"290","severity":1,"message":"298","line":123,"column":30,"nodeType":"292","messageId":"293","endLine":123,"endColumn":32},{"ruleId":"290","severity":1,"message":"298","line":124,"column":30,"nodeType":"292","messageId":"293","endLine":124,"endColumn":32},{"ruleId":"290","severity":1,"message":"298","line":134,"column":29,"nodeType":"292","messageId":"293","endLine":134,"endColumn":31},{"ruleId":"290","severity":1,"message":"298","line":135,"column":29,"nodeType":"292","messageId":"293","endLine":135,"endColumn":31},{"ruleId":"290","severity":1,"message":"291","line":145,"column":34,"nodeType":"292","messageId":"293","endLine":145,"endColumn":36},{"ruleId":"290","severity":1,"message":"298","line":359,"column":30,"nodeType":"292","messageId":"293","endLine":359,"endColumn":32},{"ruleId":"290","severity":1,"message":"298","line":495,"column":28,"nodeType":"292","messageId":"293","endLine":495,"endColumn":30},{"ruleId":"258","severity":1,"message":"334","line":527,"column":7,"nodeType":"260","messageId":"261","endLine":527,"endColumn":22},{"ruleId":"258","severity":1,"message":"300","line":4,"column":8,"nodeType":"260","messageId":"261","endLine":4,"endColumn":12},{"ruleId":"258","severity":1,"message":"306","line":7,"column":8,"nodeType":"260","messageId":"261","endLine":7,"endColumn":22},{"ruleId":"258","severity":1,"message":"335","line":10,"column":10,"nodeType":"260","messageId":"261","endLine":10,"endColumn":29},{"ruleId":"302","severity":1,"message":"303","line":182,"column":53,"nodeType":"304","messageId":"305","endLine":182,"endColumn":55},{"ruleId":"302","severity":1,"message":"303","line":196,"column":53,"nodeType":"304","messageId":"305","endLine":196,"endColumn":55},{"ruleId":"290","severity":1,"message":"298","line":256,"column":33,"nodeType":"292","messageId":"293","endLine":256,"endColumn":35},{"ruleId":"258","severity":1,"message":"327","line":5,"column":8,"nodeType":"260","messageId":"261","endLine":5,"endColumn":13},{"ruleId":"258","severity":1,"message":"336","line":11,"column":8,"nodeType":"260","messageId":"261","endLine":11,"endColumn":23},{"ruleId":"302","severity":1,"message":"303","line":112,"column":39,"nodeType":"304","messageId":"305","endLine":112,"endColumn":41},{"ruleId":"258","severity":1,"message":"337","line":148,"column":13,"nodeType":"260","messageId":"261","endLine":148,"endColumn":20},{"ruleId":"290","severity":1,"message":"298","line":171,"column":39,"nodeType":"292","messageId":"293","endLine":171,"endColumn":41},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-unused-vars","'myLogger' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["338"],"no-negated-in-lhs",["339"],"'Switch' is defined but never used.","'Link' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Footer' is defined but never used.","'ThemeProvider' is defined but never used.","'SwipeableDrawer' is defined but never used.","'clsx' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'StockTable' is defined but never used.","'theme' is assigned a value but never used.","'user' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'RiThunderstormsFill' is defined but never used.","'FaUserInjured' is defined but never used.","'checkedError' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'isLoading' is assigned a value but never used.","'token' is assigned a value but never used.","'PropertyHeader' is defined but never used.","'cNewPassword' is assigned a value but never used.","Expected '===' and instead saw '=='.","'Popover' is defined but never used.","'fire' is defined but never used.","'arr' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'FormHelperText' is defined but never used.","'readXlsxFile' is defined but never used.","'fs' is defined but never used.","'data' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'AppBar' is defined but never used.","'ReactNotification' is defined but never used.","'store' is defined but never used.","'uid' is assigned a value but never used.","'newEmail' is assigned a value but never used.","'datas' is assigned a value but never used.","'withRouter' is defined but never used.","'connect' is defined but never used.","'MenuItem' is defined but never used.","no-redeclare","'arr' is already defined.","redeclared","'stockpic' is defined but never used.","'useEffect' is defined but never used.","'PlotChart' is defined but never used.","'Paper' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["340","341"],["342","343"],"'mapStateToProps' is assigned a value but never used.","'GiConsoleController' is defined but never used.","'TablePagination' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"344","fix":"345","desc":"346"},{"messageId":"347","fix":"348","desc":"349"},{"messageId":"344","fix":"350","desc":"346"},{"messageId":"347","fix":"351","desc":"349"},"removeEscape",{"range":"352","text":"353"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"354","text":"355"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"356","text":"353"},{"range":"357","text":"355"},[2441,2442],"",[2441,2441],"\\",[3248,3249],[3248,3248]]