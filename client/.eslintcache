[{"E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\index.js":"1","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\App.js":"2","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\reportWebVitals.js":"3","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Signup.js":"4","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Home.js":"5","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\RealEstateMainPage.js":"6","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Login.js":"7","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\LandingPage.js":"8","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\ForgotPassword.js":"9","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\ChangeEmail.js":"10","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\ChangePassword.js":"11","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\RealEstateAreaSearchBar.js":"12","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\config\\fire.js":"13","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\Header.js":"14","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\Footer.js":"15","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\Slider.js":"16","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\PropertyHeader.js":"17","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\LandingPageHeader.js":"18","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\AreaSidebarData.js":"19","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\SidebarData.js":"20","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\HomePlotMenu.js":"21","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\PlotChart.js":"22","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\index.js":"23","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\reportWebVitals.js":"24","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\App.js":"25","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Signup.js":"26","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Home.js":"27","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Login.js":"28","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\RealEstateMainPage.js":"29","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\LandingPage.js":"30","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\ChangeEmail.js":"31","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\ChangePassword.js":"32","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\RealEstateAreaSearchBar.js":"33","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\config\\fire.js":"34","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Header.js":"35","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Footer.js":"36","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Slider.js":"37","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PropertyHeader.js":"38","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\LandingPageHeader.js":"39","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\HomePlotMenu.js":"40","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\AreaSidebarData.js":"41","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\SidebarData.js":"42","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PlotChart.js":"43","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\ForgotPassword.js":"44","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\StockMainPage.js":"45","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\HistoricalHooks.js":"46","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PredictedStock.js":"47","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\StockTable.js":"48","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\DeleteAccount.js":"49"},{"size":1548,"mtime":1613045470000,"results":"50","hashOfConfig":"51"},{"size":2564,"mtime":1613045470000,"results":"52","hashOfConfig":"51"},{"size":362,"mtime":1613045470000,"results":"53","hashOfConfig":"51"},{"size":8489,"mtime":1613045470000,"results":"54","hashOfConfig":"51"},{"size":15490,"mtime":1613570540020,"results":"55","hashOfConfig":"51"},{"size":712,"mtime":1613545397886,"results":"56","hashOfConfig":"51"},{"size":3786,"mtime":1613045470000,"results":"57","hashOfConfig":"51"},{"size":2915,"mtime":1613045470000,"results":"58","hashOfConfig":"51"},{"size":2743,"mtime":1613045470000,"results":"59","hashOfConfig":"51"},{"size":2463,"mtime":1613045470000,"results":"60","hashOfConfig":"51"},{"size":2542,"mtime":1613045470000,"results":"61","hashOfConfig":"51"},{"size":3051,"mtime":1613045470000,"results":"62","hashOfConfig":"51"},{"size":391,"mtime":1613045470000,"results":"63","hashOfConfig":"51"},{"size":2616,"mtime":1613045470000,"results":"64","hashOfConfig":"51"},{"size":1258,"mtime":1613559453468,"results":"65","hashOfConfig":"51"},{"size":2440,"mtime":1613045470000,"results":"66","hashOfConfig":"51"},{"size":565,"mtime":1613045470000,"results":"67","hashOfConfig":"51"},{"size":511,"mtime":1613045470000,"results":"68","hashOfConfig":"51"},{"size":6128,"mtime":1613045470000,"results":"69","hashOfConfig":"51"},{"size":884,"mtime":1613045470000,"results":"70","hashOfConfig":"51"},{"size":5998,"mtime":1613556990327,"results":"71","hashOfConfig":"51"},{"size":2438,"mtime":1613570930692,"results":"72","hashOfConfig":"51"},{"size":2000,"mtime":1614772213131,"results":"73","hashOfConfig":"74"},{"size":375,"mtime":1613742563666,"results":"75","hashOfConfig":"74"},{"size":3206,"mtime":1615365389973,"results":"76","hashOfConfig":"74"},{"size":10012,"mtime":1614702688616,"results":"77","hashOfConfig":"74"},{"size":18724,"mtime":1618829863389,"results":"78","hashOfConfig":"74"},{"size":4644,"mtime":1613802256074,"results":"79","hashOfConfig":"74"},{"size":980,"mtime":1613802024432,"results":"80","hashOfConfig":"74"},{"size":9596,"mtime":1615555964877,"results":"81","hashOfConfig":"74"},{"size":6620,"mtime":1615305291539,"results":"82","hashOfConfig":"74"},{"size":8183,"mtime":1615305085337,"results":"83","hashOfConfig":"74"},{"size":3130,"mtime":1613742563598,"results":"84","hashOfConfig":"74"},{"size":533,"mtime":1614679262338,"results":"85","hashOfConfig":"74"},{"size":6317,"mtime":1615289738526,"results":"86","hashOfConfig":"74"},{"size":1280,"mtime":1613895960492,"results":"87","hashOfConfig":"74"},{"size":2378,"mtime":1615555879052,"results":"88","hashOfConfig":"74"},{"size":587,"mtime":1613802309950,"results":"89","hashOfConfig":"74"},{"size":529,"mtime":1613742563597,"results":"90","hashOfConfig":"74"},{"size":7523,"mtime":1614784127298,"results":"91","hashOfConfig":"74"},{"size":6444,"mtime":1613742563595,"results":"92","hashOfConfig":"74"},{"size":736,"mtime":1615298485821,"results":"93","hashOfConfig":"74"},{"size":2438,"mtime":1613742563598,"results":"94","hashOfConfig":"74"},{"size":2835,"mtime":1613757750756,"results":"95","hashOfConfig":"74"},{"size":24403,"mtime":1618660246274,"results":"96","hashOfConfig":"74"},{"size":0,"mtime":1614103956275,"results":"97","hashOfConfig":"74"},{"size":13686,"mtime":1618659796042,"results":"98","hashOfConfig":"74"},{"size":5134,"mtime":1618829773372,"results":"99","hashOfConfig":"74"},{"size":4398,"mtime":1615561853950,"results":"100","hashOfConfig":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},"f30wit",{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"104"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"104"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"159"},"tabzg6",{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"159"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"159"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"159"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"159"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"159"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"159"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"159"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"159"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"159"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"159"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"159"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"159"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"159"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"159"},"E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\index.js",["226","227","228"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nimport {createStore, combineReducers, applyMiddleware, compose} from 'redux'\nimport { createLogger } from 'redux-logger';\nimport {Provider} from 'react-redux'\n\nconst initialUserState = {\n  user: null,\n  isAuth: false\n}\nconst userReducer = (state = initialUserState , action)=>{\n  switch(action.type){\n      case 'nullUser':\n          console.log('user null')\n          state={\n              ...state,\n              user:null,\n              isAuth:false    \n          }\n      case 'setUser':\n          state = {\n              ...state,\n              user: action.payload,\n              isAuth: true,\n          }\n          break\n  }\n  return state;\n}\n\n\n//personal logger\nconst myLogger  = (store) => (next) => (action) =>{\n  console.log('logged action: ', action)\n  next(action)\n}\n\nconst store =  createStore(\n  combineReducers({\n      user: userReducer,\n  }),\n  {},\n  compose(\n      applyMiddleware(createLogger()),\n\n  )\n  \n)\n\nstore.subscribe(()=>{\nconsole.log('store updated!', store.getState())\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["229","230"],"E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\App.js",["231","232"],"import React from 'react';\nimport Home from './Home';\nimport Signup from './Signup'\nimport Login from './Login'\nimport './StyleSheets/Home.css';\nimport RealEstateMain from './RealEstateMainPage';\nimport ChangeEmail from './Components/ChangeEmail';\nimport ChangePassword from './Components/ChangePassword';\nimport RealEstateAreaSearchBar from './Components/RealEstateAreaSearchBar'\nimport { BrowserRouter as Router, Route , Switch} from 'react-router-dom';\nimport LandingPage from \"./LandingPage\";\n\nimport { connect } from 'react-redux';\nimport fire from './config/fire'\nimport ForgotPassword from './ForgotPassword';\n// import ProtectedRoute from './ProtectedRoute'\n//import Header from './Components/Header'\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.user.user,\n      isAuth: this.props.user.isAuth\n    };\n    \n    this.authListener = this.authListener.bind(this);\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        console.log('asdasdasd')\n        this.setState({ user });\n        this.props.confirmUserAuth(user)\n      } else {\n        console.log('here mf')\n        // this.setState({ user: null,isAuth:false });\n      }\n    })\n  }\n  render(){\n    return(\n      <div>\n      \n        <Router> \n          <Route path=\"/\" exact component={LandingPage}/>\n          <Route path=\"/Home\" exact issAuth={this.props.setisAuth} component={Home}/>\n          <Route path=\"/registration\" exact component={Signup}/>\n          <Route path=\"/login\" exact component={Login}/>\n          <Route path = \"/RealEstatePrediction\" component={RealEstateMain} exact/>\n          <Route path = \"/ChangeEmail\" component={ChangeEmail} exact/>\n          <Route path = \"/ChangePassword\" component={ChangePassword} exact/>\n          <Route path = \"/ForgotPassword\" component={ForgotPassword} exact/>\n        </Router>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state)=>{\n  return {\n    //initialUserState \n    user: state.user,\n    // math: state.mathReducer\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n  return {\n    confirmUserAuth: (user)=>{\n      console.log('in confirm user')\n      dispatch({\n        type: 'setUser',\n        payload: user\n      })\n    }\n    // ,\n    // returnNullUser: (user)=>{\n    //   console.log('in null user')\n    //   dispatch({\n    //     type: 'nullUser',\n    //     payload: null\n    //   })\n    // }\n  }\n\n} \nexport default connect(mapStateToProps,mapDispatchToProps)(App)","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\reportWebVitals.js",[],"E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Signup.js",["233","234","235","236","237","238","239","240"],"import React, { Component } from 'react'\nimport { RiThunderstormsFill } from 'react-icons/ri';\nimport { Link ,withRouter} from 'react-router-dom';\nimport './StyleSheets/Signup.css';\nimport fire from './config/fire'\nexport class Signup extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isLoading: true,\n            success:false,\n            token: '',\n            signUpFirstName: '',\n            signUpLastName: '',\n            signUpEmail: '',\n            signUpMobile: '',\n            signUpPassword: '',\n            signUpConfirmPassword:'',\n            fnameError: '',\n            lnameError: '',\n            emailError: '',\n            passwordError: '',\n            checked:false       \n        }\n    }\n   \n   \n    resetInputs = ()=>{\n        this.setState({\n            isLoading: false,\n            token: '',\n            signUpError: '',\n            signUpFirstName: '',\n            signUpLastName: '',\n            signUpEmail: '',\n            signUpMobile: '',\n            signUpPassword: '',\n        })\n    }\n    //adding onChange event for text fields\n    onChange = (event) =>{\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n        this.setState({\n            [name]:value\n        })\n    }\n    onChangeCheckbox = () => {\n        this.setState({checked: !this.state.checked});\n    }\n    //pushing route on signup button\n    signupButtonPush = () =>{\n        if(this.state.success){\n            console.log(\"hhhh\",this.props.history)\n            this.props.history.push(\"/login\")\n        }\n        else{\n            console.log(\"isme\")\n            this.props.history.push(\"/registration\")\n        }\n    }\n\n    //signup button event call\n    onSignup = ()=> {\n        const {\n            signUpFirstName,\n            signUpLastName,\n            signUpEmail,\n            signUpPassword,\n      } = this.state\n        if(this.validate()){\n            fire.auth().createUserWithEmailAndPassword(signUpEmail, signUpPassword)\n          .then((u) => {\n            console.log('Successfully Signed Up');\n            //login the user\n            fire.auth().signInWithEmailAndPassword(signUpEmail, signUpPassword)\n            console.log('login successfull')\n            //pushing to home\n            this.props.history.push('/home')\n            \n            //adding first name and last name\n            const user = fire.auth().currentUser\n            user.updateProfile({\n                displayName: signUpFirstName+ \",\"+ signUpLastName\n            })\n\n\n            const dbh = fire.firestore();\n            dbh.collection(\"users\").doc(user.uid).set({\n              firstName:signUpFirstName,\n              lastName:signUpLastName,\n              email:signUpEmail,\n            });\n\n\n            console.log('displayName: ', signUpFirstName, \" , \", signUpLastName)\n          })\n          .catch((err) => {\n            console.log(err.toString());\n            alert(err.toString())\n          })\n        }\n        \n      }\n\n    validate = (event)=>{\n        let fnameError = '';\n        let lnameError = '';\n        let emailError = '';\n        let passwordError = '';\n        let checkedError = '';\n        const emailRegex = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n        const nameRegex = new RegExp(/^[a-z ,.'-]+$/i)\n        const passRegex = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/i)\n        \n        if(!nameRegex.test(this.state.signUpFirstName)){\n            fnameError = 'Enter Valid First Name'\n        }\n\n        if(!nameRegex.test(this.state.signUpLastName)){\n            lnameError = 'Enter Valid Last Name'\n        }\n\n        if(!emailRegex.test(this.state.signUpEmail)){\n            emailError = 'Enter Valid Email'\n        }\n\n        // if(!this.state.signUpEmail.includes('@')){\n        //     emailError = 'Invalid Email'\n        // }\n        if(!passRegex.test(this.state.signUpPassword)){\n            passwordError = 'Password must have minimum 8 characters, atleast one letter and one number'\n        }\n        if(this.state.signUpPassword!=this.state.signUpConfirmPassword){\n            passwordError = \"Passwords don't Match\"\n        }\n        if(emailError || fnameError || lnameError || passwordError){\n            this.setState({\n                emailError,\n                fnameError,\n                lnameError,\n                passwordError,\n                // signUpEmail:''\n            })\n            //this.focusInput.focus()\n            return false;\n        }\n        return true\n    }\n    render(props) {\n        const buttonStyle = {\n            pointerEvents: this.state.checked ? 'all': 'none',\n        }\n        console.log(this.state)\n        const {isLoading,\n            token,\n            signUpFirstName,\n            signUpLastName,\n            signUpEmail,\n            signUpPassword,\n            signUpConfirmPassword,\n            checked,\n        }   = this.state;\n\n        // if(isLoading){\n        //     return(<div><p>Loading...</p></div>)\n        // }\n        // if(!token){\n        //     return(<div><p>token not set</p></div>)\n        // }\n\n        return (\n        <div class='signup-main'>\n            <form class=\"signupForm\">\n                \n                <h1>Welcome</h1>\n                            \n                <div class='signupDataRow1'>\n                    <div class='signupDataRow1Col1'>\n                        <label for=\"fname\">First Name</label>\n                        <input type=\"text\" id=\"fname\" name=\"signUpFirstName\" value={signUpFirstName} onChange={this.onChange.bind(this)} required></input>\n                        <span className=\"error-display\">{this.state.fnameError}</span>\n                    </div>\n                    <div class='signupDataRow1Col2'>\n                        <label for=\"lname\">Last Name</label>\n                        <input type=\"text\" id=\"lname\" name=\"signUpLastName\" value={signUpLastName} onChange={this.onChange} ></input>\n                        <span className=\"error-display\">{this.state.lnameError}</span>\n                    </div>\n                </div>\n\n                <div class='signupDataRow2'>\n                    <div class='signupDataRow2Col2'>\n                        <label for=\"email\">Email</label>\n                        <input ref={focusInput =>{this.signUpEmail = focusInput}} type=\"email\" id=\"email\" name=\"signUpEmail\" value={signUpEmail} onChange={this.onChange} required></input>\n                        <span className=\"error-display\">{this.state.emailError}</span>\n                    </div>\n                </div>\n                \n                <div class='signupDataRow3'>\n                    <div class='signupDataRow3Col1'>\n                        <label for=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" name=\"signUpPassword\" value={signUpPassword} onChange={this.onChange} required></input>\n                        <span className=\"error-display\">{this.state.passwordError}</span>\n                    </div>\n                    <div class='signupDataRow3Col2'>\n                        <label for=\"cpassword\">Confirm Password</label>\n                        <input type=\"password\" id=\"cpassword\" name=\"signUpConfirmPassword\" value={signUpConfirmPassword} onChange={this.onChange} ></input> \n                    </div>\n                </div>\n                <div class=\"hel\">\n                <input type='checkbox' id='termsCond' defaultChecked={this.state.checked} value={checked} onChange={this.onChangeCheckbox} required></input>\n                <label class=\"terms\" for='termsCond'>Do you agree to our <a id=\"termsLink\" href=\"#\">Terms</a> and <a id=\"ppLink\" href=\"#\">Privacy Policy</a>?</label>                    \n                </div>\n                <div class=\"button\" id=\"button-signup\" style={buttonStyle} onClick={this.onSignup}>\n                    <div id=\"circle\"></div>\n                    <a href=\"#\">SIGNUP</a>\n                </div>\n\n                <div class=\"logLink\">\n                    <Link id=\"loginLink\" to=\"/login\">Already have an account?</Link>\n                </div>\n                {/* check */}\n            </form>\n        </div>\n        )\n    }\n}\n\nexport default withRouter(Signup)\n","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Home.js",["241","242","243","244","245","246","247","248","249","250","251","252","253","254"],"E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\RealEstateMainPage.js",["255"],"import React from 'react';\nimport PropertyHeader from './Components/PropertyHeader'\nimport './StyleSheets/Header.css'\nimport './StyleSheets/RealEstateMainPage.css'\nimport RealEstateAreaSearchBar from './Components/RealEstateAreaSearchBar'\nimport HomePlotMenu from './Components/HomePlotMenu'\nclass RealEstateMain extends React.Component{\n    render(){\n        return(\n            <div>\n                <div><PropertyHeader/></div>\n                <div className=\"realestate-main\">\n                    <h1>REAL ESTATE PRICE PREDICTOR</h1>\n                </div>\n                {/* <RealEstateAreaSearchBar/> */}\n                <HomePlotMenu/>\n            </div>\n        );\n    }\n}\nexport default RealEstateMain;","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Login.js",[],"E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\LandingPage.js",["256","257"],"import React from 'react';\nimport {Link} from 'react-router-dom'\nimport LandingPageHeader from './Components/LandingPageHeader'\nimport Footer from './Components/Footer'\nimport './StyleSheets/LandingPage.css'\nimport logo from \"C:/Users/Faian/invvesco/client/src/StyleSheets/images/gra.jpg\" \n\nclass LandingPage extends React.Component{\n    onClickLogin = ()=>{\n        \n    }\n    render(){\n        \n        return(\n            <div className=\"landing-page-main\">\n                <div>\n                    <LandingPageHeader/>\n                </div>\n                <div className=\"landing-heading\">\n                    <div class='bg-curve'>\n                        <div>\n                            <h1>WELCOME TO INVESCO</h1>\n                            <p className=\"intro-para\">Want to invest but don't know where to? You've come to the right place!</p> \n                        </div>\n                    </div>\n                </div>\n                <div className=\"landing-info\">\n                    <div className=\"landing-info-box\">\n                        <h2>Easy For Everyone</h2>\n                        <div className=\"para\">\n                        <p>No technical skills required! No experience needed in stock or property investment. INVESCO provides access to strategies created by experts and all prices are predicted based on those strategies</p>\n                        </div>\n                    </div>\n                    <div className=\"landing-info-box\">\n                        <h2>Best For Beginners</h2>\n                        <div className=\"para\">\n                        <p>With the aid of the investment recommendation, INVESCO uses the already predicted data and provides an investment recommendation making it really easy for beginners to invest.</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"landing-content\">\n                    <div className=\"intro\">\n                        <h1>What we provide</h1>\n                        <h3>Stock Price Predictor</h3>\n                        <p>Get predicted stock prices for the companies in the KSE100 index. Change your models and decide when and where to invest! </p>\n                        <h3>Real Estate Price Predictor</h3>\n                        <p>Looking for property investment? Our system provides predicted real estate prices in Islamabad.</p>\n                        <h3>Investment Recommendation</h3>\n                        <p>Don't know where to invest? Get a system recommendation and make your life easy!</p>\n                    </div>\n                    <div className=\"graph-image\">\n                        <img alt=\"image\" src={logo} />\n                    </div>\n                </div>\n                <div>\n                    <Footer/>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default LandingPage;","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\ForgotPassword.js",["258","259"],"import React, { Component } from 'react'\nimport { Link,withRouter } from 'react-router-dom';\nimport './StyleSheets/Login.css'\nimport './StyleSheets/ForgotPassword.css'\nimport { connect } from 'react-redux';\nimport fire from './config/fire'\n\nexport class ForgotPassword extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isLoading: true,\n            success:false,\n            email: '',\n            inputError:'',\n            inputSuccess:'',\n        }\n    }\n\n    onChange = (event) =>{\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n            this.setState({\n                [name]:value\n            })\n        }\n\n    onPasswordReset = ()=>{\n        const { email } = this.state\n        console.log('in')\n        fire.auth().sendPasswordResetEmail(email)\n        .then( ()=>{\n            this.setState({\n                inputSuccess: 'Check Your Email',\n                inputError:\"\",\n            })\n        })\n        .catch((err)=>{\n            console.log(err.toString())\n            this.setState({\n                inputError:\"Invalid Email\",\n                inputSuccess:''\n            })\n        })\n    } \n \n\n    render() {\n        return (\n            <div class=\"fgp-main\" >\n                <form method=\"post\" class=\"loginForm\" >\n                    <div class='fgpData'>\n                        <h1>Password Reset</h1>\n                        <label for=\"email\">Enter Email</label>\n                        <input type=\"email\" name=\"email\" value = {this.state.email} id=\"email\" onChange={this.onChange} required></input>\n                        <span className=\"fgp-error\">\n                            {this.state.inputError}\n                        </span>\n                          \n                        <span className=\"fgp-success\">\n                            {this.state.inputSuccess}\n                        </span>\n                            \n                        \n            \n                        <div>\n                            <div class=\"button\" id=\"button-login\" onClick = {this.onPasswordReset}>\n                                <div id=\"circle\"></div>\n                                <p>Reset Password</p>\n                                {/* <Link to=\"/\">LOGIN</Link> */}\n                            </div>\n                            \n                        </div>\n                        <div class='fgp-links'>\n                            <Link id=\"fpass\" to='/Login'>Back to Login</Link>\n                        </div>\n                    </div>\n                    \n                </form>\n\n               \n            </div>\n            \n        )\n    }\n}\n\n\nexport default ForgotPassword","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\ChangeEmail.js",[],"E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\ChangePassword.js",[],"E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\RealEstateAreaSearchBar.js",["260","261"],"import React, { Component } from 'react'\nimport {AreaSidebarData} from './AreaSidebarData'\nimport {Link} from 'react-router-dom'\nimport '../StyleSheets/AreaSidebar.css'\nimport * as FaIcon from 'react-icons/fa'\nexport class RealEstateAreaSearchBar extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            showSearchbar:false,\n            searchFeild: '',\n        }\n    }\n\n    showSearchSidebar = () =>{\n        this.setState({\n            showSearchbar:!this.state.showSearchbar\n        })\n    }\n\n    render() {\n        const buttonStyle = {\n            display : this.state.showSearchbar ? 'none':'block',\n        }\n        return (\n            <div>\n                <div className=\"area-button\" id=\"areaButton\" style={buttonStyle} onClick={this.showSearchSidebar}>\n                    <Link to=\"#\" className=\"area-bars\">\n                            <FaIcon.FaBars/>\n                            <span>View Areas</span>\n                    </Link>\n                </div>\n                <nav className= {this.state.showSearchbar ? \"area-nav active\": 'area-nav'}>\n                    \n                    <ul className= 'area-nav-item-holder' >\n                        <li className='area-toggle' onClick={this.showSearchSidebar}>\n                            <Link t0=\"#\" className=\"area-bars\">\n                                <FaIcon.FaBars/>\n                                <span>View Areas</span>\n                            </Link>\n                            \n                        </li>\n                        <input \n                            type=\"Search\" \n                            className='search-bar'\n                            placeholder=\"Search..\" \n                            onChange={(e)=>{\n                                this.setState({\n                                    searchFeild: e.target.value\n                                })\n                            }}\n                        >\n                        </input>\n                        {\n                            AreaSidebarData.filter((val)=>{\n                                if(this.state.searchFeild == ''){\n                                    return val\n                                }\n                                else if(val.title.toLowerCase().includes(this.state.searchFeild.toLowerCase())){\n                                    return val\n                                }\n                            }).map((index , id)=>{\n                                return(\n                                    <li key={id} className={index.cName}>\n                                        <Link to={index.path}>\n                                            <span className='span-text'>{index.title}</span>\n                                        </Link>\n                                    </li>\n                                )\n                            })\n                        }\n                    </ul>\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default RealEstateAreaSearchBar\n","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\config\\fire.js",[],"E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\Header.js",[],"E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\Footer.js",[],"E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\Slider.js",["262","263","264","265"],"import AwesomeSlider from 'react-awesome-slider';\nimport withAutoplay from 'react-awesome-slider/dist/autoplay';\nimport 'react-awesome-slider/dist/styles.css';\nimport stockpic from 'C:/Users/Faian/invvesco/client/src/StyleSheets/images/business-finance-terms-and-definitions-1-2.jpg'\n// import begginerpic from 'C:/Users/Faian/invvesco/client/src/StyleSheets/images/begginer.jpg'\nimport begginerpic from 'C:/Users/Faian/invvesco/client/src/StyleSheets/images/easy.jpg'\nimport prosliderpic from 'C:/Users/Faian/invvesco/client/src/StyleSheets/images/propertySlider.jpg'\nimport algopic from 'C:/Users/Faian/invvesco/client/src/StyleSheets/images/algo.jpg'\nimport '../StyleSheets/Slider.css'\nconst AutoplaySlider = withAutoplay(AwesomeSlider);\n\nfunction Slider(){ \nreturn(\n  <div className='slider-main'>\n  <AutoplaySlider\n    fillParent = {true}\n    play={true}\n    mobileTouch ={true}\n    cancelOnInteraction={false} // should stop playing on user interaction\n    interval={6000}\n    // transitionDelay={2000}\n    bullets={false}\n    organicArrows={true}\n  >\n     \n    <div>\n        <img  className=\"slider-image\" src={prosliderpic}></img>\n        <div className='slider-content'>\n            <div className='slider-content-heading'>\n                <h1>Know Where to Invest!</h1>\n            </div>\n            <div className='slider-content-description'>\n                <p>Want to invest but don't know where to? You've come to the right place!</p>\n            </div>\n        </div>\n         \n    </div>\n    \n    <div>\n        <img  className=\"slider-image\" src={algopic}></img>\n        <div className='slider-content'>\n            <div className='slider-content-heading'>\n                <h1>The Best Practices!</h1>\n            </div>\n            <div className='slider-content-description'>\n                    <p>Get access to strategies and practices created by experts!</p>\n                </div>\n        </div>\n    </div>\n    <div>\n    <img  className=\"slider-image\" src={begginerpic}></img>\n        <div className='slider-content'>\n            <div className='slider-content-heading'>\n            <h1>Easy For Everyone!</h1>\n            </div>\n            <div className='slider-content-description'>\n                    <p>A beginner? No problem! Get the predicted data and invest. No technical skills required!</p>\n            </div>\n        </div>\n        \n    </div>\n   \n  </AutoplaySlider>\n  </div>\n);\n}\nexport default Slider","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\PropertyHeader.js",[],"E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\LandingPageHeader.js",[],"E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\AreaSidebarData.js",[],"E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\SidebarData.js",["266"],"import React from 'react';\nimport * as AiIcon from 'react-icons/ai'\nimport * as RiIcon from 'react-icons/ri'\nimport ChangeEmail from './ChangeEmail'\n\nexport const SidebarData = [\n    {\n        title:\"Change Email\",\n        path:\"/ChangeEmail\",\n        icon: <AiIcon.AiOutlineMail/>,\n        cName: 'nav-text'\n    },\n    {\n        title:\"Change Password\",\n        path:\"/ChangePassword\",\n        icon: <RiIcon.RiLockPasswordLine/>,\n        cName: 'nav-text'\n    },\n    {\n        title:\"View History\",\n        path:\"#\",\n        icon: <AiIcon.AiOutlineHistory/>,\n        cName: 'nav-text'\n    },\n    {\n        title:\"Delete Account\",\n        path:\"#\",\n        icon: <RiIcon.RiAccountCircleLine/>,\n        cName: 'nav-text'\n    },\n    {\n        title:\"Logout\",\n        path:\"/\",\n        icon: <RiIcon.RiLogoutBoxLine/>,\n        cName: 'nav-text',\n        // onClick: thisisLogout\n    },\n]","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\HomePlotMenu.js",["267","268"],"import React , {useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport '../StyleSheets/HomePlotMenu.css'\r\nimport PlotChart from './PlotChart'\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n    // backgroundColor: theme.palette.background.paper,\r\n    // backgroundColor: 'black',\r\n  },\r\n  panel:{\r\n    backgroundColor:'white',\r\n\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function SimpleTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [chartData,setChartData] = React.useState({})\r\n  \r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    setChartData({ \r\n      //x labels\r\n      labels:[1,2,3,4,5],//jsonX\r\n      datasets:[{\r\n          label:\"time\",\r\n          fill:false,\r\n          //y labels\r\n          data: [1,3,4,2,6],//jsonY\r\n          backgroundColor:\"lightgreen\",\r\n          barThickness:'50',\r\n          borderColor: \"#98B9AB\"\r\n\r\n      }]\r\n    })\r\n  },[])\r\n  console.log('abhi ')\r\n  return (\r\n    <div className={classes.root}>\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n          <Tab label=\"Houses\" {...a11yProps(0)} />\r\n          <Tab label=\"Plots\" {...a11yProps(1)} />\r\n        </Tabs>\r\n\r\n      <TabPanel value={value} index={0} className={classes.panel}>\r\n        <div className='house-menu'>\r\n          <div className='house-menu-left'>\r\n            <div>\r\n              <h1 style={{color:'black'}}>House Price Calculator</h1>\r\n            </div>\r\n            <div className='house-menu-inputs'>\r\n              <div className='house-menu-inputs-rows'>\r\n                  <div className='house-menu-inputs-row-1'>\r\n                    <TextField size='small' style={{maxWidth:'250px'}} id=\"standard-basic\" label=\"Area Size\" />\r\n                    <div>\r\n                      <select name=\"size\" id=\"size\">\r\n                        <option value=\"Marla\">Marla</option>\r\n                        <option value=\"Kanal\">Kanal</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                      <TextField size='small' id=\"standard-basic\" label=\"Location e.g. F-10\" />\r\n                  </div>\r\n              </div>\r\n              <div className='house-menu-inputs-rows'>\r\n                <TextField type='number' size='small' id=\"standard-basic\" label=\"Bath(s)\" />\r\n                <TextField type='number' size='small' id=\"standard-basic\" label=\"Floor(s)\"  />\r\n              </div>\r\n              <div className='house-menu-inputs-rows'>\r\n                <TextField type='number' size='small' id=\"standard-basic\" label=\"Bed(s)\" />\r\n                <TextField size='small' id=\"standard-basic\" label=\"Built in (Year)\" /> \r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='house-menu-right'>\r\n            <div className='calculate-button'>\r\n              calculate\r\n            </div>\r\n\r\n            <div className='calculated-price'>\r\n              Calculated Price: \r\n              <span>199 Rs.</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1} className={classes.panel}>\r\n        <div>\r\n          <div className='plot-graph'>\r\n            <PlotChart chartData={chartData} style={{ height:'2000px'}}/>\r\n          </div>\r\n          <div className='techinalAnal-table'>\r\n              <table>\r\n                <h1>Technical Analysis</h1>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n                <tr>\r\n                  <td>RSI Calculation</td>\r\n                  <td>Maria Anders</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>On-Balance Volume</td>\r\n                  <td>Francisco Chang</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>MACD Calculation</td>\r\n                  <td>Roland Mendel</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Average Directional Index</td>\r\n                  <td>Helen Bennett</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Distribution Line</td>\r\n                  <td>Yoshi Tannamuri</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Magazzini Alimentari Riuniti</td>\r\n                  <td>Giovanni Rovelli</td>\r\n                </tr>\r\n              </table>\r\n          </div>\r\n\r\n        </div>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n} \r\n\r\n// import React from 'react';\r\n// import Button from \"@material-ui/core/Button\"\r\n\r\n// const Component = () => {\r\n//   return (\r\n//     <div>\r\n//        <Button style={{margin:0}} variant=\"outlined\" color=\"primary\">\r\n//         Primary\r\n//       </Button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Component;","E:\\React Projects\\Firebase\\INVESCO-master\\client\\src\\Components\\PlotChart.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\index.js",["269","270","271"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nimport {createStore, combineReducers, applyMiddleware, compose} from 'redux'\r\nimport { createLogger } from 'redux-logger';\r\nimport {Provider} from 'react-redux'\r\n\r\nconst initialUserState = {\r\n  user: null,\r\n  isAuth: false\r\n}\r\nconst userReducer = (state = initialUserState , action)=>{\r\n  switch(action.type){\r\n      case 'nullUser':\r\n          console.log('user null')\r\n          state={\r\n              ...state,\r\n              user:null,\r\n              isAuth:false    \r\n          }\r\n      case 'setUser':\r\n          state = {\r\n              ...state,\r\n              user: action.payload,\r\n              isAuth: true,\r\n          }\r\n          break\r\n  }\r\n  return state;\r\n}\r\nconst initialCompState = {\r\n  inputText:''\r\n}\r\nconst stockReducer = (state = initialCompState, action) => {\r\n  console.log('ouuttttt')\r\n  switch (action.type) {  \r\n    case 'UPDATE_INPUT':\r\n          state = {\r\n              inputText: action.payload\r\n          };\r\n          break\r\n      default:\r\n        state = initialCompState;\r\n  }\r\n  return state\r\n}\r\n\r\n//personal logger\r\nconst myLogger  = (store) => (next) => (action) =>{\r\n  console.log('logged action: ', action)\r\n  next(action)\r\n}\r\n\r\nconst store =  createStore(\r\n  combineReducers({\r\n      user: userReducer,\r\n      stock: stockReducer\r\n  }),\r\n  {},\r\n  compose(\r\n      applyMiddleware(createLogger()),\r\n  )\r\n  \r\n)\r\n\r\nstore.subscribe(()=>{\r\nconsole.log('store updated!', store.getState())\r\n})\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["272","273"],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\reportWebVitals.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\App.js",["274","275","276"],"import React from 'react';\r\nimport Home from './Home';\r\nimport Signup from './Signup'\r\nimport Login from './Login'\r\nimport './StyleSheets/Home.css';\r\nimport RealEstateMain from './RealEstateMainPage';\r\nimport ChangeEmail from './Components/ChangeEmail';\r\nimport ChangePassword from './Components/ChangePassword';\r\nimport RealEstateAreaSearchBar from './Components/RealEstateAreaSearchBar'\r\nimport { BrowserRouter as Router, Route , Switch} from 'react-router-dom';\r\nimport LandingPage from \"./LandingPage\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport fire from './config/fire'\r\nimport ForgotPassword from './Components/ForgotPassword';\r\nimport StockMainPage from './Components/StockMainPage';\r\nimport HistoricalHooks from './Components/HistoricalHooks'\r\nimport StockTable from './Components/StockTable';\r\nimport DeleteAccount from './Components/DeleteAccount';\r\n// import ProtectedRoute from './ProtectedRoute'\r\n//import Header from './Components/Header'\r\nclass App extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: this.props.user.user,\r\n      isAuth: this.props.user.isAuth\r\n    };\r\n    \r\n    this.authListener = this.authListener.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.authListener();\r\n  }\r\n\r\n  authListener() {\r\n    fire.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        // console.log('asdasdasd')\r\n        this.setState({ user });\r\n        this.props.confirmUserAuth(user)\r\n      } else {\r\n        console.log('here mf')\r\n        // this.setState({ user: null,isAuth:false });\r\n      }\r\n    })\r\n  }\r\n  render(){\r\n    return(\r\n      <div>\r\n      \r\n        <Router> \r\n          <Route path=\"/\" exact component={LandingPage}/>\r\n          <Route path=\"/Home\" exact issAuth={this.props.setisAuth} component={Home}/>\r\n          <Route path=\"/registration\" exact component={Signup}/>\r\n          <Route path=\"/login\" exact component={Login}/>\r\n          <Route path = \"/RealEstatePrediction\" component={RealEstateMain} exact/>\r\n          <Route path = \"/StockPrediction\" component={StockMainPage} exact/>\r\n          <Route path = \"/ChangeEmail\" component={ChangeEmail} exact/>\r\n          {/* <Route path = \"/StockPrediction\" component={HistoricalHooks} exact/> */}\r\n          <Route path = \"/StockTable\" component={StockTable} exact/> \r\n          <Route path = \"/ChangePassword\" component={ChangePassword} exact/>\r\n          <Route path = \"/DeleteAccount\" component={DeleteAccount} exact/>\r\n          <Route path = \"/ForgotPassword\" component={ForgotPassword} exact/>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n  return {\r\n    //initialUserState \r\n    user: state.user,\r\n    // math: state.mathReducer\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n  return {\r\n    confirmUserAuth: (user)=>{\r\n      console.log('in confirm user')\r\n      dispatch({\r\n        type: 'setUser',\r\n        payload: user\r\n      })\r\n    }\r\n    // ,\r\n    // returnNullUser: (user)=>{\r\n    //   console.log('in null user')\r\n    //   dispatch({\r\n    //     type: 'nullUser',\r\n    //     payload: null\r\n    //   })\r\n    // }\r\n  }\r\n\r\n} \r\nexport default connect(mapStateToProps,mapDispatchToProps)(App)","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Signup.js",["277","278","279","280","281","282","283","284"],"import React, { Component } from 'react'\r\nimport { RiThunderstormsFill } from 'react-icons/ri';\r\nimport { Link ,withRouter} from 'react-router-dom';\r\nimport './StyleSheets/Signup.css';\r\nimport fire from './config/fire'\r\nexport class Signup extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            success:false,\r\n            token: '',\r\n            signUpFirstName: '',\r\n            signUpLastName: '',\r\n            signUpEmail: '',\r\n            signUpMobile: '',\r\n            signUpPassword: '',\r\n            signUpConfirmPassword:'',\r\n            fnameError: '',\r\n            lnameError: '',\r\n            emailError: '',\r\n            passwordError: '',\r\n            checked:false       \r\n        }\r\n    }\r\n   \r\n   \r\n    resetInputs = ()=>{\r\n        this.setState({\r\n            isLoading: false,\r\n            token: '',\r\n            signUpError: '',\r\n            signUpFirstName: '',\r\n            signUpLastName: '',\r\n            signUpEmail: '',\r\n            signUpMobile: '',\r\n            signUpPassword: '',\r\n            signUpConfirmPassword: '',\r\n        })\r\n    }\r\n    //adding onChange event for text fields\r\n    onChange = (event) =>{\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n    onChangeCheckbox = () => {\r\n        this.setState({checked: !this.state.checked});\r\n    }\r\n    //pushing route on signup button\r\n    signupButtonPush = () =>{\r\n        if(this.state.success){\r\n            console.log(\"hhhh\",this.props.history)\r\n            this.props.history.push(\"/login\")\r\n        }\r\n        else{\r\n            console.log(\"isme\")\r\n            this.props.history.push(\"/registration\")\r\n        }\r\n    }\r\n    //signup button event call\r\n    onSignup = ()=> {\r\n        const {\r\n            signUpFirstName,\r\n            signUpLastName,\r\n            signUpEmail,\r\n            signUpPassword,\r\n      } = this.state\r\n        if(this.validate()){\r\n            fire.auth().createUserWithEmailAndPassword(signUpEmail, signUpPassword)\r\n          .then((u) => {\r\n            console.log('Successfully Signed Up');\r\n            const user = fire.auth().currentUser\r\n            user.sendEmailVerification().then(()=>{\r\n                if(user.emailVerified){\r\n                    //login the user\r\n                    fire.auth().signInWithEmailAndPassword(signUpEmail, signUpPassword)\r\n                    console.log('login successfull')\r\n                    //pushing to home\r\n                    this.props.history.push('/')\r\n                    //adding first name and last name\r\n                    // const user = fire.auth().currentUser\r\n                    user.updateProfile({\r\n                        displayName: signUpFirstName+ \",\"+ signUpLastName\r\n                    })\r\n                    const dbh = fire.firestore();\r\n                    dbh.collection(\"users\").doc(user.uid).set({\r\n                    firstName:signUpFirstName,\r\n                    lastName:signUpLastName,\r\n                    email:signUpEmail,\r\n                    // isVerified:user.emailVerified\r\n                    });\r\n                    console.log('displayName: ', signUpFirstName, \" , \", signUpLastName)\r\n                }\r\n                else{\r\n                    alert('An email verification link has been sent to you. Check your email.')\r\n                    \r\n                    this.resetInputs()\r\n                    this.props.history.push('/login')\r\n                }\r\n            })\r\n            \r\n          })\r\n          .catch((err) => {\r\n            console.log(err.toString());\r\n            alert(err.toString())\r\n          })\r\n        }\r\n        \r\n      }\r\n\r\n    validate = (event)=>{\r\n        let fnameError = '';\r\n        let lnameError = '';\r\n        let emailError = '';\r\n        let passwordError = '';\r\n        let checkedError = '';\r\n        const emailRegex = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        const nameRegex = new RegExp(/^[a-z ,.'-]+$/i)\r\n        const passRegex = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/i)\r\n        \r\n        if(!nameRegex.test(this.state.signUpFirstName)){\r\n            fnameError = 'Enter Valid First Name'\r\n        }\r\n\r\n        if(!nameRegex.test(this.state.signUpLastName)){\r\n            lnameError = 'Enter Valid Last Name'\r\n        }\r\n\r\n        if(!emailRegex.test(this.state.signUpEmail)){\r\n            emailError = 'Enter Valid Email'\r\n        }\r\n\r\n        // if(!this.state.signUpEmail.includes('@')){\r\n        //     emailError = 'Invalid Email'\r\n        // }\r\n        if(!passRegex.test(this.state.signUpPassword)){\r\n            passwordError = 'Password must have minimum 8 characters, atleast one letter and one number'\r\n        }\r\n        if(this.state.signUpPassword!=this.state.signUpConfirmPassword){\r\n            passwordError = \"Passwords don't Match\"\r\n        }\r\n        if(emailError || fnameError || lnameError || passwordError){\r\n            this.setState({\r\n                emailError,\r\n                fnameError,\r\n                lnameError,\r\n                passwordError,\r\n                // signUpEmail:''\r\n            })\r\n            //this.focusInput.focus()\r\n            return false;\r\n        }\r\n        return true\r\n    }\r\n    render(props) {\r\n        const buttonStyle = {\r\n            pointerEvents: this.state.checked ? 'all': 'none',\r\n        }\r\n        console.log(this.state)\r\n        const {isLoading,\r\n            token,\r\n            signUpFirstName,\r\n            signUpLastName,\r\n            signUpEmail,\r\n            signUpPassword,\r\n            signUpConfirmPassword,\r\n            checked,\r\n        }   = this.state;\r\n\r\n        // if(isLoading){\r\n        //     return(<div><p>Loading...</p></div>)\r\n        // }\r\n        // if(!token){\r\n        //     return(<div><p>token not set</p></div>)\r\n        // }\r\n        // const user = fire.auth().currentUser\r\n        // if(user.emailVerified){\r\n            return (\r\n                <div class='signup-main'>\r\n                    <form class=\"signupForm\">\r\n                        \r\n                        <h1>Welcome</h1>\r\n                                    \r\n                        <div class='signupDataRow1'>\r\n                            <div class='signupDataRow1Col1'>\r\n                                <label for=\"fname\">First Name</label>\r\n                                <input type=\"text\" id=\"fname\" name=\"signUpFirstName\" value={signUpFirstName} onChange={this.onChange.bind(this)} required></input>\r\n                                <span className=\"error-display\">{this.state.fnameError}</span>\r\n                            </div>\r\n                            <div class='signupDataRow1Col2'>\r\n                                <label for=\"lname\">Last Name</label>\r\n                                <input type=\"text\" id=\"lname\" name=\"signUpLastName\" value={signUpLastName} onChange={this.onChange} ></input>\r\n                                <span className=\"error-display\">{this.state.lnameError}</span>\r\n                            </div>\r\n                        </div>\r\n        \r\n                        <div class='signupDataRow2'>\r\n                            <div class='signupDataRow2Col2'>\r\n                                <label for=\"email\">Email</label>\r\n                                <input ref={focusInput =>{this.signUpEmail = focusInput}} type=\"email\" id=\"email\" name=\"signUpEmail\" value={signUpEmail} onChange={this.onChange} required></input>\r\n                                <span className=\"error-display\">{this.state.emailError}</span>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div class='signupDataRow3'>\r\n                            <div class='signupDataRow3Col1'>\r\n                                <label for=\"password\">Password</label>\r\n                                <input type=\"password\" id=\"password\" name=\"signUpPassword\" value={signUpPassword} onChange={this.onChange} required></input>\r\n                                <span className=\"error-display\">{this.state.passwordError}</span>\r\n                            </div>\r\n                            <div class='signupDataRow3Col2'>\r\n                                <label for=\"cpassword\">Confirm Password</label>\r\n                                <input type=\"password\" id=\"cpassword\" name=\"signUpConfirmPassword\" value={signUpConfirmPassword} onChange={this.onChange} ></input> \r\n                            </div>\r\n                        </div>\r\n                        <div class=\"hel\">\r\n                        <input type='checkbox' id='termsCond' defaultChecked={this.state.checked} value={checked} onChange={this.onChangeCheckbox} required></input>\r\n                        <label class=\"terms\" for='termsCond'>Do you agree to our <a id=\"termsLink\" href=\"#\">Terms</a> and <a id=\"ppLink\" href=\"#\">Privacy Policy</a>?</label>                    \r\n                        </div>\r\n                        <div class=\"button\" id=\"button-signup\" style={buttonStyle} onClick={this.onSignup}>\r\n                            <div id=\"circle\"></div>\r\n                            <a href=\"#\">SIGNUP</a>\r\n                        </div>\r\n        \r\n                        <div class=\"logLink\">\r\n                            <Link id=\"loginLink\" to=\"/login\">Already have an account?</Link>\r\n                        </div>\r\n                        {/* check */}\r\n                    </form>\r\n                </div>\r\n                )\r\n        // }\r\n        // else{\r\n        //     <div>\r\n        //         verify email\r\n        //     </div>\r\n        // }\r\n        \r\n    }\r\n}\r\n\r\nexport default withRouter(Signup)\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Home.js",["285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306"],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Login.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\RealEstateMainPage.js",["307"],"import React from 'react';\r\nimport PropertyHeader from './Components/PropertyHeader'\r\nimport './StyleSheets/Header.css'\r\nimport './StyleSheets/RealEstateMainPage.css'\r\nimport RealEstateAreaSearchBar from './Components/RealEstateAreaSearchBar'\r\nimport HomePlotMenu from './Components/HomePlotMenu'\r\nimport { connect } from 'react-redux';\r\nclass RealEstateMain extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div><PropertyHeader/></div>\r\n                <div className=\"realestate-main\">\r\n                    <h1>REAL ESTATE PRICE PREDICTOR</h1>\r\n                </div>\r\n                {/* <RealEstateAreaSearchBar/> */}\r\n                <HomePlotMenu/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n      //initialUserState \r\n      user: state.user,\r\n      // math: state.mathReducer\r\n    }\r\n  }\r\nexport default connect(mapStateToProps)(RealEstateMain)\r\n// export default RealEstateMain;","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\LandingPage.js",["308","309"],"import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport LandingPageHeader from './Components/LandingPageHeader'\r\nimport Footer from './Components/Footer'\r\nimport './StyleSheets/LandingPage.css'\r\nimport logo from \"./StyleSheets/images/gra.jpg\" \r\nimport WOW from 'wowjs';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport femaleImg1 from './StyleSheets/images/female-avatar-12-774634.png'\r\nimport femaleImg2 from './StyleSheets/images/female-avatar-2.png'\r\nimport maleImg1 from './StyleSheets/images/male-avatar-1.png'\r\nimport maleImg2 from './StyleSheets/images/male-avatar-2.png'\r\nimport * as RiIcon from 'react-icons/ri'\r\nimport * as GiIcon from 'react-icons/gi'\r\nimport * as FaIcon from 'react-icons/fa'\r\nconst useStyles = ((theme) => ({\r\n    large: {\r\n      width: theme.spacing(9),\r\n      height: theme.spacing(9),\r\n    },\r\n  }));\r\n  \r\nclass LandingPage extends React.Component{\r\n    onClickLogin = ()=>{\r\n        \r\n    }\r\n    componentDidMount(){\r\n        new WOW.WOW().init();\r\n    }\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n            <div className=\"landing-page-main\">\r\n                <div>\r\n                    <LandingPageHeader/>\r\n                </div>\r\n                <div className=\"landing-heading\">\r\n                    <div class='bg-curve'>\r\n                        <div>\r\n                            <h1>WELCOME TO INVESCO</h1>\r\n                            <p className=\"intro-para\">Want to invest but don't know where to? You've come to the right place!</p> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"landing-info\">\r\n                    <div className=\"landing-info-box wow bounceInLeft\" data-wow-duration=\"1.8s\">\r\n                        <h2>Easy For Everyone</h2>\r\n                        <div className=\"para\">\r\n                            <p>No technical skills required! No experience needed in stock or property investment. INVESCO provides access to strategies created by experts and all prices are predicted based on those strategies</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"landing-info-box wow bounceInRight\" data-wow-duration=\"1.8s\">\r\n                        <h2>Best For Beginners</h2>\r\n                        <div className=\"para\">\r\n                            <p>With the aid of the investment recommendation, INVESCO uses the already predicted data and provides an investment recommendation making it really easy for beginners to invest.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"landing-content\">\r\n                    <div className=\"graph-image\">\r\n                        <img alt=\"image\" src={logo} />\r\n                    </div>\r\n                    <div className='landing-content-stuff'>\r\n                        <div className='landing-content-heading'>\r\n                            <h1> What we provide</h1>\r\n                        </div>\r\n                        <div className=\"intro\">\r\n                            <div className='intro-timeline'>\r\n                                <div className='intro-timeline-box'>\r\n                                    <div className='intro-timeline-box-circle'>\r\n                                        <RiIcon.RiStockFill/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='intro-timeline-box-line'>\r\n\r\n                                </div>\r\n                                <div className='intro-timeline-box'>\r\n                                    <div className='intro-timeline-box-circle'>\r\n                                        <GiIcon.GiHouse/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='intro-timeline-box-line'>\r\n                                                                    \r\n                                </div>\r\n                                <div className='intro-timeline-box'>\r\n                                    <div className='intro-timeline-box-circle'>\r\n                                        <FaIcon.FaHandHoldingUsd/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='intro-timeline-content'>\r\n                                <div>\r\n                                    <h3>Stock Price Predictor</h3>\r\n                                    <p>Get predicted stock prices for the companies in the KSE100 index. Change your models and decide when and where to invest! </p>\r\n                                </div>\r\n                                <div>\r\n                                    <h3>Real Estate Price Predictor</h3>\r\n                                    <p>Looking for property investment? Our system provides predicted real estate prices in Islamabad.</p>    \r\n                                </div>\r\n                                <div>\r\n                                    <h3>Investment Recommendation</h3>\r\n                                    <p>Don't know where to invest? Get a system recommendation and make your life easy!</p>\r\n                                </div>\r\n                            </div>   \r\n                        </div>\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n                <div className='spacer'>\r\n                    <span></span>\r\n                </div>\r\n                <div className='detail-row'>\r\n                    <div className='detail-box'>\r\n                        <p className='numbers'>2K+</p>\r\n                        <p className='numbers-label'>Global Users</p>\r\n                    </div>\r\n                    <div className='detail-box'>\r\n                        <p className='numbers'>100+</p>\r\n                        <p className='numbers-label'>Areas</p>\r\n                    </div>\r\n                    <div className='detail-box'>\r\n                        <p className='numbers'>99+</p>\r\n                        <p className='numbers-label'>Stock Companies</p>\r\n                    </div>\r\n\r\n                    {/* <div className='numbers'>\r\n                    <span class=\"animate\" id='digit1'>1 2 3 4 5 6 7 8 9 0</span>\r\n                    </div>\r\n                    <div className='numbers'>\r\n                    <span class=\"animate\" id='digit2'>1 2 3 4 5 6 7 8 9 0</span>\r\n                    </div>\r\n                    <div className='numbers'>\r\n                    <span class=\"animate\" id='digit3'>1 2 3 4 5 6 7 8 9 0</span>\r\n                    </div> */}\r\n                </div>\r\n                <div className='testimonials'>\r\n                    <div className='testimonials-intro'>\r\n                        <h2><span>Testimonials</span></h2>\r\n                        <h3>What Our Clients Say</h3>\r\n                    </div>\r\n                    <div class=\"slider\">\r\n                        <input type=\"radio\" name=\"slider\" title=\"slide1\" class=\"slider__nav\"/>\r\n                        <input type=\"radio\" name=\"slider\" title=\"slide2\" class=\"slider__nav\"/>\r\n                        <input type=\"radio\" name=\"slider\" title=\"slide3\" class=\"slider__nav\"/>\r\n                        <input type=\"radio\" name=\"slider\" title=\"slide4\" class=\"slider__nav\"/>\r\n                        <div class=\"slider__inner\">\r\n                            <div class=\"slider__contents\">\r\n                            <Avatar alt=\"Justin Sharp\" src={maleImg2} className={classes.large}/>\r\n                            <h2 class=\"slider__caption\">Justin Sharp</h2>\r\n                            <p class=\"slider__txt\">\"You won't regret it. I have gotten at least 50 times the value from investment.\"</p>\r\n                            </div>\r\n                            <div class=\"slider__contents\">\r\n                            <Avatar alt=\"Travis Howard\" src={maleImg1} className={classes.large}/>\r\n      \r\n                            <h2 class=\"slider__caption\">Travis Howard</h2>\r\n                            <p class=\"slider__txt\">\"INVESCO has got everything I need. Best. Plaform. Ever! It did exactly what you said it does. I would also like to say thank you to all your staff.\"</p>\r\n                            </div>\r\n                            <div class=\"slider__contents\">\r\n                            <Avatar alt=\"Cindy Joe\" src={femaleImg1} className={classes.large}/>\r\n                            <h2 class=\"slider__caption\">Cindy Joe</h2>\r\n                            <p class=\"slider__txt\">\"Keep up the excellent work. I just can't get enough of this!\"</p>\r\n                            </div>\r\n                            <div class=\"slider__contents\">\r\n                            <Avatar alt=\"Hannah Baker\" src={femaleImg2} className={classes.large}/>\r\n                            <h2 class=\"slider__caption\">Hannah Baker</h2>\r\n                            <p class=\"slider__txt\">\"Absolutely wonderful! This has impressed me on multiple levels. Thanks INVESCO!\"</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                   \r\n                </div>\r\n                <div>\r\n                    <Footer/>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(LandingPage);","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\ChangeEmail.js",["310","311","312"],"import React, { Component } from 'react'\r\nimport '../StyleSheets/ChangeEmail.css'\r\nimport PropertyHeader from './PropertyHeader'\r\nimport fire from '../config/fire'\r\nimport { Button, Popover } from '@material-ui/core';\r\nexport class ChangeEmail extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            prevEmail: '',\r\n            Epassword: '',\r\n            newEmail:'',\r\n            msg:'',\r\n            errMsg:'',\r\n            verMsg:''\r\n        }\r\n    }\r\n    onChange = (event) =>{\r\n        const target = event.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n            this.setState({\r\n                [name]:value\r\n            })\r\n        }\r\n    changeEmailVerify = () => {\r\n        const user = fire.auth().currentUser\r\n        const {prevEmail,newEmail,Epassword} = this.state\r\n        user.reauthenticateWithCredential(prevEmail,Epassword).then(()=>{\r\n            console.log('reauthenticated')\r\n        }).catch((e)=>{\r\n            console.log('error',e)\r\n        })\r\n        // user.verifyBeforeUpdateEmail(newEmail)\r\n    }\r\n\r\n    changeEmail = ()=>{\r\n        const {prevEmail,newEmail,Epassword} = this.state\r\n        const user = fire.auth().currentUser;\r\n        if(this.validate()){\r\n            fire.auth().signInWithEmailAndPassword(prevEmail,Epassword)\r\n        .then(()=>{\r\n            const cUser = fire.auth().currentUser\r\n            if(user == cUser){\r\n                console.log('same users')\r\n                cUser.updateEmail(newEmail)\r\n                .then(()=>{\r\n                    this.setState({\r\n                        msg: 'Email Updated Successfully!',\r\n                        errMsg:''\r\n                    },\r\n                    ()=>{\r\n                        cUser.sendEmailVerification().then(()=>{\r\n                            this.setState({\r\n                                ...this.state,\r\n                                errMsg:'',\r\n                                verMsg:'Verify Your Email Before You Login Next Time.'\r\n                            })\r\n                        },()=>{\r\n                            this.resetInputs()\r\n\r\n                            setTimeout(()=>{\r\n                            },3000)\r\n                        })\r\n                        \r\n                    })\r\n                }).catch((e)=>{\r\n                    this.setState({\r\n                        errMsg:e.message,\r\n                        msg:''\r\n                    })\r\n                })\r\n            }else{\r\n                // console.log('not same users')\r\n                // this.setState({\r\n                //     errMsg:'Invalid Email or Password',\r\n                //     msg:''\r\n                // })\r\n                alert('For Security Purposes we are logging you out')\r\n                fire.auth().signOut();\r\n                this.props.history.push('/login')\r\n            }\r\n                            \r\n        }).catch((e)=>{\r\n            \r\n            this.setState({\r\n                errMsg:'Invalid Email or Password',\r\n                msg:''\r\n            })\r\n        })\r\n        }\r\n        \r\n    }\r\n    resetInputs = ()=>{\r\n        this.setState({\r\n            newEmail:'',\r\n            Epassword:'',\r\n            prevEmail:'',\r\n            msg:'',\r\n            errMsg:'',\r\n        })\r\n    }\r\n    validate = ()=>{\r\n        const {newEmail} = this.state\r\n        const emailRegex = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        if(!emailRegex.test(newEmail)){\r\n            this.setState({\r\n                errMsg : 'Enter a Valid New Email'\r\n            })\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    render() {\r\n        console.log(this.state)\r\n        return (\r\n            <div>\r\n                <PropertyHeader/>\r\n                <div>\r\n                    <div className=\"change-field-heading\">\r\n                        <h1>Change Email</h1>\r\n                    </div>\r\n                    <div className=\"change-field-inputs\">\r\n                        <div className=\"change-field-inputs-content\">\r\n                            <label for=\"prevEmail\">Enter Previous Email</label>\r\n                            <input type=\"email\" name=\"prevEmail\" value = {this.state.prevEmail} id=\"prevEmail\" onChange={this.onChange} required></input>\r\n                        </div>\r\n                        <div className=\"change-field-inputs-content\">    \r\n                            <label  for=\"Epassword\">Enter Password</label>\r\n                            <input type=\"password\" name=\"Epassword\" value = {this.state.Epassword} id=\"Epassword\" onChange={this.onChange} required></input>\r\n                        </div>\r\n                        {/* <div class=\"change-field-button\" onClick = {this.changeEmailVerify}>\r\n                                <p>Verify</p>\r\n                            </div> */}\r\n                        <div>    \r\n                            <div className=\"change-field-inputs-content\"> \r\n                                <label for=\"newEmail\">Enter New Email</label>\r\n                                <input type=\"email\" name=\"newEmail\" value = {this.state.newEmail} id=\"newEmail\" onChange={this.onChange} required></input>\r\n                            </div>\r\n                            <div className=\"change-field-inputs-content\">\r\n                            <Button variant=\"contained\" color=\"primary\" onClick = {this.changeEmail}>\r\n                                Done\r\n                            </Button>\r\n                            </div>\r\n                            {/* <div class=\"change-field-button\" onClick = {this.changeEmail}>\r\n                                <p>Done</p>\r\n                            </div> */}\r\n                        </div>\r\n                        <div className='msg-display'>\r\n                            <span style={{color:'green',fontWeight:'bold',fontSize:'18px'}}>{this.state.msg}</span>\r\n                            <br/>\r\n                            <span style={{color:'green',fontWeight:'bold',fontSize:'18px'}}>{this.state.verMsg}</span>\r\n                            <span style={{color:'red',fontWeight:'bold',fontSize:'18px'}}>{this.state.errMsg}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChangeEmail\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\ChangePassword.js",["313","314","315"],"import React, { Component } from 'react'\r\nimport '../StyleSheets/ChangeEmail.css'\r\nimport PropertyHeader from './PropertyHeader'\r\nimport fire from '../config/fire'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = ((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\nclass ChangePassword extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email:'',\r\n            prevPassword: '',\r\n            newPassword:'',\r\n            cNewPassword:'',\r\n            msg:'',\r\n            errMsg:'',\r\n            modalStyle:this.getModalStyle(),\r\n            open:false\r\n        }\r\n    }\r\n    onChange = (event) =>{\r\n        const target = event.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n            this.setState({\r\n                [name]:value\r\n            })\r\n        }\r\n    changePasswordVerify = () => {\r\n\r\n    }\r\n    rand=()=> {\r\n        return Math.round(Math.random() * 20) - 10;\r\n      }\r\n    getModalStyle = ()=> {\r\n        const top = 50 + this.rand();\r\n        const left = 50 + this.rand();\r\n      \r\n        return {\r\n          top: `${top}%`,\r\n          left: `${left}%`,\r\n          transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n      }\r\n    changePassword = () => {\r\n        const {email,prevPassword,newPassword,cNewPassword} = this.state;\r\n        const user = fire.auth().currentUser;\r\n        if(this.validate()){\r\n            fire.auth().signInWithEmailAndPassword(email,prevPassword)\r\n            .then(()=>{\r\n                const cUser = fire.auth().currentUser\r\n                if(user == cUser){\r\n                    console.log('same users')\r\n                    cUser.updatePassword(newPassword)\r\n                    .then(()=>{\r\n                        this.setState({\r\n                            msg: 'Password Updated Successfully!',\r\n                            errMsg:''\r\n                        },\r\n                        ()=>{\r\n                            this.resetInputs()\r\n                            setTimeout(()=>{\r\n                            },3000)\r\n                        })\r\n                    }).catch((e)=>{\r\n                        this.setState({\r\n                            errMsg:e.message,\r\n                            msg:''\r\n                        })\r\n                    })\r\n                }else{\r\n                    this.setState({\r\n                        errMsg:'Invalid Email or Password',\r\n                        msg:''\r\n                    })\r\n                }\r\n            }).catch((e)=>{\r\n                this.setState({\r\n                    msg:'',\r\n                    errMsg:'Invalid Email or Password'\r\n                })\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    validate = (event)=>{\r\n        const emailRegex = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        const passRegex = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/i)\r\n        if(!emailRegex.test(this.state.email)){\r\n            this.setState({\r\n                errMsg:'Enter Valid Email'\r\n            })\r\n            return false\r\n        }\r\n        if(!passRegex.test(this.state.newPassword)){\r\n            this.setState({\r\n                msg:'',\r\n                errMsg:'Password must have minimum 8 characters, atleast one letter and one number'\r\n            })\r\n            return false\r\n        }\r\n        if(this.state.newPassword!=this.state.cNewPassword){\r\n            this.setState({\r\n                msg:'',\r\n                errMsg:\"Passwords don't Match\"\r\n            }) \r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    resetInputs=()=>{\r\n        this.setState({\r\n            newPassword:'',\r\n            cNewPassword:'',\r\n            email:'',\r\n            prevPassword:''\r\n        })\r\n    }\r\n    handleOpen = ()=>{\r\n        this.setState({\r\n            open: true\r\n        })\r\n    }\r\n    handleClose = ()=>{\r\n        this.setState({\r\n            open: false\r\n        })\r\n    }\r\n    body = (\r\n        <div style={{top:50,left:50}}className={this.props.classes.paper}>\r\n          <h2 id=\"simple-modal-title\">Password Updated Successfully</h2>\r\n          <p style={{color: 'black'}} id=\"simple-modal-description\">\r\n            Your password was updated.\r\n          </p>\r\n          \r\n        </div>\r\n      );\r\n    render() {\r\n        return (\r\n            <div>\r\n                <PropertyHeader/>\r\n                <div>\r\n                    <div className=\"change-field-heading\">\r\n                        <h1>Change Password</h1>\r\n                    </div>\r\n                    <div className=\"change-field-inputs\">\r\n                    <div className=\"change-field-inputs-content\">\r\n                            <label for=\"email\">Enter Email</label>\r\n                            <input type=\"email\" name=\"email\" value = {this.state.email} id=\"email\" onChange={this.onChange} required></input>\r\n                        </div>\r\n                        <div className=\"change-field-inputs-content\">\r\n                            <label for=\"prevPassword\">Enter Previous Password</label>\r\n                            <input type=\"password\" name=\"prevPassword\" value = {this.state.prevPassword} id=\"prevPassword\" onChange={this.onChange} required></input>\r\n                        </div>\r\n                        {/* <div class=\"change-field-button\" onClick = {this.changePasswordVerify}>\r\n                                <p>Verify</p>\r\n                            </div> */}\r\n                        <div>\r\n                            <div className=\"change-field-inputs-content\"> \r\n                                <label for=\"newPassword\">Enter New Password</label>\r\n                                <input type=\"password\" name=\"newPassword\" value = {this.state.newPassword} id=\"newPassword\" onChange={this.onChange} required></input>\r\n                            </div>\r\n                            <div className=\"change-field-inputs-content\">\r\n                                <label for=\"cNewPassword\">Confirm Password</label>\r\n                                <input type=\"password\" name=\"cNewPassword\" value = {this.state.cNewPassword} id=\"cNewPassword\" onChange={this.onChange} required></input>\r\n                            </div>    \r\n                            <div className=\"change-field-inputs-content\">\r\n                                <Button variant=\"contained\" color=\"primary\" onClick = {this.changePassword}>\r\n                                    Done\r\n                                </Button>\r\n                            </div>\r\n                            {/* <div class=\"change-field-button\" onClick = {this.changePassword}>\r\n                                    <p>Done</p>\r\n                            </div> */}\r\n                            \r\n                        </div>\r\n                        <div className='msg-display'>\r\n                            <span style={{color:'green',fontWeight:'bold',fontSize:'18px'}}>{this.state.msg}</span>\r\n                            <span style={{color:'red',fontWeight:'bold',fontSize:'18px'}}>{this.state.errMsg}</span>\r\n                        </div>\r\n                    </div>\r\n                    <Modal\r\n                        open={this.state.open}\r\n                        onClose={this.handleClose}\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                    >\r\n                        {this.body}\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(ChangePassword)\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\RealEstateAreaSearchBar.js",["316","317"],"import React, { Component } from 'react'\r\nimport {AreaSidebarData} from './AreaSidebarData'\r\nimport {Link} from 'react-router-dom'\r\nimport '../StyleSheets/AreaSidebar.css'\r\nimport * as FaIcon from 'react-icons/fa'\r\nexport class RealEstateAreaSearchBar extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            showSearchbar:false,\r\n            searchFeild: '',\r\n        }\r\n    }\r\n\r\n    showSearchSidebar = () =>{\r\n        this.setState({\r\n            showSearchbar:!this.state.showSearchbar\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const buttonStyle = {\r\n            display : this.state.showSearchbar ? 'none':'block',\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"area-button\" id=\"areaButton\" style={buttonStyle} onClick={this.showSearchSidebar}>\r\n                    <Link to=\"#\" className=\"area-bars\">\r\n                            <FaIcon.FaBars/>\r\n                            <span>View Areas</span>\r\n                    </Link>\r\n                </div>\r\n                <nav className= {this.state.showSearchbar ? \"area-nav active\": 'area-nav'}>\r\n                    \r\n                    <ul className= 'area-nav-item-holder' >\r\n                        <li className='area-toggle' onClick={this.showSearchSidebar}>\r\n                            <Link t0=\"#\" className=\"area-bars\">\r\n                                <FaIcon.FaBars/>\r\n                                <span>View Areas</span>\r\n                            </Link>\r\n                            \r\n                        </li>\r\n                        <input \r\n                            type=\"Search\" \r\n                            className='search-bar'\r\n                            placeholder=\"Search..\" \r\n                            onChange={(e)=>{\r\n                                this.setState({\r\n                                    searchFeild: e.target.value\r\n                                })\r\n                            }}\r\n                        >\r\n                        </input>\r\n                        {\r\n                            AreaSidebarData.filter((val)=>{\r\n                                if(this.state.searchFeild == ''){\r\n                                    return val\r\n                                }\r\n                                else if(val.title.toLowerCase().includes(this.state.searchFeild.toLowerCase())){\r\n                                    return val\r\n                                }\r\n                            }).map((index , id)=>{\r\n                                return(\r\n                                    <li key={id} className={index.cName}>\r\n                                        <Link to={index.path}>\r\n                                            <span className='span-text'>{index.title}</span>\r\n                                        </Link>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RealEstateAreaSearchBar\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\config\\fire.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Header.js",["318"],"import React from 'react';\r\nimport '../StyleSheets/Header.css';\r\nimport {RiUserSettingsFill} from 'react-icons/ri';\r\nimport { Link } from 'react-router-dom';\r\nimport fire from '../config/fire'\r\nimport * as RiIcon from 'react-icons/ri'\r\nimport {BiArrowBack} from 'react-icons/bi'\r\nimport {SidebarData} from './SidebarData'\r\n// import Popover from 'react-awesome-popover'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport clsx from 'clsx';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst useStyles = ()=>({\r\n    list: {\r\n      width: 10,\r\n    },\r\n    fullList: {\r\n      width: '0',\r\n    },\r\n  });\r\nclass Header extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            sidebar:false,\r\n            homescreen:false,\r\n            right:false\r\n        }\r\n        console.log(\"qwe\",this.state.homescreen)\r\n    }\r\n    toggleDrawer = (anchor, open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n          return;\r\n        }\r\n    \r\n        this.setState({ ...this.state, [anchor]: open });\r\n      };\r\n\r\n    showSideBar= ()=>{\r\n        this.setState({\r\n            sidebar:!this.state.sidebar,\r\n            homescreen:!this.state.homescreen\r\n        })\r\n        // this.props.checkSide(this.state.sidebar)\r\n        console.log('in header sidebar', this.state.sidebar)\r\n        this.props.data(this.state.homescreen)\r\n        this.props.dataSide(this.state.sidebar)\r\n    }\r\n    \r\n\r\n    logout() {\r\n        fire.auth().signOut();\r\n        console.log('you are logged out')\r\n    }\r\n\r\n    list = (anchor) => (\r\n        <div\r\n          className = 'asd'\r\n          role=\"presentation\"\r\n          onClick={this.toggleDrawer(anchor, false)}\r\n          onKeyDown={this.toggleDrawer(anchor, false)}\r\n        >\r\n          <List>\r\n          \r\n            {['Change Email', 'Change Password', 'View History', 'Delete Account'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                 \r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n             \r\n            ))}\r\n             \r\n          </List>\r\n          <Divider />\r\n         \r\n        </div>\r\n      );\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n               <ul className=\"topbar\">\r\n                   <li><Link to=\"/Home\">Home</Link></li>\r\n                   <li><Link to=\"/news\">News</Link></li>\r\n                   <li><Link to=\"/contact\">Contact</Link></li>\r\n                   <li><Link to=\"/\" onClick={this.logout}><RiIcon.RiLogoutBoxLine size={29}/></Link></li> \r\n                   <li onClick={this.toggleDrawer('right',true)}><Link to=\"#\"><RiUserSettingsFill size='30px' color=\"white\" /></Link></li>\r\n               </ul>\r\n\r\n               {/* <nav className={this.state.sidebar ? 'nav-menu active': 'nav-menu'}>\r\n                    <ul className='nav-menu-items' onClick={this.showSideBar}>\r\n                        <li className='navbar-toggle'>\r\n                            <Link to=\"#\" className=\"menu-bars\">\r\n                                <div id=\"back-arrow\"><BiArrowBack size={25} /></div>\r\n                                \r\n                                <span>User Account</span>\r\n                            </Link>\r\n                        </li>\r\n                        {\r\n                            SidebarData.map((item,  index)=>{\r\n                                return(\r\n                                    <li key={index} className={item.cName}>\r\n                                        <Link to={item.path}>\r\n                                            {item.icon}\r\n                                            <span>{item.title}</span>\r\n                                        </Link>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n               </nav> */}\r\n                    \r\n                        {['right'].map((anchor) => (\r\n                            <React.Fragment key={anchor}>\r\n                            <Button onClick={this.toggleDrawer(anchor, true)}>{anchor}</Button>\r\n                            <SwipeableDrawer\r\n                                anchor={anchor}\r\n                                open={this.state[anchor]}\r\n                                onClose={this.toggleDrawer(anchor, false)}\r\n                                onOpen={this.toggleDrawer(anchor, true)}\r\n                            >\r\n                                <div>\r\n                                    <div style={{textAlign:'center', fontSize:'25px', marginBottom:'10px',display:'flex',flexDirection:'row', justifyContent:'space-evenly', marginTop:'10px'}}>\r\n                                    <div>\r\n                                    <BiArrowBack style={{marginTop:'2',cursor:'pointer'}} size={30} onClick={this.toggleDrawer(anchor,false)}/>\r\n                                    </div>\r\n                                    <div>\r\n                                    Account Settings \r\n                                    </div>\r\n                                       \r\n                                    </div>\r\n                                {SidebarData.map((item,  index)=>{\r\n                                return(\r\n                                    <li key={index} className={item.cName}>\r\n                                        <Link to={item.path}>\r\n                                            {item.icon}\r\n                                            <span>{item.title}</span>\r\n                                        </Link>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                                </div>\r\n                            </SwipeableDrawer>\r\n                            </React.Fragment>\r\n                        ))}\r\n                        \r\n            </div>\r\n        );\r\n    \r\n    }\r\n}\r\nexport default withStyles(useStyles)(Header);","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Footer.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\Slider.js",["319","320","321","322"],"import AwesomeSlider from 'react-awesome-slider';\r\nimport withAutoplay from 'react-awesome-slider/dist/autoplay';\r\nimport 'react-awesome-slider/dist/styles.css';\r\nimport stockpic from '../StyleSheets/images/business-finance-terms-and-definitions-1-2.jpg'\r\n// import begginerpic from 'C:/Users/Faian/invvesco/client/src/StyleSheets/images/begginer.jpg'\r\nimport begginerpic from '../StyleSheets/images/easy.jpg'\r\nimport prosliderpic from '../StyleSheets/images/propertySlider.jpg'\r\nimport algopic from '../StyleSheets/images/algo.jpg'\r\nimport '../StyleSheets/Slider.css'\r\nconst AutoplaySlider = withAutoplay(AwesomeSlider);\r\n\r\nfunction Slider(){ \r\nreturn(\r\n  <div className='slider-main'>\r\n  <AutoplaySlider\r\n    fillParent = {true}\r\n    play={true}\r\n    mobileTouch ={true}\r\n    cancelOnInteraction={false} // should stop playing on user interaction\r\n    interval={6000}\r\n    // transitionDelay={2000}\r\n    bullets={false}\r\n    organicArrows={true}\r\n  >\r\n     \r\n    <div>\r\n        <img  className=\"slider-image\" src={prosliderpic}></img>\r\n        <div className='slider-content'>\r\n            <div className='slider-content-heading'>\r\n                <h1>Know Where to Invest!</h1>\r\n            </div>\r\n            <div className='slider-content-description'>\r\n                <p>Want to invest but don't know where to? You've come to the right place!</p>\r\n            </div>\r\n        </div>\r\n         \r\n    </div>\r\n    \r\n    <div>\r\n        <img  className=\"slider-image\" src={algopic}></img>\r\n        <div className='slider-content'>\r\n            <div className='slider-content-heading'>\r\n                <h1>The Best Practices!</h1>\r\n            </div>\r\n            <div className='slider-content-description'>\r\n                    <p>Get access to strategies and practices created by experts!</p>\r\n                </div>\r\n        </div>\r\n    </div>\r\n    <div>\r\n    <img  className=\"slider-image\" src={begginerpic}></img>\r\n        <div className='slider-content'>\r\n            <div className='slider-content-heading'>\r\n            <h1>Easy For Everyone!</h1>\r\n            </div>\r\n            <div className='slider-content-description'>\r\n                    <p>A beginner? No problem! Get the predicted data and invest. No technical skills required!</p>\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n   \r\n  </AutoplaySlider>\r\n  </div>\r\n);\r\n}\r\nexport default Slider","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PropertyHeader.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\LandingPageHeader.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\HomePlotMenu.js",["323"],"import React , {useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport '../StyleSheets/HomePlotMenu.css'\r\nimport PlotChart from './PlotChart'\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  \r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    '& > *': {\r\n      // margin: theme.spacing(1),\r\n    },\r\n    // backgroundColor: theme.palette.background.paper,\r\n    // backgroundColor: 'black',\r\n  },\r\n  panel:{\r\n    backgroundColor:'white',\r\n\r\n  },\r\n}));\r\n\r\n\r\n function SimpleTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [chartData,setChartData] = React.useState({})\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    setChartData({ \r\n      //x labels\r\n      labels:[1,2,3,4,5],//jsonX\r\n      datasets:[{\r\n          label:\"time\",\r\n          fill:false,\r\n          //y labels\r\n          data: [1,3,4,2,6],//jsonY\r\n          backgroundColor:\"lightgreen\",\r\n          barThickness:'50',\r\n          borderColor: \"#98B9AB\"\r\n\r\n      }]\r\n    })\r\n  },[])\r\n  const top100Films = [\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n    { title: 'A-18' },\r\n  ];\r\n  console.log('abhi ')\r\n  return (\r\n    <div className={classes.root}>\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n          <Tab label=\"Houses\" {...a11yProps(0)} />\r\n          <Tab label=\"Plots\" {...a11yProps(1)} />\r\n        </Tabs>\r\n\r\n      <TabPanel value={value} index={0} className={classes.panel}>\r\n        <div className='house-menu'>\r\n          <div className='house-menu-left'>\r\n            <div>\r\n              <h1 style={{color:'black'}}>House Price Calculator</h1>\r\n            </div>\r\n            <div className='house-menu-inputs'>\r\n              <div className='house-menu-inputs-rows'>\r\n                  <div className='house-menu-inputs-row-1'>\r\n                    <TextField size='large' id=\"standard-basic\" variant=\"outlined\" label=\"Area Size\" />\r\n                    <div>\r\n                      <select name=\"size\" id=\"size\">\r\n                        <option value=\"Marla\">Marla</option>\r\n                        <option value=\"Kanal\">Kanal</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  <div className='house-menu-inputs-row-1-col-2'>\r\n                      {/* <TextField size='small' id=\"standard-basic\" label=\"Location e.g. F-10\" /> */}\r\n                      <Autocomplete\r\n\r\n                        id=\"free-solo-demo\"\r\n                        freeSolo\r\n                        options={top100Films.map((option) => option.title)}\r\n                        renderInput={(params) => (\r\n                          <TextField {...params} label=\"Location\" margin=\"normal\" variant=\"outlined\" />\r\n                        )}\r\n                      />\r\n                  </div>\r\n              </div>\r\n              <div className='house-menu-inputs-rows'>\r\n                <TextField type='number' size='large' id=\"standard-basic\" variant=\"outlined\" label=\"Bath(s)\" />\r\n                <TextField type='number' size='large' id=\"standard-basic\" variant=\"outlined\" label=\"Floor(s)\"  />\r\n              </div>\r\n              <div className='house-menu-inputs-rows'>\r\n                <TextField type='number' size='large' id=\"standard-basic\" variant=\"outlined\" label=\"Bed(s)\" />\r\n                <TextField size='large' id=\"standard-basic\" variant=\"outlined\" label=\"Built in (Year)\" /> \r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='house-menu-right'>\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Calculate\r\n            </Button>\r\n            <div className='calculated-price'>\r\n              Calculated Price: \r\n              <span>199 Rs.</span>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1} className={classes.panel}>\r\n        <div>\r\n          <div className='plot-graph'>\r\n            <PlotChart chartData={chartData} style={{ height:'2000px'}}/>\r\n          </div>\r\n          <div className='techinalAnal-table'>\r\n              <table className='techAnalysis'>\r\n                <h1>Technical Analysis</h1>\r\n                <tr className='techAnalysis-row'>\r\n                  <th>Name</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n                <tr className='techAnalysis-row'> \r\n                  <td>RSI Calculation</td>\r\n                  <td>Maria Anders</td>\r\n                </tr>\r\n                <tr className='techAnalysis-row'>\r\n                  <td>On-Balance Volume</td>\r\n                  <td>Francisco Chang</td>\r\n                </tr>\r\n                <tr className='techAnalysis-row'>\r\n                  <td>MACD Calculation</td>\r\n                  <td>Roland Mendel</td>\r\n                </tr>\r\n                <tr className='techAnalysis-row'>\r\n                  <td>Average Directional Index</td>\r\n                  <td>Helen Bennett</td>\r\n                </tr>\r\n                <tr className='techAnalysis-row'>\r\n                  <td>Distribution Line</td>\r\n                  <td>Yoshi Tannamuri</td>\r\n                </tr>\r\n                <tr className='techAnalysis-row'>\r\n                  <td>Magazzini Alimentari Riuniti</td>\r\n                  <td>Giovanni Rovelli</td>\r\n                </tr>\r\n              </table>\r\n          </div>\r\n\r\n        </div>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n} \r\n\r\n// import React from 'react';\r\n// import Button from \"@material-ui/core/Button\"\r\n\r\n// const Component = () => {\r\n//   return (\r\n//     <div>\r\n//        <Button style={{margin:0}} variant=\"outlined\" color=\"primary\">\r\n//         Primary\r\n//       </Button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default SimpleTabs;","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\AreaSidebarData.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\SidebarData.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PlotChart.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\ForgotPassword.js",["324","325"],"import React, { Component } from 'react'\r\nimport { Link,withRouter } from 'react-router-dom';\r\nimport '../StyleSheets/Login.css'\r\nimport '../StyleSheets/ForgotPassword.css'\r\nimport { connect } from 'react-redux';\r\nimport fire from '../config/fire'\r\n\r\nexport class ForgotPassword extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            success:false,\r\n            email: '',\r\n            inputError:'',\r\n            inputSuccess:'',\r\n        }\r\n    }\r\n\r\n    onChange = (event) =>{\r\n        const target = event.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n            this.setState({\r\n                [name]:value\r\n            })\r\n        }\r\n\r\n    onPasswordReset = ()=>{\r\n        const { email } = this.state\r\n        console.log('in')\r\n        fire.auth().sendPasswordResetEmail(email)\r\n        .then( ()=>{\r\n            this.setState({\r\n                inputSuccess: 'Check Your Email',\r\n                inputError:\"\",\r\n            })\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err.toString())\r\n            this.setState({\r\n                inputError:\"Invalid Email\",\r\n                inputSuccess:''\r\n            })\r\n        })\r\n    } \r\n \r\n\r\n    render() {\r\n        return (\r\n            <div class=\"fgp-main\" >\r\n                <form method=\"post\" class=\"loginForm\" >\r\n                    <div class='fgpData'>\r\n                        <h1>Password Reset</h1>\r\n                        <label for=\"email\">Enter Email</label>\r\n                        <input type=\"email\" name=\"email\" value = {this.state.email} id=\"email\" onChange={this.onChange} required></input>\r\n                        <span className=\"fgp-error\">\r\n                            {this.state.inputError}\r\n                        </span>\r\n                          \r\n                        <span className=\"fgp-success\">\r\n                            {this.state.inputSuccess}\r\n                        </span>\r\n                            \r\n                        \r\n            \r\n                        <div>\r\n                            <div class=\"button\" id=\"button-login\" onClick = {this.onPasswordReset}>\r\n                                <div id=\"circle\"></div>\r\n                                <p>Reset Password</p>\r\n                                {/* <Link to=\"/\">LOGIN</Link> */}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div class='fgp-links'>\r\n                            <Link id=\"fpass\" to='/Login'>Back to Login</Link>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </form>\r\n\r\n               \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ForgotPassword","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\StockMainPage.js",["326"],"import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabList from '@material-ui/lab/TabList';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport fire from '../config/fire'\r\nimport PropertyHeader from './PropertyHeader'\r\nimport '../StyleSheets/StockMainPage.css'\r\nimport ReactApexCharts from \"react-apexcharts\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport PredictedStock from './PredictedStock'\r\n\r\nimport Login from '../Login'\r\nimport { connect } from 'react-redux';\r\nconst useStyles = ((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: 'transparent',\r\n    },\r\n    tab:{\r\n        backgroundColor: 'white',\r\n        color:'black'\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n      },\r\n  }));\r\n\r\nexport class StockMainPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            // selectedValue:this.props.stock.inputText,\r\n            selectedValue: this.props.location.state,\r\n            page:0,\r\n            rowsPerPage:10,\r\n            rows:[],\r\n            value:'1',\r\n            series: [{\r\n                data: [{    \r\n                      x:0,\r\n                      y: []\r\n                    },\r\n                  //   {\r\n                  //   x: new Date(1538778600000),\r\n                  //   y: [6629.81, 6650.5, 6623.04, 6633.33]\r\n                  // },\r\n                ]\r\n              }],\r\n              options: {\r\n                chart: {\r\n                  type: 'candlestick',\r\n                  height: 1050,\r\n                  animations:{\r\n                      enabled:false,\r\n                      animateGradually: {\r\n                        enabled: false,\r\n                        delay: 150\r\n                    },\r\n                      dynamicAnimation:{\r\n                          enabled: true,\r\n                          speed: 100\r\n                      }\r\n                  }\r\n                },\r\n                title: {\r\n                  text: 'OHLC Chart',\r\n                  align: 'left'\r\n                },\r\n                xaxis: {\r\n                  type: 'datetime'\r\n                },\r\n                yaxis: {\r\n                  tooltip: {\r\n                    enabled: true\r\n                  }\r\n                }\r\n              },\r\n            \r\n        }\r\n    }\r\n    sendData = ()=>{\r\n        console.log('wrarara')\r\n        fire.database().ref('historicaldatafyp-default-rtdb/Stocks/ABCD').set({'key':'value'})\r\n        console.log('pit')\r\n    }\r\n    getHistoricalTableData = ()=>{\r\n        let tableData = []\r\n        console.log('inside table functionnn')\r\n        try{\r\n            fire.database().ref(`historicaldatafyp-default-rtdb/Stocks/${this.state.selectedValue}`).limitToLast(30).on('value', (snapshot)=>{\r\n                snapshot.forEach((openSnapShot)=>{\r\n                    // console.log('snappp',openSnapShot.val())\r\n                    var val = openSnapShot.val();\r\n                    console.log('val', val.Open)\r\n                    const ros = {open: val.Open,high:val.High,low:val.Low,close:val.Close,change:val.Change,volume:val.Volume,date:val.Date}\r\n                    tableData.push(ros)\r\n                    })\r\n                this.setState({\r\n                    rows : tableData\r\n                    // rows: getLast(data)      \r\n                })\r\n                // console.log('this.state.rows', this.state.rows)\r\n            })\r\n        }catch(e){\r\n            console.log('error',e)\r\n        }\r\n        \r\n    }\r\n\r\n    getHistoricalGraphData = ()=>{\r\n        let data = []\r\n        fire.database().ref(`historicaldatafyp-default-rtdb/Stocks/${this.state.selectedValue}`).on('value', (snapshot)=>{\r\n            snapshot.forEach((openSnapShot)=>{\r\n                var val = openSnapShot.val();\r\n                let data1 = []\r\n                data1.push( val.Open,val.High, val.Low,val.Close)\r\n                data.push({\r\n                    x: new Date(val.Date),\r\n                    y: data1}\r\n                )\r\n            })\r\n            this.setState({\r\n                series: [{\r\n                    data: \r\n                      data\r\n                }\r\n            ]      \r\n            })\r\n            console.log('in graph function')\r\n        })\r\n    }\r\n    componentDidMount (){\r\n        console.log('in mount')\r\n        console.log('from link', this.props.location.state)\r\n        this.getHistoricalTableData()\r\n        this.getHistoricalGraphData()\r\n        // this.sendData()\r\n    }\r\n   \r\n        handleRadioChange = (event) => {\r\n            // this.setState((selectedValue) => {\r\n            //     return {selectedValue: event.target.value}\r\n            //   })\r\n            this.setState({\r\n                ...this.state.selectedValue,\r\n                selectedValue: event.target.value\r\n            },()=>{\r\n                this.getHistoricalTableData()\r\n                this.getHistoricalGraphData()\r\n            })\r\n            \r\n            // this.forceUpdate()\r\n        };\r\n        handleChangePage = (event, newPage) => {\r\n            this.setState({\r\n                page:newPage\r\n            })\r\n        };\r\n    \r\n       handleChangeRowsPerPage = (event) => {\r\n        this.setState({\r\n            rowsPerPage:+event.target.value,\r\n            page:0\r\n        })\r\n      };\r\n\r\n    handleChange = (event, newValue) => {\r\n        this.setState({\r\n            value:newValue\r\n        })   \r\n      };\r\n\r\n      columns = [\r\n        {\r\n            id: 'date',\r\n            label: 'Date',\r\n            minWidth: 170,\r\n            \r\n        },\r\n        { \r\n            id: 'open',\r\n            label: 'Open', \r\n            minWidth: 170,\r\n            align: 'right',\r\n        },\r\n        {\r\n            id: 'high',\r\n            label: 'High',\r\n            minWidth: 170,\r\n            align: 'right',\r\n          \r\n        },\r\n        {\r\n            id: 'low',\r\n            label: 'Low',\r\n            minWidth: 170,\r\n            align: 'right',\r\n        \r\n        },\r\n        {\r\n            id: 'close',\r\n            label: 'Close',\r\n            minWidth: 170,\r\n            align: 'right',\r\n         \r\n        },\r\n        {\r\n            id: 'change',\r\n            label: 'Change',\r\n            minWidth: 170,\r\n            align: 'right',\r\n            \r\n        },\r\n        {\r\n            id: 'volume',\r\n            label: 'Volume',\r\n            minWidth: 170,\r\n            align: 'right',\r\n            \r\n        },\r\n        \r\n        ];\r\n\r\n    render() {\r\n        const isAuthenticated = this.props.user.isAuth\r\n        const {classes}= this.props\r\n        console.log('predicted radio value', this.state.selectedValue)\r\n        if(!isAuthenticated){\r\n            return(\r\n                <Login/>\r\n            )\r\n        }else{\r\n            return (\r\n                <div className={classes.root}>\r\n                    <PropertyHeader/>\r\n                    <div className=\"stock-main-heading\">\r\n                        <h1>STOCK PRICE PREDICTOR</h1>\r\n                    </div>\r\n                    <TabContext value={this.state.value}>\r\n                        <TabList onChange={this.handleChange} className={classes.tab} aria-label=\"simple tabs example\">\r\n                            <Tab label=\"HISTORICAL\" value=\"1\" />\r\n                            <Tab label=\"PREDICTED\" value=\"2\" />\r\n                        </TabList>\r\n                        <TabPanel value=\"1\" \r\n                        //style={{backgroundColor:'rgb(196, 196, 196)'}}\r\n                        >\r\n                            <div className='stock-page-main'>\r\n                                <div className='stock-buttons'>\r\n                                    <Button variant=\"contained\" color=\"secondary\">\r\n                                        Subscribe\r\n                                    </Button>\r\n                                    <Button variant=\"contained\" color=\"secondary\">\r\n                                        Alert\r\n                                    </Button>\r\n                                </div>\r\n                                \r\n                                <div className='graph-and-selector'>\r\n                                \r\n                                    <div className='stock-graph'>\r\n                                        <ReactApexCharts options={this.state.options} series={this.state.series} type=\"candlestick\"/>\r\n                                        <h2>Select a company</h2>\r\n                                        <div className='stock-radio-buttons'>\r\n                                            <label>\r\n                                                <Radio\r\n                                                    checked={this.state.selectedValue === 'APL'}\r\n                                                    onChange={this.handleRadioChange}\r\n                                                    value=\"APL\"\r\n                                                    name=\"radio-button-demo\"\r\n                                                    inputProps={{ 'aria-label': 'APL' }}\r\n                                                    color='primary'\r\n                                                />\r\n                                                APL\r\n                                            </label>\r\n                                            <label>\r\n                                                <Radio\r\n                                                    checked={this.state.selectedValue === 'BOP'}\r\n                                                    onChange={this.handleRadioChange}\r\n                                                    value=\"BOP\"\r\n                                                    name=\"radio-button-demo\"\r\n                                                    inputProps={{ 'aria-label': 'BOP' }}\r\n                                                    color='primary'\r\n                                                />\r\n                                                BOP\r\n                                            </label>\r\n                                            <label>\r\n                                                <Radio\r\n                                                    checked={this.state.selectedValue === 'GAIL'}\r\n                                                    onChange={this.handleRadioChange}\r\n                                                    value=\"GAIL\"\r\n                                                    name=\"radio-button-demo\"\r\n                                                    inputProps={{ 'aria-label': 'GAIL' }}\r\n                                                    color='primary'\r\n                                                />\r\n                                                GAIL\r\n                                            </label>\r\n                                            <label>\r\n                                                <Radio\r\n                                                    checked={this.state.selectedValue === 'HASCOL'}\r\n                                                    onChange={this.handleRadioChange}\r\n                                                    value=\"HASCOL\"\r\n                                                    name=\"radio-button-demo\"\r\n                                                    inputProps={{ 'aria-label': 'HASCOL' }}\r\n                                                    color='primary'\r\n                                                />\r\n                                                HASCOL\r\n                                            </label>\r\n                                            <label>\r\n                                                <Radio\r\n                                                    checked={this.state.selectedValue === 'HBL'}\r\n                                                    onChange={this.handleRadioChange}\r\n                                                    value=\"HBL\"\r\n                                                    name=\"radio-button-demo\"\r\n                                                    inputProps={{ 'aria-label': 'HBL' }}\r\n                                                    color='primary'\r\n                                                />\r\n                                                HBL\r\n                                            </label>\r\n                                            <label>\r\n                                                <Radio\r\n                                                    checked={this.state.selectedValue === 'HUBC'}\r\n                                                    onChange={this.handleRadioChange}\r\n                                                    value=\"HUBC\"\r\n                                                    name=\"radio-button-demo\"\r\n                                                    inputProps={{ 'aria-label': 'HUBC' }}\r\n                                                    color='primary'\r\n                                                />\r\n                                                HUBC\r\n                                            </label>\r\n                                            <label>\r\n                                                <Radio\r\n                                                    checked={this.state.selectedValue === 'KAPCO'}\r\n                                                    onChange={this.handleRadioChange}\r\n                                                    value=\"KAPCO\"\r\n                                                    name=\"radio-button-demo\"\r\n                                                    inputProps={{ 'aria-label': 'KAPCO' }}\r\n                                                    color='primary'\r\n                                                />\r\n                                                KAPCO\r\n                                            </label>\r\n                                            <label>\r\n                                                <Radio\r\n                                                    checked={this.state.selectedValue === 'KEL'}\r\n                                                    onChange={this.handleRadioChange}\r\n                                                    value=\"KEL\"\r\n                                                    name=\"radio-button-demo\"\r\n                                                    inputProps={{ 'aria-label': 'KEL' }}\r\n                                                    color='primary'\r\n                                                />\r\n                                                KEL\r\n                                            </label>\r\n                                            <label>\r\n                                                <Radio\r\n                                                    checked={this.state.selectedValue === 'PIAA'}\r\n                                                    onChange={this.handleRadioChange}\r\n                                                    value=\"PIAA\"\r\n                                                    name=\"radio-button-demo\"\r\n                                                    inputProps={{ 'aria-label': 'PIAA' }}\r\n                                                    color='primary'\r\n                                                />\r\n                                                PIAA\r\n                                            </label>\r\n                                            <label>\r\n                                                <Radio\r\n                                                    checked={this.state.selectedValue === 'PSMC'}\r\n                                                    onChange={this.handleRadioChange}\r\n                                                    value=\"PSMC\"\r\n                                                    name=\"radio-button-demo\"\r\n                                                    inputProps={{ 'aria-label': 'PSMC' }}\r\n                                                    color='primary'\r\n                                                />\r\n                                                PSMC\r\n                                            </label>\r\n                                            <label>\r\n                                                <Radio\r\n                                                    checked={this.state.selectedValue === 'SILK'}\r\n                                                    onChange={this.handleRadioChange}\r\n                                                    value=\"SILK\"\r\n                                                    name=\"radio-button-demo\"\r\n                                                    inputProps={{ 'aria-label': 'SILK' }}\r\n                                                    color='primary'\r\n                                                />\r\n                                                SILK\r\n                                            </label>\r\n                                            <label>\r\n                                                <Radio\r\n                                                    checked={this.state.selectedValue === 'SNGP'}\r\n                                                    onChange={this.handleRadioChange}\r\n                                                    value=\"SNGP\"\r\n                                                    name=\"radio-button-demo\"\r\n                                                    inputProps={{ 'aria-label': 'SNGP' }}\r\n                                                    color='primary'\r\n                                                />\r\n                                                SNGP\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                \r\n                                </div>\r\n                                <div style={{paddingTop:'5%', textAlign:'center'}}>\r\n                                    <h1>Company Latest Historical Prices</h1>\r\n                                </div>5\r\n                                <div className='stock-company-historical-table-div'>\r\n                                    <Paper >\r\n                                        <TableContainer className={classes.container}>\r\n                                            <Table stickyHeader aria-label=\"sticky table\">\r\n                                            <TableHead >\r\n                                                <TableRow>\r\n                                                {this.columns.map((column) => (\r\n                                                    <TableCell\r\n                                                    key={column.id}\r\n                                                    align={column.align}\r\n                                                    style={{ minWidth: column.minWidth, fontWeight:'800' }}\r\n                                                    >\r\n                                                    {column.label}\r\n                                                    </TableCell>\r\n                                                ))}\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody >\r\n                                                {this.state.rows.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map((row) => {\r\n                                                    // console.log('qwer',row)\r\n                                                return (\r\n                                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                                    {this.columns.map((column) => {\r\n                                                        const value = row[column.id];\r\n                                                        // console.log(\"coulum\", column)\r\n                                                        // console.log(\"value\", value)\r\n                                                        return (\r\n                                                        <TableCell key={column.id} align={column.align}>\r\n                                                            {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                                        </TableCell>\r\n                                                        );\r\n                                                    })}\r\n                                                    </TableRow>\r\n                                                );\r\n                                                })}\r\n                                            </TableBody>\r\n                                            </Table>\r\n                                        </TableContainer>\r\n                                        <TablePagination\r\n                                            rowsPerPageOptions={[10, 30, 100]}\r\n                                            component=\"div\"\r\n                                            count={this.state.rows.length}\r\n                                            rowsPerPage={this.state.rowsPerPage}\r\n                                            page={this.state.page}\r\n                                            onChangePage={this.handleChangePage}\r\n                                            onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                                        />\r\n                                        </Paper>\r\n                                </div>\r\n                            </div>\r\n                        </TabPanel>\r\n                        <TabPanel value=\"2\">\r\n                            Predicted Data\r\n                            <PredictedStock />\r\n                            <div className='techinalAnal-table'>\r\n                            <table>\r\n                                <h1>Technical Analysis</h1>\r\n                                <tr>\r\n                                <th>Name</th>\r\n                                <th>Action</th>\r\n                                </tr>\r\n                                <tr>\r\n                                <td>RSI Calculation</td>\r\n                                <td>Maria Anders</td>\r\n                                </tr>\r\n                                <tr>\r\n                                <td>On-Balance Volume</td>\r\n                                <td>Francisco Chang</td>\r\n                                </tr>\r\n                                <tr>\r\n                                <td>MACD Calculation</td>\r\n                                <td>Roland Mendel</td>\r\n                                </tr>\r\n                                <tr>\r\n                                <td>Average Directional Index</td>\r\n                                <td>Helen Bennett</td>\r\n                                </tr>\r\n                                <tr>\r\n                                <td>Distribution Line</td>\r\n                                <td>Yoshi Tannamuri</td>\r\n                                </tr>\r\n                                <tr>\r\n                                <td>Magazzini Alimentari Riuniti</td>\r\n                                <td>Giovanni Rovelli</td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                        </TabPanel>\r\n                    </TabContext>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        user: state.user,\r\n      stock: state.stock,\r\n    }\r\n  }\r\nexport default connect(mapStateToProps)(withStyles(useStyles)(StockMainPage))\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\HistoricalHooks.js",[],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\PredictedStock.js",["327","328","329","330","331","332","333","334","335","336","337","338","339","340"],"import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabList from '@material-ui/lab/TabList';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport fire from '../config/fire'\r\nimport PropertyHeader from './PropertyHeader'\r\nimport '../StyleSheets/StockMainPage.css'\r\nimport ReactApexCharts from \"react-apexcharts\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nconst useStyles = ((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: 'transparent',\r\n    },\r\n    tab:{\r\n        backgroundColor: 'white',\r\n        color:'black'\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n      },\r\n  }));\r\n\r\nexport class PredictedStock extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selectedValue:'APL',\r\n            page:0,\r\n            rowsPerPage:10,\r\n            rows:[],\r\n            value:'1',\r\n            series: [{\r\n                data: [{    \r\n                      x:0,\r\n                      y: []\r\n                    },\r\n                ]\r\n              }],\r\n              options: {\r\n                chart: {\r\n                  type: 'line',\r\n                  height: 1050\r\n                },\r\n                stroke: {\r\n                    width: 2\r\n                  },                  \r\n                title: {\r\n                  text: 'Predicted Line Chart',\r\n                  align: 'left'\r\n                },\r\n                xaxis: {\r\n                  type: 'datetime'\r\n                },\r\n                yaxis: {\r\n                  tooltip: {\r\n                    enabled: true\r\n                  }\r\n                }\r\n              },\r\n            \r\n        }\r\n    }\r\n    \r\n    getHistoricalTableData = ()=>{\r\n        let tableData = []\r\n        fire.database().ref(`historicaldatafyp-default-rtdb/Stocks/${this.state.selectedValue}`).limitToLast(30).on('value', (snapshot)=>{\r\n            snapshot.forEach((openSnapShot)=>{\r\n                // console.log('snappp',openSnapShot.val())\r\n                var val = openSnapShot.val();\r\n                // console.log('val', val.Open)\r\n                const ros = {open: val.Open,high:val.High,low:val.Low,close:val.Close,change:val.Change,volume:val.Volume,date:val.Date}\r\n                tableData.push(ros)\r\n                })\r\n            this.setState({\r\n                rows : tableData\r\n            })\r\n            console.log('this.state.rows', this.state.rows)\r\n        })\r\n    }\r\n\r\n    getHistoricalGraphData = ()=>{\r\n        let data = []\r\n        fire.database().ref(`historicaldatafyp-default-rtdb/Stocks/${this.state.selectedValue}`).on('value', (snapshot)=>{\r\n            snapshot.forEach((openSnapShot)=>{\r\n                var val = openSnapShot.val();\r\n                console.log('val.close', val.Close)\r\n                let data1 = []\r\n                data1.push(val.Close)\r\n                data.push({\r\n                    x: new Date(val.Date),\r\n                    y: data1}\r\n                )\r\n            })\r\n            this.setState({\r\n                series: [{\r\n                    data: \r\n                      data\r\n                }\r\n            ]      \r\n            })    \r\n            console.log('in graph function')\r\n        })\r\n    }\r\n    componentDidMount (){\r\n        console.log('in mount')\r\n        // this.getHistoricalTableData()\r\n        this.getHistoricalGraphData()\r\n        console.log('from link', this.props.location.state)\r\n    }\r\n   \r\n        handleRadioChange = (event) => {\r\n            this.setState({\r\n                ...this.state.selectedValue,\r\n                selectedValue: event.target.value\r\n            },()=>{\r\n                this.getHistoricalGraphData()\r\n                // this.getHistoricalTableData()\r\n            })\r\n            \r\n            // this.forceUpdate()\r\n        };\r\n      \r\n    handleChange = (event, newValue) => {\r\n        this.setState({\r\n            value:newValue\r\n        }) \r\n          \r\n      };\r\n\r\n    render() {\r\n        const {classes}= this.props\r\n        console.log('radio value', this.state.selectedValue)\r\n        return (\r\n            <div className={classes.root}>\r\n                <div className=\"stock-graph\">\r\n                    <ReactApexCharts options={this.state.options} series={this.state.series} type=\"line\"/>\r\n                        <div className='stock-radio-buttons'>\r\n                            <label>\r\n                                    <Radio\r\n                                        checked={this.state.selectedValue === 'APL'}\r\n                                        onChange={this.handleRadioChange}\r\n                                                value=\"APL\"\r\n                                                name=\"radio-button-demo\"\r\n                                                inputProps={{ 'aria-label': 'APL' }}\r\n                                                color='primary'\r\n                                            />\r\n                                            APL\r\n                                        </label>\r\n                                        <label>\r\n                                            <Radio\r\n                                                checked={this.state.selectedValue === 'BOP'}\r\n                                                onChange={this.handleRadioChange}\r\n                                                value=\"BOP\"\r\n                                                name=\"radio-button-demo\"\r\n                                                inputProps={{ 'aria-label': 'BOP' }}\r\n                                                color='primary'\r\n                                            />\r\n                                            BOP\r\n                                        </label>\r\n                                        <label>\r\n                                            <Radio\r\n                                                checked={this.state.selectedValue === 'GAIL'}\r\n                                                onChange={this.handleRadioChange}\r\n                                                value=\"GAIL\"\r\n                                                name=\"radio-button-demo\"\r\n                                                inputProps={{ 'aria-label': 'GAIL' }}\r\n                                                color='primary'\r\n                                            />\r\n                                            GAIL\r\n                                        </label>\r\n                                        <label>\r\n                                            <Radio\r\n                                                checked={this.state.selectedValue === 'HASCOL'}\r\n                                                onChange={this.handleRadioChange}\r\n                                                value=\"HASCOL\"\r\n                                                name=\"radio-button-demo\"\r\n                                                inputProps={{ 'aria-label': 'HASCOL' }}\r\n                                                color='primary'\r\n                                            />\r\n                                            HASCOL\r\n                                        </label>\r\n                                        <label>\r\n                                            <Radio\r\n                                                checked={this.state.selectedValue === 'HBL'}\r\n                                                onChange={this.handleRadioChange}\r\n                                                value=\"HBL\"\r\n                                                name=\"radio-button-demo\"\r\n                                                inputProps={{ 'aria-label': 'HBL' }}\r\n                                                color='primary'\r\n                                            />\r\n                                            HBL\r\n                                        </label>\r\n                                        <label>\r\n                                            <Radio\r\n                                                checked={this.state.selectedValue === 'HUBC'}\r\n                                                onChange={this.handleRadioChange}\r\n                                                value=\"HUBC\"\r\n                                                name=\"radio-button-demo\"\r\n                                                inputProps={{ 'aria-label': 'HUBC' }}\r\n                                                color='primary'\r\n                                            />\r\n                                            HUBC\r\n                                        </label>\r\n                                        <label>\r\n                                            <Radio\r\n                                                checked={this.state.selectedValue === 'KAPCO'}\r\n                                                onChange={this.handleRadioChange}\r\n                                                value=\"KAPCO\"\r\n                                                name=\"radio-button-demo\"\r\n                                                inputProps={{ 'aria-label': 'KAPCO' }}\r\n                                                color='primary'\r\n                                            />\r\n                                            KAPCO\r\n                                        </label>\r\n                                        <label>\r\n                                            <Radio\r\n                                                checked={this.state.selectedValue === 'KEL'}\r\n                                                onChange={this.handleRadioChange}\r\n                                                value=\"KEL\"\r\n                                                name=\"radio-button-demo\"\r\n                                                inputProps={{ 'aria-label': 'KEL' }}\r\n                                                color='primary'\r\n                                            />\r\n                                            KEL\r\n                                        </label>\r\n                                        <label>\r\n                                            <Radio\r\n                                                checked={this.state.selectedValue === 'PIAA'}\r\n                                                onChange={this.handleRadioChange}\r\n                                                value=\"PIAA\"\r\n                                                name=\"radio-button-demo\"\r\n                                                inputProps={{ 'aria-label': 'PIAA' }}\r\n                                                color='primary'\r\n                                            />\r\n                                            PIAA\r\n                                        </label>\r\n                                        <label>\r\n                                            <Radio\r\n                                                checked={this.state.selectedValue === 'PSMC'}\r\n                                                onChange={this.handleRadioChange}\r\n                                                value=\"PSMC\"\r\n                                                name=\"radio-button-demo\"\r\n                                                inputProps={{ 'aria-label': 'PSMC' }}\r\n                                                color='primary'\r\n                                            />\r\n                                            PSMC\r\n                                        </label>\r\n                                        <label>\r\n                                            <Radio\r\n                                                checked={this.state.selectedValue === 'SILK'}\r\n                                                onChange={this.handleRadioChange}\r\n                                                value=\"SILK\"\r\n                                                name=\"radio-button-demo\"\r\n                                                inputProps={{ 'aria-label': 'SILK' }}\r\n                                                color='primary'\r\n                                            />\r\n                                            SILK\r\n                                        </label>\r\n                                        <label>\r\n                                            <Radio\r\n                                                checked={this.state.selectedValue === 'SNGP'}\r\n                                                onChange={this.handleRadioChange}\r\n                                                value=\"SNGP\"\r\n                                                name=\"radio-button-demo\"\r\n                                                inputProps={{ 'aria-label': 'SNGP' }}\r\n                                                color='primary'\r\n                                            />\r\n                                            SNGP\r\n                                        </label>\r\n                                    </div>\r\n                                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(PredictedStock)\r\n","E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\StockTable.js",["341","342","343"],"E:\\React Projects\\Firebase\\INVESCO\\client\\src\\Components\\DeleteAccount.js",["344"],"import React, { Component } from 'react'\r\nimport '../StyleSheets/ChangeEmail.css'\r\nimport PropertyHeader from './PropertyHeader'\r\nimport fire from '../config/fire'\r\nimport Button from '@material-ui/core/Button';\r\nclass DeleteAccount extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            prevEmail: '',\r\n            Epassword: '',\r\n            msg:'',\r\n            errMsg:'',\r\n            verMsg:''\r\n        }\r\n    }\r\n    onChange = (event) =>{\r\n        const target = event.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n            this.setState({\r\n                [name]:value\r\n            })\r\n        }\r\n    \r\n    deleteAccount = () => {\r\n        const {prevEmail, Epassword} = this.state;\r\n        const user = fire.auth().currentUser\r\n        fire.auth().signInWithEmailAndPassword(prevEmail,Epassword)\r\n        .then(()=>{\r\n            const cUser = fire.auth().currentUser\r\n            if(user==cUser){\r\n                cUser.delete().then(()=>{\r\n                }).catch((e)=>{\r\n                    this.setState({\r\n                        errMsg:e.message\r\n                    })\r\n                })\r\n                alert('Your Account has been deleted. Logging you out.')\r\n                this.props.history.push('/login')\r\n            }\r\n            else{\r\n                alert('For Security Purposes we are logging you out');\r\n                fire.auth().signOut();\r\n                this.props.history.push('/login');\r\n            }\r\n        }).catch((e)=>{\r\n            this.setState({\r\n                errMsg:e.message\r\n            })\r\n        })\r\n    }\r\n\r\n    \r\n    resetInputs = ()=>{\r\n        this.setState({\r\n            Epassword:'',\r\n            prevEmail:'',\r\n            msg:'',\r\n            errMsg:'',\r\n        })\r\n    }\r\n    validate = ()=>{\r\n        const {newEmail} = this.state\r\n        const emailRegex = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        if(!emailRegex.test(newEmail)){\r\n            this.setState({\r\n                errMsg : 'Enter a Valid New Email'\r\n            })\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    render() {\r\n        console.log(this.state)\r\n        return (\r\n            <div>\r\n                <PropertyHeader/>\r\n                <div>\r\n                    <div className=\"change-field-heading\">\r\n                        <h1>Delete Your Account</h1>\r\n                    </div>\r\n                    <div className=\"change-field-inputs\">\r\n                        <div className=\"change-field-inputs-content\">\r\n                            <label for=\"prevEmail\">Enter Email</label>\r\n                            <input type=\"email\" name=\"prevEmail\" value = {this.state.prevEmail} id=\"prevEmail\" onChange={this.onChange} required></input>\r\n                        </div>\r\n                        <div className=\"change-field-inputs-content\">    \r\n                            <label  for=\"Epassword\">Enter Password</label>\r\n                            <input type=\"password\" name=\"Epassword\" value = {this.state.Epassword} id=\"Epassword\" onChange={this.onChange} required></input>\r\n                        </div>\r\n                        <div className=\"change-field-inputs-content\">\r\n                        <Button variant=\"contained\" color=\"primary\" onClick = {this.deleteAccount}>\r\n                            Delete\r\n                        </Button>\r\n                        </div>\r\n                        \r\n                        {/* <div class=\"change-field-button\" onClick = {this.deleteAccount}>\r\n                                <p>Delete</p>\r\n                            </div> */}\r\n                        \r\n                        <div className='msg-display'>\r\n                            <span style={{color:'green',fontWeight:'bold',fontSize:'18px'}}>{this.state.msg}</span>\r\n                            <span style={{color:'red',fontWeight:'bold',fontSize:'18px'}}>{this.state.errMsg}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DeleteAccount\r\n",{"ruleId":"345","severity":1,"message":"346","line":17,"column":3,"nodeType":"347","messageId":"348","endLine":32,"endColumn":4},{"ruleId":"349","severity":1,"message":"350","line":25,"column":7,"nodeType":"351","messageId":"352","endLine":31,"endColumn":16},{"ruleId":"353","severity":1,"message":"354","line":38,"column":7,"nodeType":"355","messageId":"356","endLine":38,"endColumn":15},{"ruleId":"357","replacedBy":"358"},{"ruleId":"359","replacedBy":"360"},{"ruleId":"353","severity":1,"message":"361","line":9,"column":8,"nodeType":"355","messageId":"356","endLine":9,"endColumn":31},{"ruleId":"353","severity":1,"message":"362","line":10,"column":43,"nodeType":"355","messageId":"356","endLine":10,"endColumn":49},{"ruleId":"353","severity":1,"message":"363","line":2,"column":10,"nodeType":"355","messageId":"356","endLine":2,"endColumn":29},{"ruleId":"353","severity":1,"message":"364","line":112,"column":13,"nodeType":"355","messageId":"356","endLine":112,"endColumn":25},{"ruleId":"365","severity":1,"message":"366","line":135,"column":37,"nodeType":"367","messageId":"368","endLine":135,"endColumn":39},{"ruleId":"353","severity":1,"message":"369","line":156,"column":16,"nodeType":"355","messageId":"356","endLine":156,"endColumn":25},{"ruleId":"353","severity":1,"message":"370","line":157,"column":13,"nodeType":"355","messageId":"356","endLine":157,"endColumn":18},{"ruleId":"371","severity":1,"message":"372","line":213,"column":74,"nodeType":"373","endLine":213,"endColumn":101},{"ruleId":"371","severity":1,"message":"372","line":213,"column":115,"nodeType":"373","endLine":213,"endColumn":139},{"ruleId":"371","severity":1,"message":"372","line":217,"column":21,"nodeType":"373","endLine":217,"endColumn":33},{"ruleId":"353","severity":1,"message":"374","line":2,"column":10,"nodeType":"355","messageId":"356","endLine":2,"endColumn":14},{"ruleId":"353","severity":1,"message":"375","line":22,"column":26,"nodeType":"355","messageId":"356","endLine":22,"endColumn":39},{"ruleId":"353","severity":1,"message":"376","line":27,"column":8,"nodeType":"355","messageId":"356","endLine":27,"endColumn":12},{"ruleId":"353","severity":1,"message":"377","line":28,"column":7,"nodeType":"355","messageId":"356","endLine":28,"endColumn":12},{"ruleId":"378","severity":1,"message":"379","line":132,"column":140,"nodeType":"380","endLine":132,"endColumn":164},{"ruleId":"378","severity":1,"message":"379","line":232,"column":110,"nodeType":"380","endLine":232,"endColumn":134},{"ruleId":"381","severity":1,"message":"382","line":233,"column":37,"nodeType":"373","endLine":233,"endColumn":62},{"ruleId":"378","severity":1,"message":"379","line":239,"column":139,"nodeType":"380","endLine":239,"endColumn":161},{"ruleId":"378","severity":1,"message":"379","line":249,"column":111,"nodeType":"380","endLine":249,"endColumn":135},{"ruleId":"381","severity":1,"message":"382","line":250,"column":37,"nodeType":"373","endLine":250,"endColumn":65},{"ruleId":"378","severity":1,"message":"379","line":256,"column":142,"nodeType":"380","endLine":256,"endColumn":164},{"ruleId":"378","severity":1,"message":"379","line":267,"column":110,"nodeType":"380","endLine":267,"endColumn":134},{"ruleId":"381","severity":1,"message":"382","line":268,"column":37,"nodeType":"373","endLine":268,"endColumn":59},{"ruleId":"378","severity":1,"message":"379","line":274,"column":139,"nodeType":"380","endLine":274,"endColumn":161},{"ruleId":"353","severity":1,"message":"361","line":5,"column":8,"nodeType":"355","messageId":"356","endLine":5,"endColumn":31},{"ruleId":"353","severity":1,"message":"374","line":2,"column":9,"nodeType":"355","messageId":"356","endLine":2,"endColumn":13},{"ruleId":"383","severity":1,"message":"384","line":52,"column":25,"nodeType":"373","endLine":52,"endColumn":55},{"ruleId":"353","severity":1,"message":"385","line":2,"column":15,"nodeType":"355","messageId":"356","endLine":2,"endColumn":25},{"ruleId":"353","severity":1,"message":"386","line":5,"column":10,"nodeType":"355","messageId":"356","endLine":5,"endColumn":17},{"ruleId":"387","severity":1,"message":"388","line":55,"column":57,"nodeType":"389","messageId":"390","endLine":55,"endColumn":59},{"ruleId":"365","severity":1,"message":"391","line":56,"column":59,"nodeType":"367","messageId":"368","endLine":56,"endColumn":61},{"ruleId":"353","severity":1,"message":"392","line":4,"column":8,"nodeType":"355","messageId":"356","endLine":4,"endColumn":16},{"ruleId":"381","severity":1,"message":"382","line":27,"column":9,"nodeType":"373","endLine":27,"endColumn":59},{"ruleId":"381","severity":1,"message":"382","line":40,"column":9,"nodeType":"373","endLine":40,"endColumn":54},{"ruleId":"381","severity":1,"message":"382","line":51,"column":5,"nodeType":"373","endLine":51,"endColumn":54},{"ruleId":"353","severity":1,"message":"393","line":4,"column":8,"nodeType":"355","messageId":"356","endLine":4,"endColumn":19},{"ruleId":"353","severity":1,"message":"394","line":4,"column":8,"nodeType":"355","messageId":"356","endLine":4,"endColumn":14},{"ruleId":"353","severity":1,"message":"395","line":10,"column":8,"nodeType":"355","messageId":"356","endLine":10,"endColumn":14},{"ruleId":"345","severity":1,"message":"346","line":17,"column":3,"nodeType":"347","messageId":"348","endLine":32,"endColumn":4},{"ruleId":"349","severity":1,"message":"350","line":25,"column":7,"nodeType":"351","messageId":"352","endLine":31,"endColumn":16},{"ruleId":"353","severity":1,"message":"354","line":53,"column":7,"nodeType":"355","messageId":"356","endLine":53,"endColumn":15},{"ruleId":"357","replacedBy":"396"},{"ruleId":"359","replacedBy":"397"},{"ruleId":"353","severity":1,"message":"361","line":9,"column":8,"nodeType":"355","messageId":"356","endLine":9,"endColumn":31},{"ruleId":"353","severity":1,"message":"362","line":10,"column":43,"nodeType":"355","messageId":"356","endLine":10,"endColumn":49},{"ruleId":"353","severity":1,"message":"398","line":17,"column":8,"nodeType":"355","messageId":"356","endLine":17,"endColumn":23},{"ruleId":"353","severity":1,"message":"363","line":2,"column":10,"nodeType":"355","messageId":"356","endLine":2,"endColumn":29},{"ruleId":"353","severity":1,"message":"364","line":120,"column":13,"nodeType":"355","messageId":"356","endLine":120,"endColumn":25},{"ruleId":"365","severity":1,"message":"366","line":143,"column":37,"nodeType":"367","messageId":"368","endLine":143,"endColumn":39},{"ruleId":"353","severity":1,"message":"369","line":164,"column":16,"nodeType":"355","messageId":"356","endLine":164,"endColumn":25},{"ruleId":"353","severity":1,"message":"370","line":165,"column":13,"nodeType":"355","messageId":"356","endLine":165,"endColumn":18},{"ruleId":"371","severity":1,"message":"372","line":222,"column":82,"nodeType":"373","endLine":222,"endColumn":109},{"ruleId":"371","severity":1,"message":"372","line":222,"column":123,"nodeType":"373","endLine":222,"endColumn":147},{"ruleId":"371","severity":1,"message":"372","line":226,"column":29,"nodeType":"373","endLine":226,"endColumn":41},{"ruleId":"353","severity":1,"message":"399","line":4,"column":8,"nodeType":"355","messageId":"356","endLine":4,"endColumn":14},{"ruleId":"353","severity":1,"message":"375","line":22,"column":26,"nodeType":"355","messageId":"356","endLine":22,"endColumn":39},{"ruleId":"353","severity":1,"message":"400","line":32,"column":8,"nodeType":"355","messageId":"356","endLine":32,"endColumn":23},{"ruleId":"353","severity":1,"message":"401","line":33,"column":8,"nodeType":"355","messageId":"356","endLine":33,"endColumn":12},{"ruleId":"353","severity":1,"message":"402","line":34,"column":8,"nodeType":"355","messageId":"356","endLine":34,"endColumn":12},{"ruleId":"353","severity":1,"message":"403","line":35,"column":8,"nodeType":"355","messageId":"356","endLine":35,"endColumn":15},{"ruleId":"353","severity":1,"message":"404","line":36,"column":8,"nodeType":"355","messageId":"356","endLine":36,"endColumn":16},{"ruleId":"353","severity":1,"message":"405","line":37,"column":8,"nodeType":"355","messageId":"356","endLine":37,"endColumn":20},{"ruleId":"353","severity":1,"message":"406","line":39,"column":8,"nodeType":"355","messageId":"356","endLine":39,"endColumn":18},{"ruleId":"353","severity":1,"message":"377","line":43,"column":7,"nodeType":"355","messageId":"356","endLine":43,"endColumn":12},{"ruleId":"353","severity":1,"message":"407","line":141,"column":13,"nodeType":"355","messageId":"356","endLine":141,"endColumn":21},{"ruleId":"353","severity":1,"message":"408","line":149,"column":15,"nodeType":"355","messageId":"356","endLine":149,"endColumn":19},{"ruleId":"378","severity":1,"message":"379","line":177,"column":130,"nodeType":"380","endLine":177,"endColumn":154},{"ruleId":"378","severity":1,"message":"379","line":278,"column":110,"nodeType":"380","endLine":278,"endColumn":134},{"ruleId":"381","severity":1,"message":"382","line":279,"column":37,"nodeType":"373","endLine":279,"endColumn":62},{"ruleId":"378","severity":1,"message":"379","line":285,"column":154,"nodeType":"380","endLine":285,"endColumn":176},{"ruleId":"378","severity":1,"message":"379","line":295,"column":111,"nodeType":"380","endLine":295,"endColumn":135},{"ruleId":"381","severity":1,"message":"382","line":296,"column":37,"nodeType":"373","endLine":296,"endColumn":65},{"ruleId":"378","severity":1,"message":"379","line":302,"column":142,"nodeType":"380","endLine":302,"endColumn":164},{"ruleId":"378","severity":1,"message":"379","line":313,"column":110,"nodeType":"380","endLine":313,"endColumn":134},{"ruleId":"381","severity":1,"message":"382","line":314,"column":37,"nodeType":"373","endLine":314,"endColumn":59},{"ruleId":"378","severity":1,"message":"379","line":320,"column":139,"nodeType":"380","endLine":320,"endColumn":161},{"ruleId":"353","severity":1,"message":"361","line":5,"column":8,"nodeType":"355","messageId":"356","endLine":5,"endColumn":31},{"ruleId":"353","severity":1,"message":"374","line":2,"column":9,"nodeType":"355","messageId":"356","endLine":2,"endColumn":13},{"ruleId":"383","severity":1,"message":"384","line":63,"column":25,"nodeType":"373","endLine":63,"endColumn":55},{"ruleId":"353","severity":1,"message":"409","line":5,"column":18,"nodeType":"355","messageId":"356","endLine":5,"endColumn":25},{"ruleId":"353","severity":1,"message":"410","line":28,"column":26,"nodeType":"355","messageId":"356","endLine":28,"endColumn":34},{"ruleId":"365","severity":1,"message":"391","line":44,"column":21,"nodeType":"367","messageId":"368","endLine":44,"endColumn":23},{"ruleId":"353","severity":1,"message":"411","line":58,"column":47,"nodeType":"355","messageId":"356","endLine":58,"endColumn":59},{"ruleId":"365","severity":1,"message":"391","line":64,"column":25,"nodeType":"367","messageId":"368","endLine":64,"endColumn":27},{"ruleId":"365","severity":1,"message":"366","line":115,"column":34,"nodeType":"367","messageId":"368","endLine":115,"endColumn":36},{"ruleId":"387","severity":1,"message":"388","line":55,"column":57,"nodeType":"389","messageId":"390","endLine":55,"endColumn":59},{"ruleId":"365","severity":1,"message":"391","line":56,"column":59,"nodeType":"367","messageId":"368","endLine":56,"endColumn":61},{"ruleId":"353","severity":1,"message":"401","line":14,"column":8,"nodeType":"355","messageId":"356","endLine":14,"endColumn":12},{"ruleId":"353","severity":1,"message":"392","line":4,"column":8,"nodeType":"355","messageId":"356","endLine":4,"endColumn":16},{"ruleId":"381","severity":1,"message":"382","line":27,"column":9,"nodeType":"373","endLine":27,"endColumn":59},{"ruleId":"381","severity":1,"message":"382","line":40,"column":9,"nodeType":"373","endLine":40,"endColumn":54},{"ruleId":"381","severity":1,"message":"382","line":51,"column":5,"nodeType":"373","endLine":51,"endColumn":54},{"ruleId":"353","severity":1,"message":"394","line":4,"column":8,"nodeType":"355","messageId":"356","endLine":4,"endColumn":14},{"ruleId":"353","severity":1,"message":"385","line":2,"column":15,"nodeType":"355","messageId":"356","endLine":2,"endColumn":25},{"ruleId":"353","severity":1,"message":"386","line":5,"column":10,"nodeType":"355","messageId":"356","endLine":5,"endColumn":17},{"ruleId":"353","severity":1,"message":"394","line":3,"column":8,"nodeType":"355","messageId":"356","endLine":3,"endColumn":14},{"ruleId":"353","severity":1,"message":"394","line":3,"column":8,"nodeType":"355","messageId":"356","endLine":3,"endColumn":14},{"ruleId":"353","severity":1,"message":"412","line":4,"column":8,"nodeType":"355","messageId":"356","endLine":4,"endColumn":11},{"ruleId":"353","severity":1,"message":"413","line":5,"column":8,"nodeType":"355","messageId":"356","endLine":5,"endColumn":18},{"ruleId":"353","severity":1,"message":"414","line":6,"column":8,"nodeType":"355","messageId":"356","endLine":6,"endColumn":15},{"ruleId":"353","severity":1,"message":"415","line":7,"column":8,"nodeType":"355","messageId":"356","endLine":7,"endColumn":16},{"ruleId":"353","severity":1,"message":"416","line":9,"column":8,"nodeType":"355","messageId":"356","endLine":9,"endColumn":22},{"ruleId":"353","severity":1,"message":"417","line":13,"column":8,"nodeType":"355","messageId":"356","endLine":13,"endColumn":13},{"ruleId":"353","severity":1,"message":"418","line":14,"column":8,"nodeType":"355","messageId":"356","endLine":14,"endColumn":13},{"ruleId":"353","severity":1,"message":"419","line":15,"column":8,"nodeType":"355","messageId":"356","endLine":15,"endColumn":17},{"ruleId":"353","severity":1,"message":"420","line":16,"column":8,"nodeType":"355","messageId":"356","endLine":16,"endColumn":17},{"ruleId":"353","severity":1,"message":"421","line":17,"column":8,"nodeType":"355","messageId":"356","endLine":17,"endColumn":22},{"ruleId":"353","severity":1,"message":"422","line":18,"column":8,"nodeType":"355","messageId":"356","endLine":18,"endColumn":17},{"ruleId":"353","severity":1,"message":"423","line":19,"column":8,"nodeType":"355","messageId":"356","endLine":19,"endColumn":23},{"ruleId":"353","severity":1,"message":"424","line":20,"column":8,"nodeType":"355","messageId":"356","endLine":20,"endColumn":16},{"ruleId":"353","severity":1,"message":"417","line":9,"column":8,"nodeType":"355","messageId":"356","endLine":9,"endColumn":13},{"ruleId":"353","severity":1,"message":"425","line":37,"column":13,"nodeType":"355","messageId":"356","endLine":37,"endColumn":17},{"ruleId":"353","severity":1,"message":"425","line":64,"column":16,"nodeType":"355","messageId":"356","endLine":64,"endColumn":20},{"ruleId":"365","severity":1,"message":"391","line":32,"column":20,"nodeType":"367","messageId":"368","endLine":32,"endColumn":22},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-unused-vars","'myLogger' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["426"],"no-negated-in-lhs",["427"],"'RealEstateAreaSearchBar' is defined but never used.","'Switch' is defined but never used.","'RiThunderstormsFill' is defined but never used.","'checkedError' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'isLoading' is assigned a value but never used.","'token' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","'ThemeProvider' is defined but never used.","'fire' is defined but never used.","'theme' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'withRouter' is defined but never used.","'connect' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '===' and instead saw '=='.","'stockpic' is defined but never used.","'ChangeEmail' is defined but never used.","'AppBar' is defined but never used.","'Button' is defined but never used.",["426"],["427"],"'HistoricalHooks' is defined but never used.","'Footer' is defined but never used.","'SwipeableDrawer' is defined but never used.","'clsx' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'StockTable' is defined but never used.","'divStyle' is assigned a value but never used.","'user' is assigned a value but never used.","'Popover' is defined but never used.","'newEmail' is assigned a value but never used.","'cNewPassword' is assigned a value but never used.","'Tab' is defined but never used.","'TabContext' is defined but never used.","'TabList' is defined but never used.","'TabPanel' is defined but never used.","'PropertyHeader' is defined but never used.","'Paper' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TablePagination' is defined but never used.","'TableRow' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]